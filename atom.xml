<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[编程在继续]]></title>
  <subtitle><![CDATA[编程在继续，刘祥's blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-11-19T05:06:15.173Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[刘祥@赛学霸]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[科学上网 ShadowSocks(免费)]]></title>
    <link href="http://yoursite.com/2016/11/19/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%20ShadowSocks(%E5%85%8D%E8%B4%B9)/"/>
    <id>http://yoursite.com/2016/11/19/科学上网 ShadowSocks(免费)/</id>
    <published>2016-11-18T16:00:00.000Z</published>
    <updated>2016-11-19T05:06:15.173Z</updated>
    <content type="html"><![CDATA[<h1 id="客户端下载">客户端下载</h1><p><code>地址</code>  <a href="https://www.mianvpn.com/client.html" target="_blank" rel="external">https://www.mianvpn.com/client.html</a></p>
<!--
-->
<p> <img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/58373972.jpg" alt=""></p>
<h1 id="使用">使用</h1><ul>
<li>打开互联网提供的免费ss<br><a href="https://www.mianvpn.com/index.html#free" target="_blank" rel="external">https://www.mianvpn.com/index.html#free</a></li>
</ul>
<!-- -->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/34802253.jpg" alt=""></p>
<p>注意 <code>免费试用节点6小时更换一次密码与端口，请勿用于商业用途</code></p>
<ul>
<li>查看配置</li>
</ul>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/17683825.jpg" alt=""></p>
<ul>
<li><p><code>方式一</code>二维码扫码</p>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/40930419.jpg" alt=""></p>
</li>
<li><p><code>方式二</code>手动填写</p>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/72174072.jpg" alt=""></p>
</li>
</ul>
<ul>
<li>开启全局代理</li>
</ul>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/17445067.jpg" alt=""></p>
<h1 id="验证">验证</h1><!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/51446865.jpg" alt=""></p>
<hr>
<h1 id="手机客户端">手机客户端</h1><!-- 
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/6264520.jpg" alt=""></p>
<p>中文名: 影梭<br>源地址: <a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="external">https://github.com/shadowsocks/shadowsocks-android/releases</a></p>
<ul>
<li>效果</li>
</ul>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/5282729.jpg" alt=""></p>
<hr>
<h1 id="浏览器插件,推荐另一款快速安全通道">浏览器插件,推荐另一款<code>快速安全通道</code></h1><p><a href="https://faststunnel.cc/" target="_blank" rel="external">https://faststunnel.cc/</a><br><!--
--><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/66641490.jpg" alt=""></p>
<ul>
<li>使用 &amp; 效果</li>
</ul>
<!--
  -->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/15101991.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="客户端下载">客户端下载</h1><p><code>地址</code>  <a href="https://www.mianvpn.com/client.html" target="_blank" rel="external">https://www.mianvp]]>
    </summary>
    
      <category term="科学上网" scheme="http://yoursite.com/tags/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javaScript判断实时网络]]></title>
    <link href="http://yoursite.com/2016/11/18/javaScript%E5%88%A4%E6%96%AD%E5%AE%9E%E6%97%B6%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2016/11/18/javaScript判断实时网络/</id>
    <published>2016-11-17T16:00:02.000Z</published>
    <updated>2016-11-19T04:15:17.686Z</updated>
    <content type="html"><![CDATA[<h1 id="示例">示例</h1><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">fetch(<span class="string">"http://test1.wosaitech.cn/sxb_service/service/sys/versionQuery"</span>)</span><br><span class="line">.<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">(response)</span> &#123;</span></span><br><span class="line">  <span class="keyword">return</span> <span class="transposed_variable">response.</span>json();</span><br><span class="line">&#125;).<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span><span class="params">(data)</span> &#123;</span></span><br><span class="line">  <span class="transposed_variable">console.</span>log(<span class="string">'连接中..'</span>,data);</span><br><span class="line">&#125;).<span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span><span class="params">(e)</span> &#123;</span></span><br><span class="line">  <span class="transposed_variable">console.</span>log(<span class="string">"断网了"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="使用">使用</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 打开知识点</span><br><span class="line">* @param point</span><br><span class="line">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f_openPoint</span>(<span class="params">point, index</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.fetch) &#123;</span><br><span class="line">    fetch(<span class="built_in">window</span>._config.domain_name + <span class="string">"/sys/versionQuery"</span>)</span><br><span class="line">      .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> response.json();</span><br><span class="line">      &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      f_openPoint_hanlder(point, index);</span><br><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"网络连接失败 ,请检查网络"</span>);</span><br><span class="line">      $ionicLoading.show(&#123;template: <span class="string">"网络连接失败 ,请检查网络"</span>&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    f_openPoint_hanlder(point, index);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="封装">封装</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$httpFactory</span>.versionQuery_1802().<span class="keyword">then</span>(<span class="keyword">function</span> (res) &#123;</span><br><span class="line">  f_openPoint_hanlder(point, index);</span><br><span class="line">&#125;).<span class="keyword">catch</span>(<span class="keyword">function</span> (e) &#123;</span><br><span class="line">  <span class="variable">$ionicLoading</span>.show(&#123;template: <span class="string">"网络连接失败 ,请检查网络"</span>&#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Polyfill">Polyfill</h1><p><code>传统 Ajax 已死，Fetch 永生 - 会影 - SegmentFault</code><br><a href="https://segmentfault.com/a/1190000003810652" target="_blank" rel="external">https://segmentfault.com/a/1190000003810652</a></p>
<p><code>兼容IE6的fetch polyfill - javascript魔法师 - SegmentFault</code><br><a href="https://segmentfault.com/a/1190000006220369" target="_blank" rel="external">https://segmentfault.com/a/1190000006220369</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="示例">示例</h1><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</]]>
    </summary>
    
      <category term="判断实时网络" scheme="http://yoursite.com/tags/%E5%88%A4%E6%96%AD%E5%AE%9E%E6%97%B6%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic隐藏系统返回键 & 自定义返回键]]></title>
    <link href="http://yoursite.com/2016/11/18/ionic%E9%9A%90%E8%97%8F%E7%B3%BB%E7%BB%9F%E8%BF%94%E5%9B%9E%E9%94%AE%20&%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%94%E5%9B%9E%E9%94%AE/"/>
    <id>http://yoursite.com/2016/11/18/ionic隐藏系统返回键 & 自定义返回键/</id>
    <published>2016-11-17T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.679Z</updated>
    <content type="html"><![CDATA[<h1 id="hide-back-button">hide-back-button</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ion-view</span> <span class="attribute">view-title</span>=<span class="value">"活动中心"</span> <span class="attribute">class</span>=<span class="value">"appBg page-myMessage"</span> <span class="attribute">hide-back-button</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="title">ion-nav-buttons</span> <span class="attribute">side</span>=<span class="value">"left"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"button ion-ios-arrow-left back "</span> <span class="attribute">style</span>=<span class="value">"font-size: 30px;border: 0;"</span> <span class="attribute">ng-click</span>=<span class="value">"navBack()"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">ion-nav-buttons</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="title">ion-content</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>更好的样式(Button相比i具备自动居中的能力,整体布局与ionic自有机制保持一致)<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ion-view</span> <span class="attribute">class</span>=<span class="value">"feedback"</span> <span class="attribute">view-title</span>=<span class="value">"帮助与反馈"</span> <span class="attribute">hide-back-button</span>=<span class="value">"true"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="title">ion-nav-buttons</span> <span class="attribute">side</span>=<span class="value">"left"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;i class="button ion-ios-arrow-left back " style="font-size: 30px;border: 0;" ng-click="navBack()"&gt;&lt;/i&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span> <span class="attribute">ng-click</span>=<span class="value">"navBack()"</span> <span class="attribute">class</span>=<span class="value">"button buttons button-clear header-item"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">i</span> <span class="attribute">class</span>=<span class="value">"icon ion-ios-arrow-back"</span>&gt;</span><span class="tag">&lt;/<span class="title">i</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"back-text"</span> <span class="attribute">style</span>=<span class="value">"transition-duration: 0ms; transform: translate3d(0px, 0px, 0px);"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"default-title"</span>&gt;</span>&amp;emsp;&amp;emsp;<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;/<span class="title">ion-nav-buttons</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="tag">&lt;<span class="title">ion-nav-buttons</span> <span class="attribute">side</span>=<span class="value">"right"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span> <span class="attribute">class</span>=<span class="value">"button button-clear icon"</span> <span class="attribute">ng-click</span>=<span class="value">"feedbackList()"</span>&gt;</span>反馈记录<span class="tag">&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">ion-nav-buttons</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="解决ios键盘输入焦点时,切换页面导致崩溃问题">解决ios键盘输入焦点时,切换页面导致崩溃问题</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> navBack() &#123;</span><br><span class="line">  setTimeout(function () &#123;</span><br><span class="line">    <span class="variable">$ionicHistory</span>.goBack();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="hide-back-button">hide-back-button</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Safari 中使用sort差异]]></title>
    <link href="http://yoursite.com/2016/11/17/Safari%20%E4%B8%AD%E4%BD%BF%E7%94%A8sort%E5%B7%AE%E5%BC%82/"/>
    <id>http://yoursite.com/2016/11/17/Safari 中使用sort差异/</id>
    <published>2016-11-16T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.671Z</updated>
    <content type="html"><![CDATA[<h1 id="排序场景">排序场景</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var myArray = [&#123;<span class="keyword">date</span>:<span class="string">"2013.03.01"</span>&#125;,&#123;<span class="keyword">date</span>:<span class="string">"2013.03.08"</span>&#125;,&#123;<span class="keyword">date</span>:<span class="string">"2013.03.19"</span>&#125;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">myArray.<span class="keyword">sort</span>(function(a,b)&#123;</span><br><span class="line">  <span class="keyword">return</span> b.<span class="keyword">date</span> &gt; a.<span class="keyword">date</span>;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<ul>
<li><p>chrome</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"2013<span class="class">.03</span><span class="class">.19</span>", "2013<span class="class">.03</span><span class="class">.08</span>", "2013<span class="class">.03</span><span class="class">.01</span>"</span><br></pre></td></tr></table></figure>
</li>
<li><p>Safari </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"2013<span class="class">.03</span><span class="class">.01</span>", "2013<span class="class">.03</span><span class="class">.08</span>", "2013<span class="class">.03</span><span class="class">.19</span>"</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="方法一_(兼容chrome,safari)">方法一 (兼容chrome,safari)</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(a,b)</span></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> b.date - a.date;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="方法二(兼容chrome,safari-适合非数字类型的控制)">方法二(兼容chrome,safari.适合非数字类型的控制)</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myArray.<span class="keyword">sort</span>(function(a,b)&#123;</span><br><span class="line">  <span class="keyword">return</span> (b.<span class="keyword">date</span> &gt; a.<span class="keyword">date</span>) ? <span class="number">1</span> : (b.<span class="keyword">date</span> &lt; a.<span class="keyword">date</span>) ? -<span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>javascript - Safari doesn&#39;t sort array of objects like others browsers - Stack Overflow</code><br><a href="https://stackoverflow.com/questions/15507729/safari-doesnt-sort-array-of-objects-like-others-browsers" target="_blank" rel="external">https://stackoverflow.com/questions/15507729/safari-doesnt-sort-array-of-objects-like-others-browsers</a></p>
<hr>
<h1 id="解决过问题">解决过问题</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.openSection.knowPoints.sort(<span class="keyword">function</span> (<span class="literal">item</span>,item2) &#123;</span><br><span class="line">  return (item.name == <span class="string">'本节总结'</span>) ? <span class="number">1</span> : (item2.name == <span class="string">'本节总结'</span>)? -<span class="number">1</span> : <span class="number">0</span>; // 本章总结最后</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="排序场景">排序场景</h1><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2<]]>
    </summary>
    
      <category term="Safari" scheme="http://yoursite.com/tags/Safari/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端javaScript加密[MD5,jsSHA]]]></title>
    <link href="http://yoursite.com/2016/11/04/%E5%89%8D%E7%AB%AFjavaScript%E5%8A%A0%E5%AF%86%5BMD5-jsSHA%5D/"/>
    <id>http://yoursite.com/2016/11/04/前端javaScript加密[MD5-jsSHA]/</id>
    <published>2016-11-03T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.655Z</updated>
    <content type="html"><![CDATA[<h1 id="JavaScript_MD5实现">JavaScript MD5实现</h1><p><code>JavaScript MD5实现 [blueimp]</code></p>
<p><a href="https://github.com/blueimp/JavaScript-MD5" target="_blank" rel="external">https://github.com/blueimp/JavaScript-MD5</a></p>
<p><code>JavaScript MD5实现 [ pajhome.org ]</code><br><a href="http://pajhome.org.uk/crypt/md5/index.html" target="_blank" rel="external">http://pajhome.org.uk/crypt/md5/index.html</a><br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sign = hex_md5(<span class="literal">result</span>);</span><br><span class="line"><span class="keyword">return</span> sign.toUpperCase();</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="安全散列标准的完整的JavaScript实现">安全散列标准的完整的JavaScript实现</h1><p>github： <a href="https://github.com/Caligatio/jsSHA/" target="_blank" rel="external">https://github.com/Caligatio/jsSHA/</a><br>在线：<a href="https://caligatio.github.io/jsSHA/" target="_blank" rel="external">https://caligatio.github.io/jsSHA/</a></p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sign: <span class="function"><span class="keyword">function</span> <span class="params">(jsapi_ticket, url)</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> ret = &#123;</span><br><span class="line">jsapi_ticket: jsapi_ticket,</span><br><span class="line">nonceStr: <span class="keyword">this</span>.createNonceStr(),</span><br><span class="line">timestamp: <span class="keyword">this</span>.createTimestamp(),</span><br><span class="line">url: url</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> string = <span class="keyword">this</span>.raw(ret);</span><br><span class="line">shaObj = <span class="keyword">new</span> jsSHA(string, <span class="string">'TEXT'</span>);</span><br><span class="line">ret.signature = shaObj.getHash(<span class="string">'SHA-1'</span>, <span class="string">'HEX'</span>);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="第三方-安全规范">第三方-安全规范</h1><h3 id="微信_SDK-_签名规范"><code>微信 SDK- 签名规范</code></h3><p><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3</a><br><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">签名算法</span><br><span class="line">签名生成的通用步骤如下：</span><br><span class="line">第一步，设所有发送或者接收到的数据为集合M，将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA。</span><br><span class="line">特别注意以下重要规则：</span><br><span class="line">◆ 参数名ASCII码从小到大排序（字典序）；</span><br><span class="line">◆ 如果参数的值为空不参与签名；</span><br><span class="line">◆ 参数名区分大小写；</span><br><span class="line">◆ 验证调用返回或微信主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。</span><br><span class="line">◆ 微信接口可能增加字段，验证签名时必须支持增加的扩展字段</span><br><span class="line">第二步，在stringA最后拼接上key得到stringSignTemp字符串，并对stringSignTemp进行MD5运算，再将得到的字符串所有字符转换为大写，得到sign值signValue。</span><br><span class="line">key设置路径：微信商户平台<span class="function"><span class="params">(pay.weixin.qq.com)</span>--&gt;</span>账户设置<span class="function">--&gt;</span>API安全<span class="function">--&gt;</span>密钥设置</span><br></pre></td></tr></table></figure></p>
<p><code>商户回调API安全</code><br>在普通的网络环境下，HTTP请求存在DNS劫持、运营商插入广告、数据被窃取，正常数据被修改等安全风险。商户回调接口使用HTTPS协议可以保证数据传输的安全性。所以微信支付建议商户提供给微信支付的各种回调采用HTTPS协议。请参考：<code>HTTPS搭建指南</code>  <a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=10_4" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=10_4</a></p>
<p><code>微信公众平台支付接口调试工具</code><br><a href="https://pay.weixin.qq.com/wiki/tools/signverify/" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/tools/signverify/</a></p>
<h3 id="微信JS-_SDK-_签名算法"><code>微信JS- SDK- 签名算法</code></h3><p><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115&amp;token=&amp;lang=zh_CN" target="_blank" rel="external">https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115&amp;token=&amp;lang=zh_CN</a><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">签名生成规则如下：</span><br><span class="line">参与签名的字段包括noncestr（随机字符串）, 有效的jsapi_ticket, timestamp（时间戳）, url（当前网页的<span class="built_in">URL</span>，不包含<span class="comment">#及其后面部分） 。 对所有待签名参数按照字段名的ASCII 码从小到大排序（字典序）后，使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串string1。</span></span><br><span class="line">这里需要注意的是所有参数名均为小写字符。 对string1作sha1加密，字段名和字段值都采用原始值，不进行<span class="built_in">URL</span> 转义</span><br></pre></td></tr></table></figure></p>
<p><code>微信 JS 接口签名校验工具</code><br><a href="http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign" target="_blank" rel="external">http://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=jsapisign</a></p>
<hr>
<h1 id="参数名ASCII码从小到大排序（字典序）-微信SDK常用到（参数列表加密前排序）">参数名ASCII码从小到大排序（字典序）-微信SDK常用到（参数列表加密前排序）</h1><p>参见： <code>微信 SDK- 签名规范</code><br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">raw: <span class="function"><span class="keyword">function</span> (<span class="params">args</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> keys = <span class="built_in">Object</span>.keys(args);</span><br><span class="line">            keys = keys.sort()</span><br><span class="line">            <span class="keyword">var</span> newArgs = &#123;&#125;;</span><br><span class="line">            keys.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">key</span>) </span>&#123;</span><br><span class="line">                newArgs[key.toLowerCase()] = args[key];</span><br><span class="line">            &#125;);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">string</span> = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> newArgs) &#123;</span><br><span class="line">                <span class="built_in">string</span> += <span class="string">'&amp;'</span> + k + <span class="string">'='</span> + newArgs[k];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">string</span> = <span class="built_in">string</span>.substr(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">string</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="JavaScript_MD5实现">JavaScript MD5实现</h1><p><code>JavaScript MD5实现 [blueimp]</code></p>
<p><a href="https://github.com/blueimp/JavaScr]]>
    </summary>
    
      <category term="加密" scheme="http://yoursite.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[video html5视频标签操作]]></title>
    <link href="http://yoursite.com/2016/10/21/video%20html5%E8%A7%86%E9%A2%91%E6%A0%87%E7%AD%BE%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2016/10/21/video html5视频标签操作/</id>
    <published>2016-10-20T16:00:02.000Z</published>
    <updated>2016-11-19T04:15:17.647Z</updated>
    <content type="html"><![CDATA[<ul>
<li>可运行示例<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dv"</span> <span class="attribute">style</span>=<span class="value">"position: relative;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">video</span> <span class="attribute">controls</span>=<span class="value">"controls"</span> <span class="attribute">preload</span>=<span class="value">"none"</span> <span class="attribute">style</span>=<span class="value">"width: 100%;"</span> <span class="attribute">type</span>=<span class="value">"video/mp4"</span></span><br><span class="line">         <span class="attribute">src</span>=<span class="value">"http://cloud.video.taobao.com/play/u/2554695624/p/1/e/6/t/1/fv/102/28552077.mp4"</span></span><br><span class="line">  &gt;</span></span><br><span class="line">    <span class="comment">&lt;!--poster="http://www.w3school.com.cn/i/w3school_logo_black.gif"--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>您的浏览器不支持 video 标签<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">video</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"position: absolute;bottom: 50px;"</span> &gt;</span>hello<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>js html5 video标签，怎么捕捉到视频最大化的事件呢？-CSDN论坛-CSDN.NET-中国最大的IT技术社区</code></p>
<p><a href="http://bbs.csdn.net/topics/390543495" target="_blank" rel="external">http://bbs.csdn.net/topics/390543495</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> screen_change_events = <span class="string">"webkitfullscreenchange mozfullscreenchange fullscreenchange MSFullscreenChange"</span>;</span><br><span class="line">$(<span class="built_in">document</span>).on(screen_change_events, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'change'</span>,<span class="built_in">document</span>[<span class="string">'webkitIsFullScreen'</span>],screen_change_events);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>javascript - Detecting Event change in fullscreen mode Internet explorer - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/16069548/detecting-event-change-in-fullscreen-mode-internet-explorer" target="_blank" rel="external">http://stackoverflow.com/questions/16069548/detecting-event-change-in-fullscreen-mode-internet-explorer</a></p>
<hr>
<h1 id="前端元素全屏">前端元素全屏</h1><p>执行全屏：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">document.querySelector('video')[<span class="link_label">'webkitRequestFullscreen'</span>](<span class="link_url"></span>)</span><br><span class="line"></span><br><span class="line">document.querySelector('.prism-player')[<span class="link_label">'webkitRequestFullscreen'</span>](<span class="link_url"></span>)</span><br><span class="line">document.querySelector('.dv')[<span class="link_label">'webkitRequestFullscreen'</span>](<span class="link_url"></span>)</span><br><span class="line">或</span><br><span class="line">document.querySelector('video').webkitRequestFullScreen()</span><br></pre></td></tr></table></figure></p>
<p>注意：控制台直接执行会提示”API只能由用户手势启动”。如按钮触发是正常的<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">document.<span class="function"><span class="title">querySelector</span><span class="params">(<span class="string">'video'</span>)</span></span>.<span class="function"><span class="title">webkitRequestFullScreen</span><span class="params">()</span></span></span><br><span class="line">VM454:<span class="number">1</span> Failed to execute <span class="string">'requestFullScreen'</span> on <span class="string">'Element'</span>: API can only be initiated by <span class="tag">a</span> user gesture.</span><br></pre></td></tr></table></figure></p>
<p>撤销全屏：<code>document[requestFullScreen.cancelFn]()</code><br>是否全屏：<code>document[&#39;webkitIsFullScreen&#39;]</code></p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">requestFn:</span> <span class="string">"webkitRequestFullscreen"</span>,</span><br><span class="line"><span class="label">cancelFn:</span> <span class="string">"webkitExitFullscreen"</span>,</span><br><span class="line"><span class="label">eventName:</span> <span class="string">"webkitfullscreenchange"</span>,</span><br><span class="line"><span class="label">isFullScreen:</span> <span class="string">"webkitIsFullScreen"</span></span><br></pre></td></tr></table></figure>
<p>参考：<br><code>prismplayer/prism.js</code></p>
<hr>
<p><code>HTML5 requestFullScreen&amp;exitFullscreen全屏兼容方案</code></p>
<p><a href="https://my.oschina.net/ososchina/blog/349660" target="_blank" rel="external">https://my.oschina.net/ososchina/blog/349660</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li>可运行示例<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br]]>
    </summary>
    
      <category term="video" scheme="http://yoursite.com/tags/video/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[windows 下chromium 安装flash插件]]></title>
    <link href="http://yoursite.com/2016/10/21/windows%20%E4%B8%8Bchromium%20%E5%AE%89%E8%A3%85flash%E6%8F%92%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/10/21/windows 下chromium 安装flash插件/</id>
    <published>2016-10-20T16:00:00.000Z</published>
    <updated>2016-11-19T04:53:15.496Z</updated>
    <content type="html"><![CDATA[<h1 id="chromium_flash插件">chromium flash插件</h1><p>下载地址： <a href="http://get.adobe.com/cn/flashplayer/otherversions/" target="_blank" rel="external">http://get.adobe.com/cn/flashplayer/otherversions/</a><br><!--
--><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/98497590.jpg" alt=""></p>
<p><code>windows 下chromium 不能使用flash_百度经验</code><br><a href="http://jingyan.baidu.com/article/6525d4b151e471ac7c2e9476.html" target="_blank" rel="external">http://jingyan.baidu.com/article/6525d4b151e471ac7c2e9476.html</a></p>
<hr>
<h1 id="chrom_flash插件Adobe_Shockwave_player">chrom flash插件<code>Adobe Shockwave player</code></h1><p>下载地址： <a href="https://get.adobe.com/shockwave/" target="_blank" rel="external">https://get.adobe.com/shockwave/</a><br><!--
--><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/45986251.jpg" alt=""></p>
<p><code>Chrome浏览器Shockwave Flash老是崩溃,怎么解决_百度经验</code><br><a href="http://jingyan.baidu.com/article/948f5924172764d80ff5f990.html" target="_blank" rel="external">http://jingyan.baidu.com/article/948f5924172764d80ff5f990.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="chromium_flash插件">chromium flash插件</h1><p>下载地址： <a href="http://get.adobe.com/cn/flashplayer/otherversions/" target="_blank" rel="ex]]>
    </summary>
    
      <category term="chromium" scheme="http://yoursite.com/tags/chromium/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[docker环境CoreOS、CentOS]]></title>
    <link href="http://yoursite.com/2016/10/17/docker%E7%8E%AF%E5%A2%83CoreOS%E3%80%81CentOS/"/>
    <id>http://yoursite.com/2016/10/17/docker环境CoreOS、CentOS/</id>
    <published>2016-10-16T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.630Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>systemd  容器进行管理</p>
</li>
<li><p>fleet  容器进行管理， 服务发现和配置信息共享</p>
</li>
<li>Vagrantfile</li>
<li>state partition 状态分区,CoreOS非只读区</li>
</ul>
<hr>
<p>CoreOS<br>CoreOS是一种新的、架构体系重新设计的Linux发行版，可以运行在既有的硬件或者云上。CoreOS不提供类似yum或者apt类似的包管理工具，用户不需要在CoreOS中安装软件，而是让程序都在Docker容器中去运行。CoreOS使用systemd和fleet来对容器进行管理，通过etcd进行服务发现和配置信息共享。CoreOS目前风头正劲，目前已经获得融资并于上周宣布收购私有Docker仓库服务商Quay.io，进军企业级的Registry。另外，CoreOS的etcd等组件也获得了社区的认可，并得到了大规模使用。CoreOS已经发布首个稳定版本，目前主流的云服务商都提供了对CoreOS的支持。</p>
<p><code>十大基于Docker的开发工具</code><br><a href="http://www.infoq.com/cn/news/2014/08/top-10-open-source-docker/" target="_blank" rel="external">http://www.infoq.com/cn/news/2014/08/top-10-open-source-docker/</a></p>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">为什么选择 CoreOS?</span><br><span class="line">CoreOS有几个很牛的特点. 它以只读模式运行, 除了“<span class="keyword">state</span> partition”, 这个地方，我们基本上使用它来存放系统单元文件，包括启动监视你的docker容器, 另外还有docker’的本地图片缓存和一些固定的区域。我喜欢只读文件系统，因为这意味着，他们很稳定，并且几乎不可能被破坏. 另外, CoreOS会自动更新而且它重用了ChromeOS的更新器.</span><br></pre></td></tr></table></figure>
<p><code>CoreOS 和 Docker 入门 - 开源中国社区</code><br><a href="http://www.oschina.net/translate/coreos_and_docker_first_steps?cmp" target="_blank" rel="external">http://www.oschina.net/translate/coreos_and_docker_first_steps?cmp</a></p>
<p><code>Docker和CoreOS一直在争夺,为何不互补-阿里云资讯网</code><br><a href="https://www.aliyun.com/zixun/content/1_1_1038419.html" target="_blank" rel="external">https://www.aliyun.com/zixun/content/1_1_1038419.html</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">最流行最基础的Docker镜像还是“Ubuntu”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">老外在这里强烈推荐CoreOS，说怎么怎么好，我还是推荐先使用ubuntu或者在windows上装个vbox在用ubuntu，coreos作为一个新型的服务器级别的系统，也十分值得关注，因为CoreOs将作为主力的docker容器发展。</span><br></pre></td></tr></table></figure>
<p><code>docker 简明教程 | 简果网</code>-相关 CoreOS<br><a href="http://www.simapple.com/docker-tutorial" target="_blank" rel="external">http://www.simapple.com/docker-tutorial</a></p>
<hr>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">完整性、系统性来说CentOS好</span><br><span class="line">CoreOS是一个采用了高度精简的Linux系统内核及外围定制的轻量级操作系统</span><br><span class="line">追问： 那就是说。coreos比centos小</span><br><span class="line">追答： 是的，不过centos也可以最小化安装</span><br><span class="line">追问： 那做服务器他们哪个好点</span><br></pre></td></tr></table></figure>
<p><code>coreos和centos哪个好_百度知道</code></p>
<p><a href="http://zhidao.baidu.com/link?url=dddRjzH1OYs22nMMMt3bG1UlfqVfgY7ldErJaISG56kgXCXlUdMXwdbVjhNtVXifVMWJNZOAbNGnLUnGyHZE8OgasZQ4DB4_E1QrgRvduN_" target="_blank" rel="external">http://zhidao.baidu.com/link?url=dddRjzH1OYs22nMMMt3bG1UlfqVfgY7ldErJaISG56kgXCXlUdMXwdbVjhNtVXifVMWJNZOAbNGnLUnGyHZE8OgasZQ4DB4_E1QrgRvduN_</a></p>
<hr>
<p>coreos和Ubuntu及centos的本质区别是什么?其实它们本质上都是Linux的独立发行版，大的区别主要有两点：</p>
<p>　　1)预装的软件不一样，CoreOS系统预装的软件相比Ubuntu或CentOS少的多(从系统的安装CD内容也能看出来，CoreOS只有 100多MB，Ubuntu的有700多MB)，因此CoreOS系统在启动速度和运行内存上都有优势。另外CoreOS预装的软件很多是为集群环境配备的，例如Etcd和Fleet。</p>
<p>　　2)CoreOS的系统分区是只读的，也就说，用户不能直接安装程序到系统里面。所有用户程序的运行都要使用到Docker或Rkt容器，从而确保系统升级时候不会因为系统被用户修改而出现意外问题。<br><a href="http://www.99inf.com/diannao/rjkf/601619.html" target="_blank" rel="external">http://www.99inf.com/diannao/rjkf/601619.html</a> </p>
<hr>
<p><code>Docker学习：Coreos+Docker+rancher真方便简捷_服务器应用_Linux公社-Linux系统门户网站</code><br><a href="http://www.linuxidc.com/Linux/2016-04/130605.htm" target="_blank" rel="external">http://www.linuxidc.com/Linux/2016-04/130605.htm</a></p>
<p><code>借 Docker 东风，CoreOS 蹿红云计算 - 开源中国社区</code><br><a href="http://www.oschina.net/news/55086/coreos-docker" target="_blank" rel="external">http://www.oschina.net/news/55086/coreos-docker</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>systemd  容器进行管理</p>
</li>
<li><p>fleet  容器进行管理， 服务发现和配置信息共享</p>
</li>
<li>Vagrantfile</li>
<li>state partition 状态分区,CoreOS非只读区</]]>
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端异常日志收集与监控]]></title>
    <link href="http://yoursite.com/2016/10/13/%E5%89%8D%E7%AB%AF%E5%BC%82%E5%B8%B8%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E4%B8%8E%E7%9B%91%E6%8E%A7/"/>
    <id>http://yoursite.com/2016/10/13/前端异常日志收集与监控/</id>
    <published>2016-10-12T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.621Z</updated>
    <content type="html"><![CDATA[<p><code>前端代码异常日志收集与监控_知识库_博客园</code><br><a href="http://kb.cnblogs.com/page/527520/" target="_blank" rel="external">http://kb.cnblogs.com/page/527520/</a></p>
<p><code>前端代码异常监控</code><br><a href="http://rapheal.sinaapp.com/2014/11/06/javascript-error-monitor/" target="_blank" rel="external">http://rapheal.sinaapp.com/2014/11/06/javascript-error-monitor/</a></p>
<p><code>构建可靠的前端异常监控服务 - 采集篇 - 推酷</code><br><a href="http://www.tuicool.com/articles/Rjy2Yjz" target="_blank" rel="external">http://www.tuicool.com/articles/Rjy2Yjz</a></p>
<p><code>JSTracker 之前端异常数据采集 - 推酷</code><br><a href="http://www.tuicool.com/articles/BZN3amR" target="_blank" rel="external">http://www.tuicool.com/articles/BZN3amR</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>前端代码异常日志收集与监控_知识库_博客园</code><br><a href="http://kb.cnblogs.com/page/527520/" target="_blank" rel="external">http://kb.cnblogs.com/p]]>
    </summary>
    
      <category term="前端异常" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E5%BC%82%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[webstorm 使用External Tools-实现运行支持ES6]]></title>
    <link href="http://yoursite.com/2016/10/11/webstorm%20%E4%BD%BF%E7%94%A8External%20Tools-%E5%AE%9E%E7%8E%B0%E8%BF%90%E8%A1%8C%E6%94%AF%E6%8C%81ES6/"/>
    <id>http://yoursite.com/2016/10/11/webstorm 使用External Tools-实现运行支持ES6/</id>
    <published>2016-10-10T16:00:02.000Z</published>
    <updated>2016-11-19T04:53:15.474Z</updated>
    <content type="html"><![CDATA[<h1 id="配置">配置</h1><!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/1251529.jpg" alt=""></p>
<!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/28341988.jpg" alt=""></p>
<p>Program：<code>C:\Users\Administrator\AppData\Roaming\npm\babel-node.cmd</code><br>Parameters：<code>$FilePath$</code></p>
<h2 id="运行，右键_：_选择External_Tools-babel-node">运行，右键 ： 选择External Tools-<code>babel-node</code></h2><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:<span class="command">\Users</span><span class="command">\Administrator</span><span class="command">\AppData</span><span class="command">\Roaming</span><span class="command">\npm</span><span class="command">\babel</span>-node.cmd G:<span class="command">\liuxiang</span>_code_git<span class="command">\liuxiang</span>_web<span class="command">\src</span><span class="command">\ES</span>6<span class="command">\Modules</span>-diligenceday<span class="command">\demo</span><span class="command">\main</span>.js</span><br><span class="line">121</span><br><span class="line">5</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="webstrorm内运行*-cmd文件">webstrorm内运行<code>*.cmd</code>文件</h1><!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/91456091.jpg" alt=""></p>
<p>Program：<code>$FilePath$</code><br>Parameters：<code>&lt;不需要&gt;</code></p>
<ul>
<li>dir_.cmd 右键： 选择External Tools-<code>cmd</code><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="效果">效果</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">G:\liuxiang_code_git\liuxiang_web\src\ES6\Modules-diligenceday\demo\dir_.cmd</span><br><span class="line"> </span><br><span class="line">G:\liuxiang_code_git\liuxiang_web&gt;dir</span><br><span class="line">驱动器 G 中的卷是 Work-SSD</span><br><span class="line">卷的序列号是 <span class="number">0F</span>D9-<span class="number">0</span>AF8</span><br><span class="line"> </span><br><span class="line">G:\liuxiang_code_git\liuxiang_web 的目录</span><br><span class="line"> </span><br><span class="line"><span class="number">2016</span>/<span class="number">10</span>/<span class="number">11</span> 周二  <span class="number">16</span>:<span class="number">09</span>    &lt;DIR&gt;          .</span><br><span class="line"><span class="number">2016</span>/<span class="number">10</span>/<span class="number">11</span> 周二  <span class="number">16</span>:<span class="number">09</span>    &lt;DIR&gt;          ..</span><br><span class="line"><span class="number">2016</span>/<span class="number">10</span>/<span class="number">11</span> 周二  <span class="number">15</span>:<span class="number">12</span>                <span class="number">36</span> .babelrc</span><br><span class="line"><span class="number">2016</span>/<span class="number">03</span>/<span class="number">02</span> 周三  <span class="number">10</span>:<span class="number">39</span>               <span class="number">242</span> .editorconfig</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="配置">配置</h1><!--
-->
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/public/16-11-19/1251529.jpg" alt=""></p>
<!--
-->
<p><img src]]>
    </summary>
    
      <category term="webstorm" scheme="http://yoursite.com/tags/webstorm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ES6兼容低版本浏览器]]></title>
    <link href="http://yoursite.com/2016/10/11/ES6%E5%85%BC%E5%AE%B9%E4%BD%8E%E7%89%88%E6%9C%AC%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    <id>http://yoursite.com/2016/10/11/ES6兼容低版本浏览器/</id>
    <published>2016-10-10T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.604Z</updated>
    <content type="html"><![CDATA[<h1 id="局部引用_&amp;_全局实现">局部引用 &amp;  全局实现</h1><p>想要不支持该方法的浏览器支持，无非两种办法<br><code>局部引用</code>，引入一个相同的方法代替，其缺点则是使用起来比较麻烦，每个用到的文件都要去引入。<br><code>全局实现</code>，与之相反的方法是使用 polyfill ，其优点便是使用方便，缺点则是会全局污染，特别是实例方法，涉及到修改其 prototype ，不是你的类，你去修改它原型是不推荐的。</p>
<p>针对这两种办法，提供出以下几种方案，供大家参考</p>
<h1 id="方案一：引入额外的库">方案一：引入额外的库</h1><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">assign</span> from <span class="string">'object-assign'</span>;</span><br><span class="line"><span class="keyword">assign</span>(&#123;&#125;, &#123;&#125;);</span><br></pre></td></tr></table></figure>
<p>缺点就是需要去找到对应的库，比如 Promise 我们可以使用 lie</p>
<h1 id="方案二：全局引入_babel-polyfill">方案二：全局引入 babel-polyfill</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">'babel-polyfill'</span>;</span><br></pre></td></tr></table></figure>
<p>polyfill 构建并 uglify 后的大小为 98k，gzip 后为32.6k，32k 对与移动端还是有点大的</p>
<h1 id="方案三：手动引入_core-js">方案三：手动引入 core-js</h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Object</span>: &#123;</span><br><span class="line">      <span class="attribute">assign</span>: <span class="string">"object/assign"</span>,</span><br><span class="line">      <span class="attribute">create</span>: <span class="string">"object/create"</span>,</span><br><span class="line">      <span class="attribute">defineProperties</span>: <span class="string">"object/define-properties"</span>,</span><br><span class="line">      <span class="attribute">defineProperty</span>: <span class="string">"object/define-property"</span>,</span><br><span class="line">      <span class="attribute">entries</span>: <span class="string">"object/entries"</span>,</span><br><span class="line">      <span class="attribute">freeze</span>: <span class="string">"object/freeze"</span>,</span><br><span class="line">      ...</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="keyword">assign</span> from <span class="string">'core-js/library/fn/object/assign'</span></span><br></pre></td></tr></table></figure>
<p>或<br><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import <span class="symbol">'core</span>-js/fn/<span class="keyword">object</span>/assign'</span><br></pre></td></tr></table></figure></p>
<h1 id="方案四：使用_babel-plugin-transform-runtime">方案四：使用 <code>babel-plugin-transform-runtime</code></h1><p><a href="https://babeljs.io/docs/plugins/transform-runtime/" target="_blank" rel="external">https://babeljs.io/docs/plugins/transform-runtime/</a><br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="operator"><span class="keyword">install</span> <span class="comment">--save-dev babel-plugin-transform-runtime</span></span><br><span class="line">$ npm <span class="keyword">install</span> <span class="comment">--save babel-runtime</span></span></span><br></pre></td></tr></table></figure></p>
<ul>
<li><p><code>.babelrc</code></p>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// without options</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"plugins"</span>: [<span class="string">"transform-runtime"</span>]</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">// <span class="keyword">with</span> options</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"plugins"</span>: [</span><br><span class="line">    [<span class="string">"transform-runtime"</span>, &#123;</span><br><span class="line">     <span class="string">"helpers"</span>: <span class="literal">false</span>, // defaults <span class="keyword">to</span> <span class="literal">true</span><span class="comment">; v6.12.0 (2016-07-27) 新增;</span></span><br><span class="line">      <span class="string">"polyfill"</span>: <span class="literal">true</span>, // defaults <span class="keyword">to</span> <span class="literal">true</span></span><br><span class="line">      <span class="string">"regenerator"</span>: <span class="literal">true</span>, // defaults <span class="keyword">to</span> <span class="literal">true</span></span><br><span class="line">      // v6<span class="number">.15</span><span class="number">.0</span> (<span class="number">2016</span>-<span class="number">08</span>-<span class="number">31</span>) 新增</span><br><span class="line">      // defaults <span class="keyword">to</span> <span class="string">"babel-runtime"</span></span><br><span class="line">      // 可以这样配置</span><br><span class="line">      // moduleName: path.dirname(require.resolve(<span class="string">'babel-runtime/package'</span>))</span><br><span class="line">      <span class="string">"moduleName"</span>: <span class="string">"babel-runtime"</span></span><br><span class="line">    &#125;]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>最后看下终极方案的通用配置</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  plugins: [</span><br><span class="line">    [<span class="string">"transform-runtime"</span>, &#123;</span><br><span class="line">      <span class="string">"helpers"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="string">"polyfill"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="string">"regenerator"</span>: <span class="literal">true</span></span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="string">'add-module-exports'</span>,</span><br><span class="line">    <span class="string">'transform-es3-member-expression-literals'</span>,</span><br><span class="line">    <span class="string">'transform-es3-property-literals'</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="string">"presets"</span>: [</span><br><span class="line">    <span class="string">'react'</span>,</span><br><span class="line">    <span class="string">'es2015'</span>,</span><br><span class="line">    <span class="string">'stage-1'</span></span><br><span class="line">  ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>ES6 + Webpack + React + Babel 如何在低版本浏览器上愉快的玩耍（下） - 推酷</code> <a href="http://www.tuicool.com/articles/rYRBbiA" target="_blank" rel="external">http://www.tuicool.com/articles/rYRBbiA</a></p>
<p><code>开始使用es6的module:import+export - 推酷</code><br><a href="http://www.tuicool.com/articles/zABbYbv" target="_blank" rel="external">http://www.tuicool.com/articles/zABbYbv</a></p>
<p><code>Polyfill.io - 自动化的 JavaScript Polyfill 服务 | 小影志</code><br><a href="http://c7sky.com/polyfill-io.html" target="_blank" rel="external">http://c7sky.com/polyfill-io.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="局部引用_&amp;_全局实现">局部引用 &amp;  全局实现</h1><p>想要不支持该方法的浏览器支持，无非两种办法<br><code>局部引用</code>，引入一个相同的方法代替，其缺点则是使用起来比较麻烦，每个用到的文件都要去引入。<br><code]]>
    </summary>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javaScript 的值传递&闭包应用]]></title>
    <link href="http://yoursite.com/2016/10/10/javaScript%20%E7%9A%84%E5%80%BC%E4%BC%A0%E9%80%92&%E9%97%AD%E5%8C%85%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2016/10/10/javaScript 的值传递&闭包应用/</id>
    <published>2016-10-09T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.597Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>值传递</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> <span class="built_in">value</span> = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">var</span> countValue;</span><br><span class="line"> </span><br><span class="line">function <span class="built_in">count</span>(<span class="built_in">value</span>) &#123;</span><br><span class="line">  <span class="built_in">value</span> = <span class="built_in">value</span> + <span class="number">1</span>;<span class="comment">// 值传递，引用断离</span></span><br><span class="line">  countValue = <span class="built_in">value</span>;</span><br><span class="line">  console.log('<span class="built_in">count</span>', <span class="built_in">value</span>); <span class="comment">// 2</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">console.log('<span class="built_in">value</span>', <span class="built_in">value</span>);<span class="comment">// 1</span></span><br><span class="line"><span class="built_in">count</span>(<span class="built_in">value</span>);</span><br><span class="line">console.log('<span class="built_in">value</span>', <span class="built_in">value</span>);<span class="comment">// 1</span></span><br><span class="line">console.log('<span class="built_in">value</span>', countValue); <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>闭包应用</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 循环&amp;异步&amp;函数-问题</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">  setTimeout(</span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">'&gt;'</span>, i)</span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 循环&amp;异步的问题</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">  (<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 函数接收的参数值属于值传递,引用断离</span></span><br><span class="line">    setTimeout(</span><br><span class="line">      <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'&gt;&gt;'</span>, i)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>值传递</p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span]]>
    </summary>
    
      <category term="闭包" scheme="http://yoursite.com/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic hooks钩子文件-清理源代码,发布dist]]></title>
    <link href="http://yoursite.com/2016/10/08/ionic%20hooks%E9%92%A9%E5%AD%90%E6%96%87%E4%BB%B6-%E6%B8%85%E7%90%86%E6%BA%90%E4%BB%A3%E7%A0%81-%E5%8F%91%E5%B8%83dist/"/>
    <id>http://yoursite.com/2016/10/08/ionic hooks钩子文件-清理源代码-发布dist/</id>
    <published>2016-10-07T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.589Z</updated>
    <content type="html"><![CDATA[<p><code>020_dist_to_platforms_v2.js</code> </p>
<ul>
<li>策略不同,避开 mv_path() 同步控制, 效果一样<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env node</span></span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">  var fs = require('fs');</span><br><span class="line">  var path = require('path');</span><br><span class="line">  var mv = require('mv');</span><br><span class="line"> </span><br><span class="line">  var iosPlatformsDir_dist = path.resolve(__dirname, '../../platforms/ios/www/dist');</span><br><span class="line">  var iosPlatformsDir = path.resolve(__dirname, '../../platforms/ios/www');</span><br><span class="line"> </span><br><span class="line">  var androidPlatformsDir_dist = path.resolve(__dirname, '../../platforms/android/assets/www/dist');</span><br><span class="line">  var androidPlatformsDir = path.resolve(__dirname, '../../platforms/android/assets/www');</span><br><span class="line"> </span><br><span class="line">  /<span class="keyword">*</span><span class="keyword">*</span> ios <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">  action(iosPlatformsDir, iosPlatformsDir_dist)</span><br><span class="line">  /<span class="keyword">*</span><span class="keyword">*</span> android <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">  action(androidPlatformsDir, androidPlatformsDir_dist)</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">function action(platformsDir, platformsDir_dist) &#123;</span><br><span class="line">  // 1.先删除(因为删除是同步的,移动是异步)</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/app');</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/app_module');</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/autoTest');</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/css');</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/js');</span><br><span class="line">  deleteFolderRecursive(platformsDir + '/templates');</span><br><span class="line">  deleteFolderRecursive(platformsDir_dist + '/img');//  使用源文件资源,不需要dist中资源</span><br><span class="line">  deleteFolderRecursive(platformsDir_dist + '/lib');//  使用源文件资源,不需要dist中资源</span><br><span class="line"> </span><br><span class="line">  // 2.移动dist目录中资源为主资源</span><br><span class="line">  mv_path(platformsDir_dist + '/dist_css', platformsDir + '/dist_css');</span><br><span class="line">  mv_path(platformsDir_dist + '/dist_js', platformsDir + '/dist_js');</span><br><span class="line">  mv_path(platformsDir_dist + '/index.html', platformsDir + '/index.html');</span><br><span class="line"> </span><br><span class="line">  // 3.清理lib(仅保留字体)</span><br><span class="line">  mv_path(platformsDir + '/lib/ionic/fonts', platformsDir + '/_lib/ionic/fonts',function()&#123;</span><br><span class="line">    deleteFolderRecursive(platformsDir + '/lib');</span><br><span class="line">    mv_path(platformsDir + '/_lib', platformsDir + '/lib');// 还原保留</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span> 移动文件 <span class="keyword">*</span>/</span><br><span class="line">function mv_path(source, target, callback) &#123;</span><br><span class="line">  mv(source, target, &#123;mkdirp: true&#125;, function (err) &#123;</span><br><span class="line">    if (typeof err != 'undefined') &#123;</span><br><span class="line">      console.log(<span class="string">"err"</span>);</span><br><span class="line">      console.log(err);</span><br><span class="line">      console.log(<span class="string">"ERROR when moving CSS folder to iOS platform"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">      console.log(<span class="string">"CSS folder moved OK to iOS platform"</span>);</span><br><span class="line">      callback &amp;&amp; callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span> 删除文件 <span class="keyword">*</span>/</span><br><span class="line">function deleteFolderRecursive(removePath) &#123;</span><br><span class="line">  if (fs.existsSync(removePath)) &#123;</span><br><span class="line">    fs.readdirSync(removePath).forEach(function (file, index) &#123;</span><br><span class="line">      var curPath = path.join(removePath, file);</span><br><span class="line">      if (fs.lstatSync(curPath).isDirectory()) &#123; // recurse</span><br><span class="line">        deleteFolderRecursive(curPath);</span><br><span class="line">      &#125; else &#123; // delete file</span><br><span class="line">        fs.unlinkSync(curPath);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    fs.rmdirSync(removePath);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>020_dist_to_platforms_v1.js</code></p>
<ul>
<li>脏代码:mv_path() 同步控制</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env node</span></span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">var</span> fs = <span class="keyword">require</span>(<span class="string">'fs'</span>);</span><br><span class="line">  <span class="keyword">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line">  <span class="keyword">var</span> mv = <span class="keyword">require</span>(<span class="string">'mv'</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> iosPlatformsDir_dist = path.resolve(__dirname, <span class="string">'../../platforms/ios/www/dist'</span>);</span><br><span class="line">  <span class="keyword">var</span> iosPlatformsDir_temp = path.resolve(__dirname, <span class="string">'../../platforms/ios/_www_dist'</span>);</span><br><span class="line">  <span class="keyword">var</span> iosPlatformsDir = path.resolve(__dirname, <span class="string">'../../platforms/ios/www'</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> androidPlatformsDir_dist = path.resolve(__dirname, <span class="string">'../../platforms/android/assets/www/dist'</span>);</span><br><span class="line">  <span class="keyword">var</span> androidPlatformsDir_temp = path.resolve(__dirname, <span class="string">'../../platforms/android/assets/_www_dist'</span>);</span><br><span class="line">  <span class="keyword">var</span> androidPlatformsDir = path.resolve(__dirname, <span class="string">'../../platforms/android/assets/www'</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> cordova_js = <span class="string">'/cordova.js'</span>, cordova_plugins = <span class="string">'/cordova_plugins.js'</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 0.转移`cordova.js,cordova_plugins.js`两核心文件</span></span><br><span class="line">  mv_path(iosPlatformsDir + cordova_js, iosPlatformsDir_dist + cordova_js, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    mv_path(iosPlatformsDir + cordova_plugins, iosPlatformsDir_dist + cordova_plugins, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      mv_path(iosPlatformsDir + <span class="string">'/plugins'</span>, iosPlatformsDir_dist + <span class="string">'/plugins'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        mv_path(iosPlatformsDir + <span class="string">'/cordova-js-src'</span>, iosPlatformsDir_dist + <span class="string">'/cordova-js-src'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">          <span class="comment">// 1.转移dist目录</span></span><br><span class="line">          mv_path(iosPlatformsDir_dist, iosPlatformsDir_temp, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="comment">// 2.删除dist外源码</span></span><br><span class="line">            deleteFolderRecursive(iosPlatformsDir);</span><br><span class="line">            <span class="comment">// 3.dist`转正`</span></span><br><span class="line">            mv_path(iosPlatformsDir_temp, iosPlatformsDir);</span><br><span class="line">          &#125;);</span><br><span class="line"> </span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="comment">// 0.转移`cordova.js,cordova_plugins.js`两核心文件</span></span><br><span class="line">  mv_path(iosPlatformsDir + cordova_js, iosPlatformsDir_dist + cordova_js, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    mv_path(iosPlatformsDir + cordova_plugins, iosPlatformsDir_dist + cordova_plugins, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      mv_path(iosPlatformsDir + <span class="string">'/plugins'</span>, iosPlatformsDir_dist + <span class="string">'/plugins'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        mv_path(iosPlatformsDir + <span class="string">'/cordova-js-src'</span>, iosPlatformsDir_dist + <span class="string">'/cordova-js-src'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">          mv_path(androidPlatformsDir_dist, androidPlatformsDir_temp, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            deleteFolderRecursive(androidPlatformsDir);</span><br><span class="line">            mv_path(androidPlatformsDir_temp, androidPlatformsDir);</span><br><span class="line">          &#125;);</span><br><span class="line"> </span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/** 移动文件 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mv_path</span><span class="params">(source, target, callback)</span> </span>&#123;</span><br><span class="line">  mv(source, target, &#123;mkdirp: <span class="keyword">true</span>&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(err)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (typeof err != <span class="string">'undefined'</span>) &#123;</span><br><span class="line">      console.log(<span class="string">"err"</span>);</span><br><span class="line">      console.log(err);</span><br><span class="line">      console.log(<span class="string">"ERROR when moving CSS folder to iOS platform"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      console.log(<span class="string">"CSS folder moved OK to iOS platform"</span>);</span><br><span class="line">      callback &amp;&amp; callback();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/** 删除文件 */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteFolderRecursive</span><span class="params">(removePath)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (fs.existsSync(removePath)) &#123;</span><br><span class="line">    fs.readdirSync(removePath).<span class="keyword">forEach</span>(<span class="function"><span class="keyword">function</span> <span class="params">(file, index)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> curPath = path.join(removePath, file);</span><br><span class="line">      <span class="keyword">if</span> (fs.lstatSync(curPath).isDirectory()) &#123; <span class="comment">// recurse</span></span><br><span class="line">        deleteFolderRecursive(curPath);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123; <span class="comment">// delete file</span></span><br><span class="line">        fs.unlinkSync(curPath);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    fs.rmdirSync(removePath);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p><code>020_dist_to_platforms_v2.js</code> </p>
<ul>
<li>策略不同,避开 mv_path() 同步控制, 效果一样<figure class="highlight gherkin"><table><tr><td class]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[cocos ios程序home键后程序异常/闪退]]></title>
    <link href="http://yoursite.com/2016/09/23/cocos%20ios%E7%A8%8B%E5%BA%8Fhome%E9%94%AE%E5%90%8E%E7%A8%8B%E5%BA%8F%E5%BC%82%E5%B8%B8-%E9%97%AA%E9%80%80/"/>
    <id>http://yoursite.com/2016/09/23/cocos ios程序home键后程序异常-闪退/</id>
    <published>2016-09-22T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.579Z</updated>
    <content type="html"><![CDATA[<h1 id="home键后程序异常日志">home键后程序异常日志</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">libGPUSupportMercury.dylib</span>`gpus_ReturnNotPermittedKillClient:</span><br><span class="line">    <span class="number">0x2f3df76c</span> &lt;+<span class="number">0</span>&gt;:  <span class="keyword">movw </span>  <span class="literal">r0</span>, <span class="number">#0xbeef</span></span><br><span class="line">    <span class="number">0x2f3df770</span> &lt;+<span class="number">4</span>&gt;:  <span class="keyword">movs </span>  <span class="literal">r1</span>, <span class="number">#0x1</span></span><br><span class="line">    <span class="number">0x2f3df772</span> &lt;+<span class="number">6</span>&gt;:  <span class="keyword">movt </span>  <span class="literal">r0</span>, <span class="number">#0xdead</span></span><br><span class="line">-&gt;  <span class="number">0x2f3df776</span> &lt;+<span class="number">10</span>&gt;: <span class="keyword">str </span>   <span class="literal">r0</span>, [<span class="literal">r1</span>]</span><br><span class="line">    <span class="number">0x2f3df778</span> &lt;+<span class="number">12</span>&gt;: <span class="keyword">bx </span>    <span class="literal">lr</span></span><br><span class="line">    <span class="number">0x2f3df77a</span> &lt;+<span class="number">14</span>&gt;: <span class="keyword">nop </span>  </span><br><span class="line"> </span><br><span class="line"><span class="label">webThread</span>(<span class="number">9</span>):exc_bad_access(<span class="preprocessor">code</span><span class="number">=1</span>,<span class="keyword">address=0x1)</span></span><br></pre></td></tr></table></figure>
<hr>
<p>director在app切换至后台时若被pause，它其实并没有真正暂停，而是仍保持着每秒4帧的绘制速率。但在app处于后台时，ios是不允许app调opengl的。这个原因引发了上述问题。</p>
<ul>
<li>解决方法：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr_selector">[cpp]</span> <span class="tag">view</span> <span class="tag">plain</span> <span class="tag">copy</span></span><br><span class="line"><span class="tag">void</span> <span class="rule"><span class="attribute">AppDelegate</span>:<span class="value">:<span class="function">applicationDidEnterBackground</span>() </span><br><span class="line">&#123; </span><br><span class="line">    CCDirector::<span class="function">sharedDirector</span>()-&gt;<span class="function">stopAnimation</span>()</span></span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="tag">void</span> <span class="rule"><span class="attribute">AppDelegate</span>:<span class="value">:<span class="function">applicationWillEnterForeground</span>() </span><br><span class="line">&#123; </span><br><span class="line">    CCDirector::<span class="function">sharedDirector</span>()-&gt;<span class="function">startAnimation</span>()</span></span>; </span><br><span class="line">&#125; </span><br><span class="line">``` </span><br><span class="line">`按<span class="tag">Home</span>键切换到后台后会触发<span class="rule"><span class="attribute">libGPUSupportMercury.dylib</span>:<span class="value"> gpus_ReturnNotPermittedKillClient导致crash - Mr_Ray的IT专栏 - 博客频道 - CSDN.NET`</span><br><span class="line">http://blog.csdn.net/world_liu/article/details/<span class="number">8960786</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"># 原因分析</span><br><span class="line">在cocos2d-x <span class="number">2.0</span>.<span class="number">4</span>版本上，当点击HOME键将程序切换后台，有时会导致crash，程序停在在</span><br><span class="line">gpus_ReturnNotPermittedKillClient函数，搜了一下此问题原因，有几篇文章比较好，</span><br><span class="line"> </span><br><span class="line">http://blog.k-res.net/archives/<span class="number">1193</span>.html，这片文章说了此问题的原因，以及其在项目中的解决方案。</span><br><span class="line"> </span><br><span class="line">Implementing a Multitasking-aware OpenGL ES Application，这个是苹果对于此问题的解释，以及部分解决方案。</span><br><span class="line"> </span><br><span class="line">以上文章对于此问题做了比较详细的分析与解释，虽然不能解决游戏中此问题，但是对于了解问题本质很有帮助。</span><br><span class="line"> </span><br><span class="line">对于cocos2d-x中解决vi问题，</span></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>在AppDelegate::applicationDidEnterBackground()中增加CCDirector::sharedDirector()-&gt;stopAnimation()；<br>在AppDelegate::applicationWillEnterForeground()中增加CCDirector::sharedDirector()-&gt;resume()。<br>```</p>
<p>原因是在applicationDidEnterBackground函数中原来调用了CCDirector::sharedDirector()-&gt;pause()函数，此函数并没有真正停止动画，而是以1/4秒在继续运行，这样就会导致程序在后台渲染，这是apple不允许的，所以导致crash。</p>
<p><code>cocos2d-x 2.0.4按home键切换后台导致gpus_ReturnNotPermittedKillClient crash_游戏症候群_新浪博客</code><br><a href="http://blog.sina.com.cn/s/blog_62b2318d0101lc0n.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_62b2318d0101lc0n.html</a></p>
<p><code>官网描述</code><br><a href="https://developer.apple.com/library/content/qa/qa1766/_index.html" target="_blank" rel="external">https://developer.apple.com/library/content/qa/qa1766/_index.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="home键后程序异常日志">home键后程序异常日志</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><s]]>
    </summary>
    
      <category term="cocos" scheme="http://yoursite.com/tags/cocos/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[emoji表情mysql支持]]></title>
    <link href="http://yoursite.com/2016/09/22/emoji%E8%A1%A8%E6%83%85mysql%E6%94%AF%E6%8C%81/"/>
    <id>http://yoursite.com/2016/09/22/emoji表情mysql支持/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.504Z</updated>
    <content type="html"><![CDATA[<h1 id="异常_：mysql_Incorrect_string_value_\xF0\x9F\x98\x84\xF0\x9F">异常 ：mysql Incorrect string value \xF0\x9F\x98\x84\xF0\x9F</h1><p>尝试插入 类似 这样的string（其实是emoji表情），这些uft8 占位过多，数据库如果用标准utf8 格式插入不了这样的字符串</p>
<ul>
<li>解决<br>使用uft8mb4 格式<br>(1)设置表格式为utf8mb4<br>(2)设置连接格式为utf8mb4</li>
</ul>
<p><a href="http://blog.csdn.net/taitoubiyan1/article/details/50595407" target="_blank" rel="external">http://blog.csdn.net/taitoubiyan1/article/details/50595407</a></p>
<p><code>mysql - java.sql.SQLException: Incorrect string value: &#39;\xF0\x9F\x91\xBD\xF0\x9F...&#39; - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/13653712/java-sql-sqlexception-incorrect-string-value-xf0-x9f-x91-xbd-xf0-x9f" target="_blank" rel="external">http://stackoverflow.com/questions/13653712/java-sql-sqlexception-incorrect-string-value-xf0-x9f-x91-xbd-xf0-x9f</a></p>
<p><code>【emoji表情】阿里云数据库RDS支持emoji表情 - 推酷</code>  ★ ★ ★<br><a href="http://www.tuicool.com/articles/2qYbQ3I" target="_blank" rel="external">http://www.tuicool.com/articles/2qYbQ3I</a></p>
<p><code>搜索 - 推酷 : mysql emoji</code><br><a href="http://www.tuicool.com/search?kw=mysql+emoji&amp;t=1" target="_blank" rel="external">http://www.tuicool.com/search?kw=mysql+emoji&amp;t=1</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="异常_：mysql_Incorrect_string_value_\xF0\x9F\x98\x84\xF0\x9F">异常 ：mysql Incorrect string value \xF0\x9F\x98\x84\xF0\x9F</h1><p>尝试插入 类似 ]]>
    </summary>
    
      <category term="emoji" scheme="http://yoursite.com/tags/emoji/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[web网络劫持,被嵌入广告]]></title>
    <link href="http://yoursite.com/2016/09/20/web%E7%BD%91%E7%BB%9C%E5%8A%AB%E6%8C%81-%E8%A2%AB%E5%B5%8C%E5%85%A5%E5%B9%BF%E5%91%8A/"/>
    <id>http://yoursite.com/2016/09/20/web网络劫持-被嵌入广告/</id>
    <published>2016-09-19T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.499Z</updated>
    <content type="html"><![CDATA[<h1 id="常见源头:">常见源头:</h1><p>1.是不是我们项目中的第三方jar非官方版本，被植入了一些广告代码   (★)<br>2.dns劫持  (★★★)<br>3.http劫持 (★★★★)</p>
<h1 id="排查:">排查:</h1><p>检查DNS,替换安全DNS观察广告是否存在<br>启用使用https服务,观察广告是否存在</p>
<h1 id="防护办法:">防护办法:</h1><blockquote>
<p>替换安全DNS<br>使用https服务<br>nginx出口网络过滤<br>使用第三方官方工具<br>ios/android webView过滤<br>前端页面javaScript主动防御</p>
</blockquote>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/55107594.jpg" alt=""><br><!-- --></p>
<p><code>让那些烦人的广告，滚出我们的APP！ - 吴焱的博客 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/wy1002003/article/details/51783623" target="_blank" rel="external">http://blog.csdn.net/wy1002003/article/details/51783623</a></p>
<p><code>联通宽带劫持网页，JS 弹窗广告，该如何解决？ - 知乎</code><br><a href="https://www.zhihu.com/question/23197534" target="_blank" rel="external">https://www.zhihu.com/question/23197534</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="常见源头:">常见源头:</h1><p>1.是不是我们项目中的第三方jar非官方版本，被植入了一些广告代码   (★)<br>2.dns劫持  (★★★)<br>3.http劫持 (★★★★)</p>
<h1 id="排查:">排查:</h1><p>检查DNS,替]]>
    </summary>
    
      <category term="广告" scheme="http://yoursite.com/tags/%E5%B9%BF%E5%91%8A/"/>
    
      <category term="网络劫持" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[aat(async auto test 异步自动化测试) 介绍&模块化实践]]></title>
    <link href="http://yoursite.com/2016/09/16/aat(async%20auto%20test%20%E5%BC%82%E6%AD%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95)%20%E4%BB%8B%E7%BB%8D&%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2016/09/16/aat(async auto test 异步自动化测试) 介绍&模块化实践/</id>
    <published>2016-09-15T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.491Z</updated>
    <content type="html"><![CDATA[<h1 id="关键描述">关键描述</h1><ul>
<li>async 步执行函数,目的:页面同步刷新(柯里化)</li>
<li>sycFuncPromise 返回Promise的方法,处理连续的异步func调用.(可完全替代async)</li>
<li>currying 柯里化,单行定义函数且执行函数<figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_Each</span><span class="params">(index, length)</span> &#123;</span></span><br><span class="line">  sycFuncPromise(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">  &#125;)()</span><br><span class="line">    .<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">      <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">        el(<span class="string">'.bookname_content&gt;.bookname'</span>, index).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">        ++index &lt; <span class="built_in">length</span> &amp;&amp; _Each(index, <span class="built_in">length</span>);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">      &#125;)()</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">_Each(<span class="number">0</span>, $(<span class="string">'.bookname_content&gt;.bookname'</span>).<span class="built_in">length</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">currying<span class="list">(<span class="keyword">function</span> _Each<span class="list">(<span class="keyword">index</span>, length)</span> &#123;</span><br><span class="line"> </span><br><span class="line">  sycFuncPromise<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">    el<span class="list">('.nav-bar-title.ng-binding')</span>.triggerHandler<span class="list">(<span class="quoted">'click</span>')</span><span class="comment">;</span></span><br><span class="line">  &#125;)</span><span class="list">()</span></span><br><span class="line">    .then<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">      return sycFuncPromise<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">        el<span class="list">('.bookname_content&gt;.bookname', index)</span>.triggerHandler<span class="list">(<span class="quoted">'click</span>')</span><span class="comment">;</span></span><br><span class="line">        ++index &lt; length <span class="keyword">&amp;&amp;</span> _Each<span class="list">(<span class="keyword">index</span>, length)</span><span class="comment">;// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">      &#125;)</span><span class="list">()</span></span><br><span class="line">    &#125;)</span></span><br><span class="line">    .then<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">      // ...</span><br><span class="line">    &#125;)</span></span><br><span class="line"> </span><br><span class="line">&#125;)</span><span class="list">(<span class="number">0</span>, $<span class="list">('.bookname_content&gt;.bookname')</span>.length)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>el 简化选择器(支持angular选择器,jquery,querySelector)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 简化选择器</span><br><span class="line">* @param selector</span><br><span class="line">* @param index</span><br><span class="line">* @returns &#123;*&#125;</span><br><span class="line">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">el</span>(<span class="params">selector, index</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="built_in">arguments</span>.length &lt;= <span class="number">1</span> || <span class="built_in">arguments</span>[<span class="number">1</span>] === <span class="literal">undefined</span> ? <span class="number">0</span> : <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">window</span>.angular ? angular.element(<span class="built_in">document</span>.querySelectorAll(selector)[index]) : $(selector);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">exports.el = el;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="使用">使用</h1><h2 id="方式一">方式一</h2><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/core.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/task.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>core.aat.js (直接引用情况下会exports会使用window)</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.xxx = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line">或者,直接使用<span class="built_in">window</span>进行赋值.</span><br></pre></td></tr></table></figure>
<ul>
<li>task.aat.js   (直接引用情况下会exports会使用window)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line">或者,直接使用<span class="built_in">window</span>进行赋值.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="方式二">方式二</h2><hr>
<h1 id="require-js_模块化方式">require.js 模块化方式</h1><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"js/index"</span> <span class="attribute">src</span>=<span class="value">"lib/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span><span class="comment">&lt;!--  模块化入口 --&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>js/index.js 配置初始化</p>
</li>
<li><p>requirejs([‘aat_core’, ‘aat’], function (aat_core, task) 对象初始化 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="string">''</span>,</span><br><span class="line">  paths: &#123;</span><br><span class="line">    aat_core: <span class="string">'autoTest/core.aat'</span>,</span><br><span class="line">    aat: <span class="string">'autoTest/task.aat'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Start the main app</span></span><br><span class="line">requirejs([<span class="string">'aat_core'</span>, <span class="string">'aat'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">aat_core,  aat </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( aat );<span class="comment">// 初始化验证</span></span><br><span class="line">  <span class="built_in">window</span>.aat =  aat ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>core.aat.js (模块化引用情况下会exports会使用 AMD )</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.xxx = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</li>
<li><p>task.aat.js   ( 模块化 引用情况下会exports会使用 AMD )</p>
<blockquote>
<p>require(‘aat_core’) 注意需要 requirejs.config初始化<code>aat_core</code>且 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;], function (aat_core,  aat )</code>完成初始化</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> core = (<span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span>) ? <span class="built_in">require</span>(<span class="string">'aat_core'</span>) : exports;</span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h1 id="使用时初始化(使用文件名)">使用时初始化(使用文件名)</h1><p>例: <code>task.aat.js</code>  </p>
<blockquote>
<p>define(function (require, exports, module) {  require(‘path/filename’);  })</p>
</blockquote>
<ul>
<li>js/index.js 配置初始化</li>
<li><p>requirejs([‘aat’], function ( aat ) 对象初始化(仅初始化主函数) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="string">''</span>,</span><br><span class="line">  paths: &#123;</span><br><span class="line">    aat: <span class="string">'autoTest/task.aat'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Start the main app</span></span><br><span class="line">requirejs([<span class="string">'aat'</span>], <span class="function"><span class="keyword">function</span> (<span class="params"> aat </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( aat );<span class="comment">// 初始化验证</span></span><br><span class="line">  <span class="built_in">window</span>.aat =  aat ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>task.aat.js   ( 模块化 引用情况下会exports会使用 AMD )</p>
<blockquote>
<p>require(‘ autoTest/aat_core’ ‘) 可不需要 requirejs.config初始化<code>aat_core</code>及 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;], function (aat_core,  aat )</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define(factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory(<span class="literal">null</span>,(global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params"> require, exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> core = <span class="built_in">require</span>(<span class="string">'autoTest/aat_core'</span>)</span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>简易参考</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里按照commonjs的形式让requirejs自己去搜一遍，再引入third.js</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> third =<span class="built_in">require</span>(<span class="string">'third'</span>);</span><br><span class="line">    third();</span><br><span class="line">    <span class="built_in">module</span>.exports.action = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="number">22</span>)&#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="可能遇到问题_&amp;_处理办法">可能遇到问题 &amp; 处理办法</h1><h2 id="启动异常:Uncaught_Error:_Mismatched_anonymous_define()_module:_function">启动异常:Uncaught Error: Mismatched anonymous define() module: function</h2><h3 id="问题原因">问题原因</h3><p>引入<code>require.js</code>后,所有的<code>define()</code>定义模块都应该使用<code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;],</code>初始化,不应该<script>直接引入</p>
<ul>
<li>分析:<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">引用的requirejs跟引用的其他js引起了冲突,其他js中也定义的<span class="keyword">define</span>这个变量.</span><br><span class="line">比如你引用了这样的<span class="title">js</span>:</span><br><span class="line">&lt;script src=<span class="string">"services/require.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"services/Utility.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">出现了Mismatched anonymous <span class="keyword">define</span>() <span class="title">module</span>这种错误.那么意味着Utility.js中也定义了<span class="keyword">define</span>这样的变量.所以在使用中你只引用<span class="title">require</span>.js</span><br><span class="line">然后 require([<span class="string">'Utility'</span>],function()&#123;&#125;) 使用Utility.js 就不会出现错误了.</span><br><span class="line">该错误归根结底就是 <span class="keyword">define</span>已经被定义了.或者在之后的<span class="title">js</span>中被重写了.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>Mismatched anonymous define() module:这个怎么解决requirejs中的_百度知道</code><br><a href="http://zhidao.baidu.com/link?url=g9Lh6tofr3U7-nPUDqbqk6ifHxLH8PLwkDQ039biy3bhwwCGRyfDkonLaDUFMgoDj-UyiajnmSjO0MvtcCjdjXKvTlNOoMDMk_YpGlyODi7">http://zhidao.baidu.com/link?url=g9Lh6tofr3U7-nPUDqbqk6ifHxLH8PLwkDQ039biy3bhwwCGRyfDkonLaDUFMgoDj-UyiajnmSjO0MvtcCjdjXKvTlNOoMDMk_YpGlyODi7</a></p>
<h3 id="处理办法">处理办法</h3><p>方法一: 调整<code>&lt;script src=&quot;require.js&quot;&gt;&lt;/script&gt;</code>引入时机</p>
<p>方法二: 依据规范,通过 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;],</code>初始化<br><code>javascript - Uncaught Error: Mismatched anonymous define() module: function definition(name, global) - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/23796019/uncaught-error-mismatched-anonymous-define-module-function-definitionname">http://stackoverflow.com/questions/23796019/uncaught-error-mismatched-anonymous-define-module-function-definitionname</a></p>
<p>方法三: 修改<code>&lt;Script&gt;</code>引入方法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="keyword">var</span> ace = <span class="built_in">require</span>(<span class="string">"./path/to/ace"</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><code>javascript - loading Ace causes Uncaught Error: Mismatched anonymous define() module: - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/23224341/loading-ace-causes-uncaught-error-mismatched-anonymous-define-module">http://stackoverflow.com/questions/23224341/loading-ace-causes-uncaught-error-mismatched-anonymous-define-module</a></p>
<hr>
<h2 id="启动异常:Uncaught_Error:_Module_name_“aatcore”_has_not_been_loaded_yet_for_context:_-_Use_require([])">启动异常:Uncaught Error: Module name “aat<em>core” has not been loaded yet for context: </em>. Use require([])</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">require.<span class="string">js:</span><span class="number">168</span> Uncaught <span class="string">Error:</span> Module name <span class="string">"aat_core"</span> has not been loaded yet <span class="keyword">for</span> <span class="string">context:</span> _. Use require([])</span><br><span class="line"><span class="string">http:</span><span class="comment">//requirejs.org/docs/errors.html#notloadedmakeError</span></span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">168</span>localRequire</span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">1433</span>requirejs</span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">1794</span>(anonymous function)</span><br><span class="line">    @ task.aat.<span class="string">js:</span><span class="number">18</span>execCb</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1693</span>check</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">881</span>enable</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1173</span>init</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">786</span>callGetModule</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1200</span>completeLoad</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1587</span>onScriptLoad</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1714</span></span><br><span class="line">ng_http.factory.<span class="string">js:</span><span class="number">276</span> <span class="string">response:</span> <span class="number">34</span> <span class="number">0.397</span>s 查询成功 Object &#123;<span class="string">object:</span> Object&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>问题原因</li>
</ul>
<p>偶现：资源的异步加载，当使用了未初始化的对象时异常<br>依赖：未明确依赖，需要维护依赖关系</p>
<ul>
<li>解决办法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>,<span class="string">'aat_core'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> core = (<span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span>) ? <span class="built_in">require</span>(<span class="string">'aat_core'</span>) : exports;</span><br><span class="line">  <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"> </span><br><span class="line">&#125;)))</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>理解和解决requireJS的报错:MODULE NAME HAS NOT BEEN LOADED YET FOR CONTEXT</code><br><a href="http://blog.csdn.net/aitangyong/article/details/40708025">http://blog.csdn.net/aitangyong/article/details/40708025</a></p>
<p><code>javascript - Dynamic require in RequireJS, getting &quot;Module name has not been loaded yet for context&quot; error? - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/17446844/dynamic-require-in-requirejs-getting-module-name-has-not-been-loaded-yet-for-c">http://stackoverflow.com/questions/17446844/dynamic-require-in-requirejs-getting-module-name-has-not-been-loaded-yet-for-c</a></p>
<hr>
<h1 id="类似技术,开源技术">类似技术,开源技术</h1><p><code>搭建基于Karma和Jasmine的前端单元测试 - 简书</code><br>www.jianshu.com/p/a7ffb564734e</p>
<p>更多:<code>简书-搜索: karma</code><br><a href="http://www.jianshu.com/search?q=karma&amp;page=1&amp;type=notes">http://www.jianshu.com/search?q=karma&amp;page=1&amp;type=notes</a></p>
<p><code>webpro/Automated-SPA-Testing: Automated unit &amp; functional testing for web applications</code><br><a href="https://github.com/webpro/Automated-SPA-Testing">https://github.com/webpro/Automated-SPA-Testing</a></p>
</script></p>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="关键描述">关键描述</h1><ul>
<li>async 步执行函数,目的:页面同步刷新(柯里化)</li>
<li>sycFuncPromise 返回Promise的方法,处理连续的异步func调用.(可完全替代async)</li>
<li>currying]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javaScript 模块进化]]></title>
    <link href="http://yoursite.com/2016/09/16/javaScript%20%E6%A8%A1%E5%9D%97%E8%BF%9B%E5%8C%96/"/>
    <id>http://yoursite.com/2016/09/16/javaScript 模块进化/</id>
    <published>2016-09-15T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.543Z</updated>
    <content type="html"><![CDATA[<h1 id="最初的美好">最初的美好</h1><ul>
<li><p>污染全局变量</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>减少了全局变量 &amp;  暴露所有的模块成员，内部状态可以被外部读写</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myModule = &#123;</span><br><span class="line">    bar: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    log: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line">myMoudle.bar();</span><br></pre></td></tr></table></figure>
</li>
<li><p>匿名闭包的写法（Immediately-Invoked Function Expression，IIFE）</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myModule = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _log = <span class="string">"hello world"</span>;</span><br><span class="line">    <span class="keyword">var</span> log = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(_log);</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        log: log</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line">myModule.log();<span class="comment">//hello world</span></span><br><span class="line">myModule._log;<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li><p>引入依赖关系</p>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var myModule = (<span class="function"><span class="keyword">function</span><span class="params">($)</span>&#123;</span></span><br><span class="line">    var $<span class="built_in">log</span> = $('.<span class="built_in">log</span>');</span><br><span class="line">    var <span class="built_in">log</span> = <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        console.<span class="built_in">log</span>($<span class="built_in">log</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    return &#123;</span><br><span class="line">        <span class="built_in">log</span>: <span class="built_in">log</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line">myModule.<span class="built_in">log</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p>依赖管理</p>
</li>
<li>没有引入一个依赖的 js 文件而导致后面 js 的功能失效. | 请求过多 ，不利于性能优化<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"dialog.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"tooltip.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"toast.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"handlebar.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="undefined"></span><br><span class="line">......</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="CommonJS规范、AMD规范、CMD规范">CommonJS规范、AMD规范、CMD规范</h1><h2 id="CommonJS(代表作:_Browserify_)">CommonJS(代表作: Browserify )</h2><ul>
<li>服务器端的模块化的规范，是 Nood.js 在实践中推出的，Nood.js 也是首先采用 js 模块化的；</li>
<li>exports 定义模块</li>
<li>require 加载模块<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//math.js</span></span><br><span class="line">exports.add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = a + b;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="keyword">var</span> add = <span class="built_in">require</span>(<span class="string">'math'</span>).add;<span class="comment">//</span></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">1</span>,<span class="number">1</span>));<span class="comment">//2</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="AMD(代表作:RequireJS_)">AMD(代表作:RequireJS )</h2><ul>
<li>Asynchronous Module Definition，即异步的模块定义，是浏览器端的模块化规范，是 RequireJS 在推广过程中对模块定义的规范化产出</li>
</ul>
<ul>
<li>define 定义模块(同时定义依赖),模块名为文件名<ul>
<li><code>JavaScript模块化－require.js，r.js和打包发布 - 简书</code> <a href="http://www.jianshu.com/p/7186e5f2f341" target="_blank" rel="external">http://www.jianshu.com/p/7186e5f2f341</a><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">define</span>(<span class="title">id</span>?, dependencies?, factory);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'myModule'</span>,[<span class="string">'jQuery'</span>,<span class="string">'types/Employee'</span>],<span class="function"><span class="keyword">function</span><span class="params">($,Employee)</span></span>&#123;<span class="comment">//定义模块myModule，引入依赖jQuery，types/Employee</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Programmer</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//do something</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Programmer.prototype = <span class="keyword">new</span> Employee();</span><br><span class="line">        <span class="keyword">return</span> Programmer;  <span class="comment">//return Constructor</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="CMD(代表作:SeaJS_)">CMD(代表作:SeaJS )</h2><ul>
<li>Common Module Definition，即通用模块定义，是浏览器端的模块化规范，是 SeaJS 在推广过程中对模块定义的规范化产出</li>
</ul>
<ul>
<li>seajs.use模块载入<ul>
<li>seajs.use(‘./a’),require(‘a’), require.asyc(‘./a.js’)</li>
<li><code>Seajs模块载入方法 - 简书</code> <a href="http://www.jianshu.com/p/2de0d5b24c8c" target="_blank" rel="external">http://www.jianshu.com/p/2de0d5b24c8c</a></li>
</ul>
</li>
<li><p>define 定义模块(require提取依赖模块),模块名为文件名</p>
<ul>
<li><code>seajs模块加载机制 - 简书</code> <a href="http://www.jianshu.com/p/1245af09383e" target="_blank" rel="external">http://www.jianshu.com/p/1245af09383e</a><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">define</span>(<span class="title">factory</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>AMD 是 依赖关系前置，提前执行 ；CMD 是类似于 CommonJS 那样 按需加载，延迟执行 ：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//CMD recommanded</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'a'</span>);</span><br><span class="line">  a.doSomething();</span><br><span class="line">  <span class="keyword">var</span> b = <span class="built_in">require</span>(<span class="string">'b'</span>);</span><br><span class="line">  b.doSomething();    <span class="comment">// 依赖就近，延迟执行</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//AMD recommanded</span></span><br><span class="line">define([<span class="string">'a'</span>, <span class="string">'b'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">    a.doSomething();    <span class="comment">// 依赖前置，提前执行</span></span><br><span class="line">    b.doSomething();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="RequireJS模块化及r-js指南">RequireJS模块化及r.js指南</h1><ul>
<li><p>在 html 中指定了 RrequireJS 第一次需要加载的模块，也就是通过 data-main 所指定</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"src/js/app/index"</span> <span class="attribute">src</span>=<span class="value">"src/js/lib/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js</p>
<figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="symbol">'src</span>/js',</span><br><span class="line">  paths: &#123;</span><br><span class="line">    jquery: <span class="symbol">'lib</span>/jquery',</span><br><span class="line">    backTop: <span class="symbol">'com</span>/backTop',</span><br><span class="line">    jumpTo: <span class="symbol">'com</span>/jumpTo',</span><br><span class="line">    carousel: <span class="symbol">'com</span>/carousel',</span><br><span class="line">    exposure: <span class="symbol">'com</span>/exposure',</span><br><span class="line">    navfloor: <span class="symbol">'com</span>/navfloor',</span><br><span class="line">    waterfall: <span class="symbol">'com</span>/waterfall'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中 baseUrl 是改变基准路径，所有的模块相对于 baseUrl 来加载； baseUrl 路径以 index.html 所在的目录为基准；</p>
</li>
<li>其中 requirejs.config() 函数的 paths 属性指定各个模块的加载路径(相对于 baseUrl )，如果没有指定 baseUrl ，路径默认和主模块在同一目录;</li>
</ul>
<p>采用了 RequireJS 模块化写法解决了命名冲突和依赖管理的问题，同时也增加了文件数量，这也意味着请求的增多，无疑会带来性能问题；</p>
<ul>
<li><p>打包（优化）工具 r.js ,它可以实现前端文件的压缩与合并,减少服务器请求</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(&#123;</span><br><span class="line">    baseUrl: <span class="string">"./src/js"</span>,</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="variable">'jquery</span><span class="variable">':</span> <span class="variable">'lib/bower_components/jquery/dist/jquery.min</span>'</span><br><span class="line">    &#125;,</span><br><span class="line">    name: <span class="string">"main"</span>,</span><br><span class="line">    out: <span class="string">"dist/js/merge.js"</span></span><br><span class="line">&#125;)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>baseUrl 路径设置应与主模块中 require.config() 方法里的 baseUrl 实际路径一致</p>
</li>
<li>nam 指定的是解析入口，这里写了主模块，路径相对于前面指定的 baseUrl </li>
</ul>
<hr>
<p><code>前端模块化之旅（一）：因何生它 - 推酷</code></p>
<p><a href="http://www.tuicool.com/articles/z2AFRfF" target="_blank" rel="external">http://www.tuicool.com/articles/z2AFRfF</a></p>
<p><code>前端模块化之旅（二）：CommonJS、AMD和CMD - 推酷</code><br>www.tuicool.com/articles/ZFvIfmz</p>
<p><code>前端模块化之旅（三）：RequireJS模块化及r.js指南 - 推酷</code><br><a href="http://www.tuicool.com/articles/qyInuum" target="_blank" rel="external">http://www.tuicool.com/articles/qyInuum</a></p>
<p><code>Javascript模块化编程（一）：模块的写法 - 阮一峰的网络日志</code><br><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/10/javascript_module.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="最初的美好">最初的美好</h1><ul>
<li><p>污染全局变量</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line"]]>
    </summary>
    
      <category term="模块化" scheme="http://yoursite.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ES6 模块化]]></title>
    <link href="http://yoursite.com/2016/09/15/ES6%20%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    <id>http://yoursite.com/2016/09/15/ES6 模块化/</id>
    <published>2016-09-14T16:00:00.000Z</published>
    <updated>2016-11-19T04:15:17.535Z</updated>
    <content type="html"><![CDATA[<p>示例:  <a href="https://github.com/tildeio/rsvp.js" target="_blank" rel="external">https://github.com/tildeio/rsvp.js</a>  #downloads</p>
<ul>
<li>ES6编写</li>
<li>支持 CommonJS, AMD模块化规范<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.RSVP = global.RSVP || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p>现代浏览器对模块(module)支持程度不同， 目前都是使用babelJS， 或者Traceur把ES6代码转化为兼容ES5版本的js代码;</p>
<h1 id="ES6的模块化的基本规则或特点">ES6的模块化的基本规则或特点</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="comment">//导出常量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sqrt = <span class="built_in">Math</span>.sqrt;</span><br><span class="line"><span class="comment">//导出函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//导出函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">diag</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqrt(square(x) + square(y));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; square, diag &#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">11</span>)); <span class="comment">// 121</span></span><br><span class="line"><span class="built_in">console</span>.log(diag(<span class="number">4</span>, <span class="number">3</span>)); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure>
<h1 id="import和export的基本语法">import和export的基本语法</h1><ul>
<li><p>export{} 导出方式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js 文件</span></span><br><span class="line"><span class="keyword">let</span> bar = <span class="string">"stringBar"</span>;</span><br><span class="line"><span class="keyword">let</span> foo = <span class="string">"stringFoo"</span>;</span><br><span class="line"><span class="keyword">let</span> fn0 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn0"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn1"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span>&#123; bar , foo, fn0, fn1&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;bar,foo, fn0, fn1&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(bar+<span class="string">"_"</span>+foo);</span><br><span class="line">fn0();</span><br><span class="line">fn1();</span><br></pre></td></tr></table></figure>
</li>
<li><p>export{} 导出方式 + 别名</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js文件</span></span><br><span class="line"><span class="keyword">let</span> fn0 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn0"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj0 = &#123;&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; fn0 <span class="keyword">as</span> foo, obj0 <span class="keyword">as</span> bar&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, bar&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line">foo();</span><br><span class="line"><span class="built_in">console</span>.log(bar);</span><br></pre></td></tr></table></figure>
</li>
<li><p>单行导出</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js文件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> foo = ()=&gt; &#123;<span class="built_in">console</span>.log(<span class="string">"fnFoo"</span>) ;<span class="keyword">return</span> <span class="string">"foo"</span>&#125;,bar = <span class="string">"stringBar"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, bar&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(foo());</span><br><span class="line"><span class="built_in">console</span>.log(bar);</span><br></pre></td></tr></table></figure>
</li>
<li><p>default匿名导出</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">"string"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> defaultString <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(defaultString);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">let</span> fn = () =&gt; <span class="string">"string"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;fn <span class="keyword">as</span> <span class="keyword">default</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> defaultFn <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(defaultFn());</span><br></pre></td></tr></table></figure>
<ul>
<li>通配符导出所有<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> * from <span class="string">"./other"</span>;</span><br><span class="line"><span class="comment">//如果只想导出部分接口， 只要把接口名字列出来</span></span><br><span class="line"><span class="comment">//export &#123;foo,fnFoo&#125; from "./other";</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//other.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> foo = <span class="string">"stringFoo"</span>, fnFoo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">"fnFoo"</span>)&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, fnFoo&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(foo);</span><br><span class="line"><span class="built_in">console</span>.log(fnFoo());</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> obj <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure>
<h1 id="ES6导入的模块都是属于引用">ES6导入的模块都是属于引用</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> counter = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">incCounter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    counter++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setCounter</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    counter = value;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; counter, incCounter ,setCounter&#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// The imported value `counter` is live</span></span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 3</span></span><br><span class="line">incCounter();</span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 4</span></span><br><span class="line">setCounter(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>
<h1 id="循环依赖的问题">循环依赖的问题</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//index.html</span><br><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"cyclic"</span> <span class="attribute">src</span>=<span class="value">"//cdn.bootcss.com/require.js/2.2.0/require.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="comment">//cyclic.js</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"file0"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file0</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file0)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//file0.js</span></span><br><span class="line">define([<span class="string">"file1"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file1</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file1)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        file0 : <span class="string">"file0"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//file1.js</span></span><br><span class="line">define([<span class="string">"file0"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file0</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file0);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        file1 : <span class="string">"file1"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">undefined</span></span><br><span class="line"><span class="built_in">Object</span> &#123; file1: <span class="string">"file1"</span> &#125;</span><br><span class="line"><span class="built_in">Object</span> &#123; file0: <span class="string">"file0"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>在执行file1.js的时候file0.js还没执行完， 所以输出了undefined， 这种输出结果和NodeJS输出的情况是一样的；</p>
<hr>
<p><code>ES6新特性：使用export和import实现模块化 - 方方和圆圆 - 博客园</code><br><a href="http://www.cnblogs.com/diligenceday/p/5503777.htm" target="_blank" rel="external">http://www.cnblogs.com/diligenceday/p/5503777.htm</a> l<br><a href="http://www.tuicool.com/articles/EryUniv" target="_blank" rel="external">http://www.tuicool.com/articles/EryUniv</a></p>
<ul>
<li>ES6的模块化的基本规则或特点：</li>
<li>下面列出几种import和export的基本语法：</li>
<li>ES6导入的模块都是属于引用：</li>
<li>循环依赖的问题：</li>
<li>浏览器兼容：</li>
<li>参考：</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>示例:  <a href="https://github.com/tildeio/rsvp.js" target="_blank" rel="external">https://github.com/tildeio/rsvp.js</a>  #downloads</p>
<]]>
    </summary>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic Icon and Splash Screen Image Generation完整收集]]></title>
    <link href="http://yoursite.com/2016/09/14/ionic%20Icon%20and%20Splash%20Screen%20Image%20Generation%E5%AE%8C%E6%95%B4%E6%94%B6%E9%9B%86/"/>
    <id>http://yoursite.com/2016/09/14/ionic Icon and Splash Screen Image Generation完整收集/</id>
    <published>2016-09-13T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.466Z</updated>
    <content type="html"><![CDATA[<h1 id="ionic_Icon_and_Splash_Screen_Image_Generation官方说明">ionic Icon and Splash Screen Image Generation官方说明</h1><ul>
<li><p>使用命令（支持png、psd和ai，尺寸越大越好）</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ionic resources --icon</span><br><span class="line"><span class="variable">$ </span>ionic resources --splash</span><br><span class="line"><span class="variable">$ </span>ionic resources</span><br><span class="line"><span class="variable">$ </span>ionic resources ios</span><br><span class="line"><span class="variable">$ </span>ionic resources --default</span><br><span class="line"><span class="variable">$ </span>ionic resources --default --force</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用PSD模板</p>
<ul>
<li><p><a href="http://code.ionicframework.com/resources/splash.psd" target="_blank" rel="external">Photoshop Splash Screen Template</a></p>
</li>
<li><p><a href="http://code.ionicframework.com/resources/icon.psd" target="_blank" rel="external">Photoshop Icon Template</a></p>
</li>
</ul>
</li>
</ul>
<p><a href="https://github.com/driftyco/ionic-cli#icon-and-splash-screen-image-generation" target="_blank" rel="external">https://github.com/driftyco/ionic-cli#icon-and-splash-screen-image-generation</a></p>
<p><code>介绍 博客</code><br><a href="http://blog.ionic.io/automating-icons-and-splash-screens/" target="_blank" rel="external">http://blog.ionic.io/automating-icons-and-splash-screens/</a></p>
<p><code>自定义图标 Customize Icons</code><br><a href="http://cordova.apache.org/docs/en/dev/config_ref/images.html#Icons%20and%20Splash%20Screens_" target="_blank" rel="external">http://cordova.apache.org/docs/en/dev/config_ref/images.html#Icons%20and%20Splash%20Screens_</a></p>
<hr>
<h1 id="在线生成工具">在线生成工具</h1><p><code>图标工场 - 移动应用图标生成工具，一键生成所有尺寸的应用图标</code>  ★ ★<br><a href="http://icon.wuruihong.com/" target="_blank" rel="external">http://icon.wuruihong.com/</a></p>
<p><code>在线批量生成各种尺寸iOS、Android APP图表集合 - aTool在线工具</code><br><a href="http://www.atool.org/ios_logo.php" target="_blank" rel="external">http://www.atool.org/ios_logo.php</a></p>
<hr>
<h1 id="开源工具">开源工具</h1><p><code>cordova-icon-splash-generator</code><br><a href="https://github.com/collingreen/cordova-icon-splash-generator" target="_blank" rel="external">https://github.com/collingreen/cordova-icon-splash-generator</a></p>
<p><code>busterc/cordova-resource-generators</code> - liunx,mac <code>35star</code><br><a href="https://github.com/busterc/cordova-resource-generators" target="_blank" rel="external">https://github.com/busterc/cordova-resource-generators</a></p>
<p><code>gulp-cordova-resources</code><br><a href="https://github.com/david-alexander/gulp-cordova-resources" target="_blank" rel="external">https://github.com/david-alexander/gulp-cordova-resources</a></p>
<p><code>cordova-ionic-maven-archetype | cordova-icon-splash 生成器</code> ★<br><a href="https://github.com/zhoujianhui/cordova-ionic-maven-archetype/blob/52d5186c785d1d27d06336916a2056c6c15d4980/test-cordova-ionic-maven-archetype/icon-splash/README.md" target="_blank" rel="external">https://github.com/zhoujianhui/cordova-ionic-maven-archetype/blob/52d5186c785d1d27d06336916a2056c6c15d4980/test-cordova-ionic-maven-archetype/icon-splash/README.md</a></p>
<p><code>cordova-splash</code>  <code>207star</code>  ★<br><a href="https://github.com/AlexDisler/cordova-splash" target="_blank" rel="external">https://github.com/AlexDisler/cordova-splash</a></p>
<p><code>AlexDisler/cordova-icon</code> 404star  ★ ★</p>
<p><a href="https://github.com/AlexDisler/cordova-icon" target="_blank" rel="external">https://github.com/AlexDisler/cordova-icon</a><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova-<span class="attribute">icon</span> --config=config<span class="class">.xml</span> --<span class="attribute">icon</span>= resources/ <span class="attribute">icon</span>.png</span><br></pre></td></tr></table></figure></p>
<p><code>AlexDisler/cordova-splash</code> 207star  ★ ★<br><a href="https://github.com/AlexDisler/cordova-splash" target="_blank" rel="external">https://github.com/AlexDisler/cordova-splash</a></p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">cordova</span><span class="literal">-</span><span class="comment">splash</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">config=config</span><span class="string">.</span><span class="comment">xml</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">splash=resources/splash</span><span class="string">.</span><span class="comment">png</span></span><br></pre></td></tr></table></figure>
<p>(生成后直接应用于platform中,需要手动取出.按规格存放resources)</p>
<p><code>Icon-Splash-Resize</code><br><a href="https://github.com/dericeira/Icon-Splash-Resize" target="_blank" rel="external">https://github.com/dericeira/Icon-Splash-Resize</a></p>
<p><code>github搜索:cordova splash 生成</code><br><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=cordova+splash+%E7%94%9F%E6%88%90&amp;type=Code&amp;ref=searchresults" target="_blank" rel="external">https://github.com/search?utf8=%E2%9C%93&amp;q=cordova+splash+%E7%94%9F%E6%88%90&amp;type=Code&amp;ref=searchresults</a></p>
<hr>
<p><code>ionic框架iOS所需icon与splash规格（命名与尺寸）</code><br><a href="http://blog.leanote.com/freemem" target="_blank" rel="external">http://blog.leanote.com/freemem</a></p>
<p><code>App各种Icon及Launch image的尺寸和用途 移动端尺寸基础知识</code></p>
<p><a href="https://my.oschina.net/u/2252309/blog/402724" target="_blank" rel="external">https://my.oschina.net/u/2252309/blog/402724</a></p>
<hr>
<h1 id="文章介绍">文章介绍</h1><p><code>Cordova 3.x 基础（2） -- 应用图标icon和启动页面SplashScreen - Fish Where The Fish Are - ITeye技术网站</code><br><a href="http://rensanning.iteye.com/blog/2017380" target="_blank" rel="external">http://rensanning.iteye.com/blog/2017380</a><br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果你本地安装了ImageMagick，<span class="keyword">CLI</span>还会自动调用ImageMagick来做成不同尺寸的图像。</span><br><span class="line">需要注意的是：</span><br><span class="line">（<span class="number">1</span>）图像的路径是相对于工程根目录不是根据www</span><br><span class="line">（<span class="number">2</span>）不要和PhoneGap <span class="keyword">CLI</span>的设置混淆</span><br></pre></td></tr></table></figure></p>
<p><code>Ionic Framework的一些命令行解释 - 推酷</code><br><a href="http://www.tuicool.com/articles/FFfiquu" target="_blank" rel="external">http://www.tuicool.com/articles/FFfiquu</a></p>
<p><code>【Ionic】图标-名称-启动画修改_百度经验</code><br><a href="http://jingyan.baidu.com/article/fdffd1f85ee24ef3e88ca164.html" target="_blank" rel="external">http://jingyan.baidu.com/article/fdffd1f85ee24ef3e88ca164.html</a></p>
<p><code>【Ionic】App应用名字+应用图标+启动画的修改_百度经验</code><br><a href="http://jingyan.baidu.com/article/c35dbcb0ec59438916fcbcaf.html" target="_blank" rel="external">http://jingyan.baidu.com/article/c35dbcb0ec59438916fcbcaf.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="ionic_Icon_and_Splash_Screen_Image_Generation官方说明">ionic Icon and Splash Screen Image Generation官方说明</h1><ul>
<li><p>使用命令（支持png、psd和]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
  </entry>
  
</feed>
