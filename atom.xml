<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[编程在继续]]></title>
  <subtitle><![CDATA[编程在继续，刘祥's blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2017-01-19T10:48:54.054Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[刘祥@赛学霸]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[思维导图-测试知识体系]]></title>
    <link href="http://yoursite.com/2017/01/19/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE-%E6%B5%8B%E8%AF%95%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>http://yoursite.com/2017/01/19/思维导图-测试知识体系/</id>
    <published>2017-01-18T16:00:00.000Z</published>
    <updated>2017-01-19T10:48:54.054Z</updated>
    <content type="html"><![CDATA[<p><a href="https://github.com/liuxiang/xmind" target="_blank" rel="external">下载：<code>测试知识体系.xmind</code></a></p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/64446147-file_1484818545403_2d30.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="https://github.com/liuxiang/xmind" target="_blank" rel="external">下载：<code>测试知识体系.xmind</code></a></p>
<p><img src="http://7xnbs]]>
    </summary>
    
      <category term="思维导图" scheme="http://yoursite.com/tags/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IntelliJ IDEA 初始化Application Servers]]></title>
    <link href="http://yoursite.com/2017/01/18/IntelliJ%20IDEA%20%E5%88%9D%E5%A7%8B%E5%8C%96Application%20Servers/"/>
    <id>http://yoursite.com/2017/01/18/IntelliJ IDEA 初始化Application Servers/</id>
    <published>2017-01-17T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.119Z</updated>
    <content type="html"><![CDATA[<p>IntelliJ IDEA 2016.3(64) 初始化<code>Application Servers</code></p>
<ul>
<li>初始化 <code>Application Servers</code> <code>Tomcat</code><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/12549787-file_1484818519371_181d4.png" alt=""></li>
</ul>
<ul>
<li>引入依赖<br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/18756710-file_1484818531832_fbda.png" alt=""></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>IntelliJ IDEA 2016.3(64) 初始化<code>Application Servers</code></p>
<ul>
<li>初始化 <code>Application Servers</code> <code>Tomcat</code><br><im]]>
    </summary>
    
      <category term="IntelliJ IDEA" scheme="http://yoursite.com/tags/IntelliJ-IDEA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows下使用svn命令行]]></title>
    <link href="http://yoursite.com/2017/01/12/Windows%E4%B8%8B%E4%BD%BF%E7%94%A8svn%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    <id>http://yoursite.com/2017/01/12/Windows下使用svn命令行/</id>
    <published>2017-01-11T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.109Z</updated>
    <content type="html"><![CDATA[<h1 id="Windows下命令行工具">Windows下命令行工具</h1><p>发现原来安装的tortoisesvn已经集成到shell中，不能在命令行下使用。于是找到这个<a href="http://www.visualsvn.com/downloads/" target="_blank" rel="external">http://www.visualsvn.com/downloads/</a><br>下载Apache Subversion command line tools，这是一个可以在cmd下使用的命令行工具，解压后把里面bin目录这个路径添加到环境变量的path，这样在cmd下就可以使用了，和Linux下使用svn的习惯一样了。</p>
<h2 id="简明教程：">简明教程：</h2><p><a href="http://www.flyne.org/article/851" target="_blank" rel="external">http://www.flyne.org/article/851</a><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">目录约定：</span><br><span class="line">/trunck：开发主线</span><br><span class="line">/<span class="keyword">branches：支线副本</span><br><span class="line"></span>/tags：标签副本（一旦创建，不允许修改）</span><br></pre></td></tr></table></figure></p>
<h2 id="常用命令">常用命令</h2><p>svn help<br>svn –version<br>svn –version –quiet    只显示版本号<br>svn checkout 地址<br>svn add 文件或者文件夹    增加本地数据到服务器<br>svn commit / svn ci -m “注释”  文件名   提交代码，要先add才commit<br>svn update / svn up 不必跟特定的文件或目录，也可以自己指定需要更新的文件或目录。每次commit或者改动之前最好更新一下。<br>svn log<br>svn delete 文件名<br>svn resolve 路径 –accept working    解决冲突<br><a href="http://zccst.iteye.com/blog/1765519" target="_blank" rel="external">http://zccst.iteye.com/blog/1765519</a><br>svn switch 远程路径    版本切换<br>svn list 路径 / svn ls    列出版本库下的文件和目录<br>svn merge -r m:n 路径     合并文件，从版本号m到版本号n的远程分支都合并到当前分支中<br>svn info 确认工作目录的svn信息<br>svn diff -r m:n 路径    对版本m和版本n比较差异<br>svn cleanup     为失败的失误清场<br>svn status -v    在本地进行代码修改，检查修改状态<br>svn import 远程路径 –message “message”   将当前路径下文件导入到版本库中<br>svn export 远程路径    导出一份干净的项目<br>svn move/ svn mv 原文件名 新文件名    重命名<br>svn mkdir 文件名<br>svn copy / svn cp 源文件路径 新文件路径<br>svn revert 文件名     只能恢复未提交之前的操作<br>若要还原已提交的改动：只能用旧文件覆盖新文件。操作如下：<br>    1）sun up    让本地工作拷贝更新到最新状态<br>    2）svn log your_file_path     查看文件日志，这时候提交时填写的说明信息就派上用场了<br>    3）svn diff -r 旧修订版序号:新修订版序号 your_file_path    查看两个修订版之间的不同。<br>    4）决定用哪个旧的修订版号后，用旧的修订版号文件覆盖新的修订版号文件。svn merge -r 新修订版序号:旧修订版序号 your_file_path<br>    5）svn commit -m “恢复到某修订版（某修订版作废）”<br>本地的版本叫做working copy</p>
<hr>
<p><code>在Windows下使用svn命令行教程及svn命令行的解释 - SunnyAndroider - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/yangxiao2shi/article/details/50719286/" target="_blank" rel="external">http://blog.csdn.net/yangxiao2shi/article/details/50719286/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Windows下命令行工具">Windows下命令行工具</h1><p>发现原来安装的tortoisesvn已经集成到shell中，不能在命令行下使用。于是找到这个<a href="http://www.visualsvn.com/downloads/" targ]]>
    </summary>
    
      <category term="svn" scheme="http://yoursite.com/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[打开QQ群链接]]></title>
    <link href="http://yoursite.com/2017/01/11/%E6%89%93%E5%BC%80QQ%E7%BE%A4%E9%93%BE%E6%8E%A5/"/>
    <id>http://yoursite.com/2017/01/11/打开QQ群链接/</id>
    <published>2017-01-10T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.097Z</updated>
    <content type="html"><![CDATA[<h1 id="获取方式一：_QQ群分享-链接分享">获取方式一： QQ群分享-链接分享</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//jq.qq.com/?_wv=1027&amp;k=43b8mqv</span></span><br></pre></td></tr></table></figure>
<h1 id="获取方式二：QQ群管理">获取方式二：QQ群管理</h1><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/8806496-file_1484817960373_a59b.png" alt=""><br><a href="http://qun.qq.com/join.html" target="_blank" rel="external">http://qun.qq.com/join.html</a></p>
<ul>
<li><p>网页</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//shang.qq.com/wpa/qunwpa?idkey=1cd<span class="number">46704013588</span>e<span class="number">4a44e91315</span>e1ca7fbbf57d44da54faa7555da7cc<span class="number">3261293b1</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>android</p>
<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/<span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> 发起添加群流程。群号：创业吧(8182842) 的 key 为： k2JRDCGgPm8Lrf8HFQO63ZPIq53PapvL</span><br><span class="line"><span class="keyword">*</span> 调用 joinQQGroup(k2JRDCGgPm8Lrf8HFQO63ZPIq53PapvL) 即可发起手Q客户端申请加群 创业吧(8182842)</span><br><span class="line"><span class="keyword">*</span></span><br><span class="line"><span class="keyword">*</span> <span class="comment">@param key 由官网生成的key</span></span><br><span class="line"><span class="keyword">*</span> <span class="comment">@return 返回true表示呼起手Q成功，返回fals表示呼起失败</span></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line">public boolean joinQQGroup(String key) &#123;</span><br><span class="line">    Intent intent = new Intent();</span><br><span class="line">    intent.setData(Uri.parse(<span class="string">"mqqopensdkapi://bizAgent/qm/qr?url=http%3A%2F%2Fqm.qq.com%2Fcgi-bin%2Fqm%2Fqr%3Ffrom%3Dapp%26p%3Dandroid%26k%3D"</span> + key));</span><br><span class="line">   // 此Flag可根据具体产品需要自定义，如设置，则在加群界面按返回，返回手Q主界面，不设置，按返回会返回到呼起产品界面    //intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK)</span><br><span class="line">    try &#123;</span><br><span class="line">        startActivity(intent);</span><br><span class="line">        return true;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">        // 未安装手Q或安装的版本不支持</span><br><span class="line">        return false;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>iphone</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="built_in">BOOL</span>)joinGroup:(<span class="built_in">NSString</span> *)groupUin key:(<span class="built_in">NSString</span> *)key&#123;</span><br><span class="line"><span class="built_in">NSString</span> *urlStr = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"mqqapi://card/show_pslcard?src_type=internal&amp;version=1&amp;uin=%@&amp;key=%@&amp;card_type=group&amp;source=external"</span>, <span class="string">@"8182842"</span>,<span class="string">@"1cd46704013588e4a44e91315e1ca7fbbf57d44da54faa7555da7cc3261293b1"</span>];</span><br><span class="line"><span class="built_in">NSURL</span> *url = [<span class="built_in">NSURL</span> URLWithString:urlStr];</span><br><span class="line"><span class="keyword">if</span>([[<span class="built_in">UIApplication</span> sharedApplication] canOpenURL:url])&#123;</span><br><span class="line">[[<span class="built_in">UIApplication</span> sharedApplication] openURL:url];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">YES</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">NO</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>二维码地址（也可用于配置微信公众号）</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">http:</span><span class="comment">//qm.qq.com/cgi-bin/qm/qr?k=oBdEbu5t5-F4-GutaeK8ySZMZCU7it_m</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="获取方式一：_QQ群分享-链接分享">获取方式一： QQ群分享-链接分享</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</s]]>
    </summary>
    
      <category term="打开QQ群" scheme="http://yoursite.com/tags/%E6%89%93%E5%BC%80QQ%E7%BE%A4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[监听video播放事件 tips]]></title>
    <link href="http://yoursite.com/2017/01/07/%E7%9B%91%E5%90%ACvideo%E6%92%AD%E6%94%BE%E4%BA%8B%E4%BB%B6%20tips/"/>
    <id>http://yoursite.com/2017/01/07/监听video播放事件 tips/</id>
    <published>2017-01-06T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.086Z</updated>
    <content type="html"><![CDATA[<h1 id="监听timeupdate事件，在触发后，立即关掉监听。即为播放事件">监听timeupdate事件，在触发后，立即关掉监听。即为播放事件</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vid = <span class="built_in">document</span>.getElementById(<span class="string">"myVideo"</span>);<span class="comment">//  var vid =   document.querySelector('video');</span></span><br><span class="line">vid.addEventListener(<span class="string">'timeupdate'</span>, <span class="function"><span class="keyword">function</span> <span class="title">timeupdateListener</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">"demo2"</span>).innerHTML = <span class="string">'开始播放:'</span> + vid.currentTime;<span class="comment">// </span></span><br><span class="line">  vid.removeEventListener(<span class="string">"timeupdate"</span>, timeupdateListener);<span class="comment">// 删除当前事件监听</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>测试代码</code><br><a href="http://www.runoob.com/try/try.php?filename=tryhtml5_av_event_timeupdate" target="_blank" rel="external">http://www.runoob.com/try/try.php?filename=tryhtml5_av_event_timeupdate</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="监听timeupdate事件，在触发后，立即关掉监听。即为播放事件">监听timeupdate事件，在触发后，立即关掉监听。即为播放事件</h1><figure class="highlight javascript"><table><tr><td class="]]>
    </summary>
    
      <category term="video" scheme="http://yoursite.com/tags/video/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angular 中 ng-click 获取element 对象]]></title>
    <link href="http://yoursite.com/2017/01/04/angular%20%E4%B8%AD%20ng-click%20%E8%8E%B7%E5%8F%96element%20%E5%AF%B9%E8%B1%A1/"/>
    <id>http://yoursite.com/2017/01/04/angular 中 ng-click 获取element 对象/</id>
    <published>2017-01-03T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.075Z</updated>
    <content type="html"><![CDATA[<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"team-filters"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">ng-click</span>=<span class="value">"foo($event, team)"</span> <span class="attribute">ng-repeat</span>=<span class="value">"team in teams"</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"</span></span></span><span class="expression">&#123;&#123;<span class="variable">team.logoSmall</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">alt</span>=<span class="value">"</span></span></span><span class="expression">&#123;&#123;<span class="variable">team.name</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span> <span class="attribute">title</span>=<span class="value">"</span></span></span><span class="expression">&#123;&#123;<span class="variable">team.name</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.foo = <span class="keyword">function</span>(<span class="variable">$event</span>, team) &#123;</span><br><span class="line">   var el = (function()&#123;</span><br><span class="line">       if (<span class="variable">$event</span>.target.nodeName === <span class="string">'IMG'</span>) &#123;</span><br><span class="line">          return angular.element(<span class="variable">$event</span>.target).parent(); // get li</span><br><span class="line">       &#125; else &#123;</span><br><span class="line">          return angular.element(<span class="variable">$event</span>.target);          // is li</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;)();</span><br></pre></td></tr></table></figure>
<p><code>get original element from ng-click</code></p>
<p><a href="http://stackoverflow.com/questions/23107613/get-original-element-from-ng-click" target="_blank" rel="external">http://stackoverflow.com/questions/23107613/get-original-element-from-ng-click</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span ]]>
    </summary>
    
      <category term="angular" scheme="http://yoursite.com/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ipv6]]></title>
    <link href="http://yoursite.com/2017/01/03/ipv6/"/>
    <id>http://yoursite.com/2017/01/03/ipv6/</id>
    <published>2017-01-02T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.062Z</updated>
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><p>网络地址转换(NAT)</p>
<h1 id="网友">网友</h1><p><a href="https://bbs.aliyun.com/read/284699.html?spm=5176.bbsr284699.0.0.CPENAv&amp;page=2" target="_blank" rel="external">https://bbs.aliyun.com/read/284699.html?spm=5176.bbsr284699.0.0.CPENAv&amp;page=2</a></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">目前来看，是只能申请IPv6的隧道地址，因为目前国内还没有普及IPv6的网络喔。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">苹果的意思是，新提交的应用必须兼容IPV6-only协议，你现在有没有IPv6地址不重要，重要的是能在未来能直接通过IPv6连接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">我的问题搞定了，我花钱买了vip dns </span><br><span class="line">看来我上次怀疑的是对的。 </span><br><span class="line">以前我们是通过ip链接的，所以美国测试的能连上。 </span><br><span class="line">然后用了域名，美国那边可能连不上这个垃圾dns服务器结果就没法解析。。。 </span><br><span class="line">我看到阿里的vip dns有备注里“xxxxxx海外” ，估计免费的dns压根不支持海外。 </span><br><span class="line">反正我花钱之后再次递交，第二天就好了！ </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">个人建议，您用设置不同的解析记录来区分ipv4和ipv6的记录。</span><br><span class="line">如 ipv6<span class="class">.yourdomain</span><span class="class">.com</span> 解析到AAAA，www<span class="class">.yourdomain</span><span class="class">.com</span> 解析普通的A记录。这俩个主机名同时在Web里绑定。这样，是否会好些？</span><br></pre></td></tr></table></figure>
<h1 id="问题">问题</h1><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/40359048-file_1484818385165_1033c.png" alt=""></p>
<p><a href="https://bbs.aliyun.com/read/290628.html" target="_blank" rel="external">https://bbs.aliyun.com/read/290628.html</a> </p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/50457131-file_1484818397697_151a0.png" alt=""><br><a href="https://bbs.aliyun.com/read/295314.html" target="_blank" rel="external">https://bbs.aliyun.com/read/295314.html</a></p>
<h1 id="示例">示例</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">nslookup</span> <span class="tag">www</span><span class="class">.6box</span><span class="class">.cn</span> <span class="tag">dns64</span><span class="class">.6box</span><span class="class">.cn</span></span><br></pre></td></tr></table></figure>
<h1 id="赛学霸">赛学霸</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;Nslookup www.saixueba.com dns64<span class="number">.6</span>box.cn</span><br><span class="line">DNS request timed out.</span><br><span class="line">    timeout was <span class="number">2</span> seconds.</span><br><span class="line">服务器:  UnKnown</span><br><span class="line">Address:  <span class="number">222.28</span><span class="number">.155</span><span class="number">.25</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">名称:    www.saixueba.com</span><br><span class="line">Addresses:  <span class="number">2001</span>:da8:<span class="number">20</span>d:<span class="number">400</span>::<span class="number">792</span>b:<span class="number">4235</span></span><br><span class="line">          <span class="number">121.43</span><span class="number">.66</span><span class="number">.53</span></span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;Nslookup kexue.saixueba.com dns64<span class="number">.6</span>box.cn</span><br><span class="line">服务器:  UnKnown</span><br><span class="line">Address:  <span class="number">222.28</span><span class="number">.155</span><span class="number">.25</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">非权威应答:</span><br><span class="line">名称:    kexue.saixueba.com</span><br><span class="line">Addresses:  <span class="number">2001</span>:da8:<span class="number">20</span>d:<span class="number">400</span>::<span class="number">7837</span>:f474</span><br><span class="line">          <span class="number">120.55</span><span class="number">.244</span><span class="number">.116</span></span><br></pre></td></tr></table></figure>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/80019689-file_1484818340912_10ae5.png" alt=""></p>
<hr>
<h1 id="处理">处理</h1><p><a href="http://www.solve6.com/" target="_blank" rel="external">http://www.solve6.com/</a></p>
<ul>
<li>方案一：使用教育网的NAT64+DNS64服务<br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/97591629-file_1484818351454_c057.png" alt=""></li>
</ul>
<ul>
<li>方案二：使用IPv6隧道<br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/74309866-file_1484818362144_31c4.png" alt=""></li>
</ul>
<h1 id="文章">文章</h1><p><code>转给您身边苹果开发者，IPv6被拒如何破？</code></p>
<p><a href="http://mp.weixin.qq.com/s?plg_nld=1&amp;plg_uin=1&amp;mid=2247483863&amp;idx=1&amp;plg_nld=1&amp;scene=23&amp;plg_auth=1&amp;__biz=MzI0NTI4ODA2Mw%3D%3D&amp;plg_dev=1&amp;srcid=0701GkquSx0l7Z6CchTAHFFn&amp;plg_usr=1&amp;plg_vkey=1&amp;sn=622478d2775c5f8835fe1ed16964552e#rd" target="_blank" rel="external">http://mp.weixin.qq.com/s?plg_nld=1&amp;plg_uin=1&amp;mid=2247483863&amp;idx=1&amp;plg_nld=1&amp;scene=23&amp;plg_auth=1&amp;__biz=MzI0NTI4ODA2Mw%3D%3D&amp;plg_dev=1&amp;srcid=0701GkquSx0l7Z6CchTAHFFn&amp;plg_usr=1&amp;plg_vkey=1&amp;sn=622478d2775c5f8835fe1ed16964552e#rd</a></p>
<p><code>IPv6审核被拒解决方案 - 你的IPv6审核专家</code><br><a href="http://www.solve6.com/" target="_blank" rel="external">http://www.solve6.com/</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="简介">简介</h1><p>网络地址转换(NAT)</p>
<h1 id="网友">网友</h1><p><a href="https://bbs.aliyun.com/read/284699.html?spm=5176.bbsr284699.0.0.CPENAv&]]>
    </summary>
    
      <category term="ipv6" scheme="http://yoursite.com/tags/ipv6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端框架库]]></title>
    <link href="http://yoursite.com/2016/12/23/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E5%BA%93/"/>
    <id>http://yoursite.com/2016/12/23/前端框架库/</id>
    <published>2016-12-22T16:00:03.000Z</published>
    <updated>2017-01-19T10:09:46.049Z</updated>
    <content type="html"><![CDATA[<h1 id="前端应用">前端应用</h1><ul>
<li><a href="https://github.com/facebook/react" target="_blank" rel="external"> facebook/react</a>      <code>star 52,092</code> ★</li>
<li><a href="https://github.com/colorfest/angularjs" target="_blank" rel="external">angular/angular.js</a>   <code>star 53,947</code>  ★</li>
<li><a href="https://github.com/vuejs/vue" target="_blank" rel="external">vuejs/vue</a> <code>star 37,491</code> <code>使用mustache风格</code></li>
</ul>
<h1 id="前端移动应用">前端移动应用</h1><ul>
<li><a href="https://github.com/facebook/react-native" target="_blank" rel="external">facebook/react-native</a> <code>41,866</code>  ★</li>
<li><a href="https://github.com/driftyco/ionic" target="_blank" rel="external"> driftyco/ionic</a>     <code>star 27,165</code>  ★</li>
<li><a href="https://github.com/driftyco/ionic2" target="_blank" rel="external"> driftyco/ionic2</a>     <code>star 463</code></li>
</ul>
<h1 id="管理系统">管理系统</h1><ul>
<li><a href="https://github.com/ElemeFE/element" target="_blank" rel="external">ElemeFE/element</a>   <code>star 6,229</code>  ★  -基于Vue.js 2的组件库</li>
</ul>
<hr>
<h1 id="后端管理系统">后端管理系统</h1><h2 id="*Admin,前端分离_(_SPA单页应用_)">*Admin,前端分离 ( SPA单页应用 )</h2><ul>
<li><code>Element，基于 Vue 2.0 的组件库</code>  <a href="http://element.eleme.io/#/zh-CN/component/table" target="_blank" rel="external">http://element.eleme.io/#/zh-CN/component/table</a></li>
<li>angular组件库？</li>
</ul>
<h3 id="angular_admin_模板搜索"><code>angular admin</code><a href="https://github.com/search?o=desc&amp;q=angular+admin&amp;s=stars&amp;type=Repositories&amp;utf8=%E2%9C%93" target="_blank" rel="external"> 模板搜索</a></h3><ul>
<li><p><a href="https://github.com/akveo/blur-admin" target="_blank" rel="external">akveo/blur-admin</a>  <code>star 5694</code><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/55138590-file_1484818270866_d2d2.png" alt=""></p>
</li>
<li><p><a href="https://github.com/rdash/rdash-angular" target="_blank" rel="external"> rdash/rdash-angular </a>  <code>star 4753</code></p>
</li>
</ul>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/88512455-file_1484818285543_112e.png" alt=""></p>
<ul>
<li><a href="https://github.com/akveo/ng2-admin" target="_blank" rel="external">akveo/ng2-admin</a>  <code>star 3840</code><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/76544644-file_1484818295808_3ffd.png" alt=""></li>
</ul>
<hr>
<h2 id="服务器渲染（JSP）">服务器渲染（JSP）</h2><ul>
<li><p><code>layui - 经典模块化前端框架</code>  <a href="http://www.layui.com/" target="_blank" rel="external">http://www.layui.com/</a></p>
</li>
<li><p><code>B-JUI (Best jQuery UI) 前端管理框架</code>  <a href="http://b-jui.com/" target="_blank" rel="external">http://b-jui.com/</a></p>
</li>
<li><p><code>JQuery EasyUI中文网</code>  <a href="http://www.jeasyui.net/" target="_blank" rel="external">http://www.jeasyui.net/</a></p>
</li>
<li><p>基于Bootstrap的组件库</p>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前端应用">前端应用</h1><ul>
<li><a href="https://github.com/facebook/react" target="_blank" rel="external"> facebook/react</a>      <code>st]]>
    </summary>
    
      <category term="前端框架库" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[前端模板库]]></title>
    <link href="http://yoursite.com/2016/12/23/%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%9D%BF%E5%BA%93/"/>
    <id>http://yoursite.com/2016/12/23/前端模板库/</id>
    <published>2016-12-22T16:00:02.000Z</published>
    <updated>2017-01-19T10:57:13.415Z</updated>
    <content type="html"><![CDATA[<h1 id="前端模板库">前端模板库</h1><ul>
<li><p><a href="https://github.com/janl/mustache.js" target="_blank" rel="external">janl/mustache.js</a> <code>star 10,184</code> </p>
</li>
<li><p><a href="https://github.com/aui/artTemplate" target="_blank" rel="external">aui/artTemplate</a>   <code>star 4065</code> <code>速度极快</code> </p>
</li>
<li><p><a href="https://github.com/vuejs/vue" target="_blank" rel="external"> vuejs/vue</a> <code>star 37,491</code>   <code>使用mustache风格</code></p>
</li>
<li><p><a href="https://github.com/wycats/handlebars.js" target="_blank" rel="external"> wycats/handlebars.js </a> <code>star 11,256</code></p>
</li>
</ul>
<h1 id="更多">更多</h1><p>前端templating(Mustache, underscore, handlebars)</p>
<p>Handlebars 、Mustache 、artTemplate 、nunjucks 、transparency 、doT</p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/85503059-file_1484818205143_15fbe.png" alt=""></p>
<p><a href="http://www.cnblogs.com/chen4342024/p/4890617.html" target="_blank" rel="external">http://www.cnblogs.com/chen4342024/p/4890617.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前端模板库">前端模板库</h1><ul>
<li><p><a href="https://github.com/janl/mustache.js" target="_blank" rel="external">janl/mustache.js</a> <code]]>
    </summary>
    
      <category term="前端模板库" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%9D%BF%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[腾讯财付通 移动QQ支付 Cordova-plugin-qpay]]></title>
    <link href="http://yoursite.com/2016/12/23/%E8%85%BE%E8%AE%AF%E8%B4%A2%E4%BB%98%E9%80%9A%20%E7%A7%BB%E5%8A%A8QQ%E6%94%AF%E4%BB%98%20Cordova-plugin-qpay/"/>
    <id>http://yoursite.com/2016/12/23/腾讯财付通 移动QQ支付 Cordova-plugin-qpay/</id>
    <published>2016-12-22T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.024Z</updated>
    <content type="html"><![CDATA[<h1 id="腾讯财付通_移动QQ支付_Cordova-plugin-qpay">腾讯财付通 移动QQ支付 Cordova-plugin-qpay</h1><ul>
<li><p>场景介绍<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=160" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=160</a></p>
</li>
<li><p>支付流程<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=201" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=201</a><br><img src="http://p.qpic.cn/qpaywikipic/0/qpaywikipic_582045e17a9263438/0" alt="">  </p>
</li>
</ul>
<ul>
<li><p>商户接入指引<br><a href="http://kf.qq.com/faq/150107UZvUZB160405mumyaq.html" target="_blank" rel="external">http://kf.qq.com/faq/150107UZvUZB160405mumyaq.html</a></p>
</li>
<li><p>普通商户如何接入APP支付？<code>★特别注意,如未填写将无法使用APP支付.且无法变更,只能重新申请</code><br><img src="http://file.service.qq.com/user-files/uploads/201611/1445a222fa15c23d2a688ee6041eea51.jpg" alt=""><br><a href="http://kf.qq.com/faq/150107UZvUZB161117vyEBBR.html" target="_blank" rel="external">http://kf.qq.com/faq/150107UZvUZB161117vyEBBR.html</a></p>
</li>
</ul>
<hr>
<h1 id="卸载">卸载</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin remove com<span class="class">.wosai</span><span class="class">.qpay</span></span><br></pre></td></tr></table></figure>
<h1 id="安装">安装</h1><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin <span class="built_in">add</span> <span class="keyword">https</span>://github.com/liuxiang/cordova-plugin-qpay.git <span class="comment">--variable qpayappid=YOUR_QPAY_APPID</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="官方测试账号（快速验证qpay_plugin）">官方测试账号（快速验证qpay plugin）</h1><p>注：ios可调试到支付。 android因为没有官方的签名文件导致服务正确匹配sha1，会提示商户中找不到appid。</p>
<ul>
<li>1.安装插件<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova plugin add plugins-ws/com<span class="class">.wosai</span><span class="class">.qpay</span> --variable qpayappid=<span class="number">100619284</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>获取QQ支付订单（orderCode or tokenId）<br>访问demo地址可获得 <a href="http://fun.svip.qq.com/mqqopenpay_demo.php" target="_blank" rel="external">http://fun.svip.qq.com/mqqopenpay_demo.php</a></p>
</li>
<li><p>2.程序调用</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">QPay</span><span class="class">.mqqPay</span>(<span class="rules">&#123;<span class="rule"><span class="attribute">tokenId</span>:<span class="value"><span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>&#125; ,<span class="function">function</span>(res)&#123;console.<span class="function">log</span>(<span class="string">"res"</span>,res)&#125;,<span class="function">function</span>(res)&#123;console.<span class="function">log</span>(<span class="string">"error"</span>,res)&#125;)</span></span>;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>3.更新ios应用名<code>config.xml</code><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;widget <span class="property">id</span>=<span class="string">"com.tencent.qqwallet.example"</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>4.编译，xcode运行<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">ionic</span> <span class="keyword">build </span>ios</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="能力">能力</h1><ul>
<li><p>是否安装QQ(限：android)</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QPay.isMqqInstalled(<span class="function"><span class="keyword">function</span><span class="params">(res)</span></span>&#123;console.<span class="built_in">log</span>(res)&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>是否支持移动QQ支付(限：android)</p>
<figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QPay.isMqqSupportPay(<span class="function"><span class="keyword">function</span><span class="params">(res)</span></span>&#123;console.<span class="built_in">log</span>(res)&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>获取订单（后端实现，插件留白）</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QPay.getOrderno(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"res"</span>,res)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"error"</span>,res)&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>★移动QQ支付（android | ios）</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QPay.mqqPay(&#123;</span><br><span class="line">  tokenId: <span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>,<span class="comment">// 订单号</span></span><br><span class="line">  nonce: <span class="string">''</span>,<span class="comment">// 随机数</span></span><br><span class="line">  bargainorId: <span class="string">'1234567890'</span>,<span class="comment">// 商户号</span></span><br><span class="line">  appKey: <span class="string">'88888888888888'</span>,<span class="comment">// appkey</span></span><br><span class="line">  sig: <span class="string">''</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"res:"</span> + res)</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"error:"</span> + res)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>建议先用官方测试账号验证（未填字段会在插件中补充-仅限测试）</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">QPay</span><span class="class">.mqqPay_demo</span>(<span class="rules">&#123;<span class="rule"><span class="attribute">tokenId</span>:<span class="value"><span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>&#125; ,<span class="function">function</span>(res)&#123;console.<span class="function">log</span>(<span class="string">"res"</span>,res)&#125;,<span class="function">function</span>(res)&#123;console.<span class="function">log</span>(<span class="string">"error"</span>,res)&#125;)</span></span>;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="签名纠正功能(后端签名,也可参考此代码段)">签名纠正功能(后端签名,也可参考此代码段)</h1><p>注：签名依赖密钥等敏感信息，建议后台进行。插件提供此功能，仅用于后台签名校验。上线请关闭<code>debug = false</code></p>
<h2 id="android_见qpay-java">android 见<code>qpay.java</code></h2><p>注：APP_KEY默认填写了访问示例使用的app_key. 调试自由app支付，请修改。<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">boolean <span class="keyword">debug</span> = <span class="literal">true</span>;<span class="comment">// 是否开启debug</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">debug</span>) &#123;</span><br><span class="line">  String sig_online = signApi(api);<span class="comment">// 请手动更新APP_KEY</span></span><br><span class="line">  <span class="keyword">if</span> (api.sig != sig_online) &#123;</span><br><span class="line">    System.<span class="keyword">out</span>.println(<span class="string">"签名错误-纠正"</span>);</span><br><span class="line">    api.sig = sig_online;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 签名步骤建议不要在app上执行，要放在服务器上执行.</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> signApi(PayApi api) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">  <span class="comment">// 按key排序</span></span><br><span class="line">  StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"appId="</span>).<span class="built_in">append</span>(api.appId);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;bargainorId="</span>).<span class="built_in">append</span>(api.bargainorId);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;nonce="</span>).<span class="built_in">append</span>(api.nonce);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;pubAcc="</span>).<span class="built_in">append</span>(<span class="string">""</span>);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;tokenId="</span>).<span class="built_in">append</span>(api.tokenId);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">String</span> APP_KEY = <span class="string">"d139ae6fb0175e5659dce2a7c1fe84d5"</span>;<span class="comment">// 调试使用,应该服务器保护</span></span><br><span class="line">  <span class="built_in">byte</span>[] byteKey = (APP_KEY + <span class="string">"&amp;"</span>).getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line">  <span class="comment">// 根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称</span></span><br><span class="line">  SecretKey secretKey = <span class="keyword">new</span> SecretKeySpec(byteKey, <span class="string">"HmacSHA1"</span>);</span><br><span class="line">  <span class="comment">// 生成一个指定 Mac 算法 的 Mac 对象</span></span><br><span class="line">  Mac mac = Mac.getInstance(<span class="string">"HmacSHA1"</span>);</span><br><span class="line">  <span class="comment">// 用给定密钥初始化 Mac 对象</span></span><br><span class="line">  mac.init(secretKey);</span><br><span class="line">  <span class="built_in">byte</span>[] byteSrc = stringBuilder.toString().getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line">  <span class="comment">// 完成 Mac 操作</span></span><br><span class="line">  <span class="built_in">byte</span>[] dst = mac.doFinal(byteSrc);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Base64</span></span><br><span class="line">  <span class="comment">// api.sig = Base64.encodeToString(dst, Base64.NO_WRAP);</span></span><br><span class="line">  <span class="comment">// api.sigType = "HMAC-SHA1";</span></span><br><span class="line">  <span class="keyword">return</span> Base64.encodeToString(dst, Base64.NO_WRAP);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="ios_见qpay-m">ios 见<code>qpay.m</code></h2><p>注：APP_KEY默认填写了访问示例使用的app_key. 调试自由app支付，请修改。<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">BOOL</span> debug = <span class="literal">true</span>;<span class="comment">// 调试</span></span><br><span class="line"><span class="keyword">if</span>(debug)&#123;</span><br><span class="line">    <span class="comment">// 获取签名串</span></span><br><span class="line">    <span class="built_in">NSString</span> *appKey = <span class="string">@"d139ae6fb0175e5659dce2a7c1fe84d5"</span>;<span class="comment">// 测试使用，正式环境请删除</span></span><br><span class="line">    <span class="built_in">NSString</span> *sig_online = [<span class="keyword">self</span> getMySignatureWithAppId:appId</span><br><span class="line">                                             bargainorId:bargainorId</span><br><span class="line">                                                   nonce:nonce</span><br><span class="line">                                                 tokenId:tokenId</span><br><span class="line">                                              signingKey:appKey];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span>(sig != sig_online)&#123;</span><br><span class="line">        <span class="built_in">UIAlertView</span> *alert = [[<span class="built_in">UIAlertView</span> alloc] initWithTitle:<span class="string">@"签名错误－纠正"</span> message:<span class="literal">nil</span> delegate:<span class="literal">nil</span> cancelButtonTitle:<span class="string">@"OK"</span> otherButtonTitles:<span class="literal">nil</span>, <span class="literal">nil</span>];</span><br><span class="line">        [alert show];</span><br><span class="line">        sig = sig_online;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成签名串</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)getMySignatureWithAppId:(<span class="built_in">NSString</span> *)appId</span><br><span class="line">                          bargainorId:(<span class="built_in">NSString</span> *)bargainorId</span><br><span class="line">                                nonce:(<span class="built_in">NSString</span> *)nonce</span><br><span class="line">                              tokenId:(<span class="built_in">NSString</span> *)tokenId</span><br><span class="line">                           signingKey:(<span class="built_in">NSString</span> *)signingKey&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 1. 将 appId,bargainorId,nonce,tokenId 拼成字符串</span></span><br><span class="line">    <span class="built_in">NSString</span> *source = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"appId=%@&amp;bargainorId=%@&amp;nonce=%@&amp;pubAcc=&amp;tokenId=%@"</span>,</span><br><span class="line">                        appId,bargainorId,nonce,tokenId];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 2. 将刚才拼好的字符串，用key来加密</span></span><br><span class="line">    <span class="built_in">NSData</span> *signature = [source dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSData</span> *signingData = [[signingKey stringByAppendingString:<span class="string">@"&amp;"</span>] dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];  <span class="comment">// 约定在key末尾拼一个‘&amp;’符号</span></span><br><span class="line">    <span class="built_in">NSData</span> *digest = [<span class="keyword">self</span> hmacSha1:signature key:signingData];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 3. 将加密后的data以base64形式输出</span></span><br><span class="line">    <span class="built_in">NSString</span> *signatureBase64 = [digest base64Encoding];</span><br><span class="line">    <span class="keyword">return</span> signatureBase64;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="后端指引">后端指引</h1><h2 id="1-生成订单">1.生成订单</h2><ul>
<li>参考统一下单接口<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=58" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=58</a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">xml</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">appid</span>&gt;</span>1111223451<span class="tag">&lt;/<span class="title">appid</span>&gt;</span> <span class="comment">&lt;!-- 应用ID --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span>123<span class="tag">&lt;/<span class="title">body</span>&gt;</span> <span class="comment">&lt;!-- 商品描述  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">device_info</span>&gt;</span>1234567890abc<span class="tag">&lt;/<span class="title">device_info</span>&gt;</span> <span class="comment">&lt;!-- 设备信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">limit_pay</span>&gt;</span><span class="tag">&lt;/<span class="title">limit_pay</span>&gt;</span> <span class="comment">&lt;!-- 支付方式限制  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">mch_id</span>&gt;</span>1301278501<span class="tag">&lt;/<span class="title">mch_id</span>&gt;</span> <span class="comment">&lt;!-- 商户ID --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">nonce_str</span>&gt;</span>fecf31a13be2309093db5df934848583<span class="tag">&lt;/<span class="title">nonce_str</span>&gt;</span> <span class="comment">&lt;!-- 随机字符串 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">notify_url</span>&gt;</span>https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi<span class="tag">&lt;/<span class="title">notify_url</span>&gt;</span><span class="comment">&lt;!-- 支付结果通知地址 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">out_trade_no</span>&gt;</span>2016061235213702<span class="tag">&lt;/<span class="title">out_trade_no</span>&gt;</span> <span class="comment">&lt;!-- 商户订单号  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">sign</span>&gt;</span>f0c328d362858713b66feafb802615d8<span class="tag">&lt;/<span class="title">sign</span>&gt;</span><span class="comment">&lt;!-- 统一下单签名 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">spbill_create_ip</span>&gt;</span>10.123.9.102<span class="tag">&lt;/<span class="title">spbill_create_ip</span>&gt;</span> <span class="comment">&lt;!-- 终端ip --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">total_fee</span>&gt;</span>1<span class="tag">&lt;/<span class="title">total_fee</span>&gt;</span> <span class="comment">&lt;!-- 价格  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">trade_type</span>&gt;</span>NATIVE<span class="tag">&lt;/<span class="title">trade_type</span>&gt;</span> <span class="comment">&lt;!-- 支付场景  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">xml</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>签名规范<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=57" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=57</a><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">假设传送的参数如下：</span><br><span class="line">appid： d930ea5d5a258f4f</span><br><span class="line">mch_id： <span class="number">10000100</span></span><br><span class="line">device_info： <span class="number">1000</span></span><br><span class="line">body： test</span><br><span class="line">nonce_str： ibuaiVcKdpRxkhJA</span><br><span class="line"> </span><br><span class="line">第一步：对参数按照key=value的格式，并按照参数名ASCII字典序排序如下：</span><br><span class="line">stringA=<span class="string">"appid=d930ea5d5a258f4f&amp;body=test&amp;device_info=1000&amp;mch_id=10000100&amp;nonce_str=ibuaiVcKdpRxkhJA"</span>;</span><br><span class="line"> </span><br><span class="line">第二步：拼接API密钥：</span><br><span class="line">stringSignTemp=<span class="string">"stringA&amp;key=192006250b4c09247ec02edce69f6a2d"</span></span><br><span class="line">sign=MD5(stringSignTemp).<span class="keyword">to</span>UpperCase()=<span class="string">"9A0A8659F005D6984697E2CA0A9CF3B7"</span></span><br><span class="line"> </span><br><span class="line">最终得到最终发送的数据：</span><br><span class="line"><span class="variable">&lt;xml&gt;</span></span><br><span class="line"><span class="variable">&lt;appid&gt;</span>d930ea5d5a258f4f<span class="variable">&lt;/appid&gt;</span></span><br><span class="line"><span class="variable">&lt;mch_id&gt;</span><span class="number">10000100</span><span class="variable">&lt;/mch_id&gt;</span></span><br><span class="line"><span class="variable">&lt;device_info&gt;</span><span class="number">1000</span><span class="variable">&lt;device_info&gt;</span></span><br><span class="line"><span class="variable">&lt;body&gt;</span>test<span class="variable">&lt;/body&gt;</span></span><br><span class="line"><span class="variable">&lt;nonce_str&gt;</span>ibuaiVcKdpRxkhJA<span class="variable">&lt;/nonce_str&gt;</span></span><br><span class="line"><span class="variable">&lt;sign&gt;</span><span class="number">9</span>A0A8659F005D6984697E2CA0A9CF3B7<span class="variable">&lt;/sign&gt;</span></span><br><span class="line"><span class="variable">&lt;xml&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>API密钥<br><a href="https://qpay.qq.com/account/api_cert.shtml" target="_blank" rel="external">https://qpay.qq.com/account/api_cert.shtml</a><!--
-->
<img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-12-23/82075208-file_1482463058867_b57.png" alt=""></li>
</ul>
<h2 id="2-调起支付">2.调起支付</h2><ul>
<li>android<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165</a><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）初始化PayApi，并将数据填写完整：</span><br><span class="line">PayApi api = <span class="literal">new</span> PayApi();</span><br><span class="line">api<span class="built_in">.</span>appId = APP_ID; <span class="comment">// 在http://open.qq.com注册的AppId,参与支付签名，签名关键字key为appId</span></span><br><span class="line">api<span class="built_in">.</span>serialNumber = <span class="attribute">...</span>; <span class="comment">// 支付序号,用于标识此次支付</span></span><br><span class="line">api<span class="built_in">.</span>callbackScheme = <span class="attribute">...</span>; <span class="comment">// QQ钱包支付结果回调给urlscheme为callbackScheme的activity.，参看后续的“支付回调结果处理”</span></span><br><span class="line">api<span class="built_in">.</span>tokenId = <span class="attribute">...</span>; <span class="comment">// QQ钱包支付生成的token_id</span></span><br><span class="line">api<span class="built_in">.</span>pubAcc = <span class="attribute">...</span>; <span class="comment">// 手Q公众帐号id.参与支付签名，签名关键字key为pubAcc</span></span><br><span class="line">api<span class="built_in">.</span>pubAccHint = <span class="attribute">...</span>; <span class="comment">// 支付完成页面，展示给用户的提示语：提醒关注公众帐号</span></span><br><span class="line">api<span class="built_in">.</span>nonce = <span class="attribute">...</span>; <span class="comment">// 随机字段串，每次支付时都要不一样.参与支付签名，签名关键字key为nonce</span></span><br><span class="line">api<span class="built_in">.</span>timeStamp = <span class="attribute">...</span>; <span class="comment">// 时间戳，为1970年1月1日00:00到请求发起时间的秒数</span></span><br><span class="line">api<span class="built_in">.</span>bargainorId = <span class="attribute">...</span>; <span class="comment">// 商户号.参与支付签名，签名关键字key为bargainorId</span></span><br><span class="line">api<span class="built_in">.</span>sig = <span class="attribute">...</span>; <span class="comment">// 商户Server下发的数字签名，生成的签名串，参看“数字签名”</span></span><br><span class="line">api<span class="built_in">.</span>sigType = <span class="string">"HMAC-SHA1"</span>; <span class="comment">// 签名时，使用的加密方式，默认为"HMAC-SHA1"</span></span><br><span class="line"> </span><br><span class="line">（<span class="number">2</span>）在启动QQ钱包支付前，判断一下数据是否完整，再启动QQ钱包支付：</span><br><span class="line"><span class="keyword">if</span> (api<span class="built_in">.</span>checkParams()) &#123;</span><br><span class="line">    openApi<span class="built_in">.</span>execApi(api);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>cordova plugin：com.wosai.qpay<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QPay.mqqPay(&#123;</span><br><span class="line">  tokenId: <span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>,<span class="comment">// 订单号</span></span><br><span class="line">  nonce: <span class="string">''</span>,<span class="comment">// 随机数</span></span><br><span class="line">  bargainorId: <span class="string">'1424912901'</span>,<span class="comment">// 商户号</span></span><br><span class="line">  appKey: <span class="string">'CuWbc7F0XrTpnHBa'</span>,<span class="comment">// appkey</span></span><br><span class="line">  sig: <span class="string">''</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"res:"</span> + res)</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"error:"</span> + res)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>APP调用QQ钱包支付-签名规范<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165</a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">数字签名</span><br><span class="line"> </span><br><span class="line">为了保障商户利益与安全，商户App调用QQ钱包支付时启用另一套签名机制。该签名机制与“商户后台与QQ钱包支付后台的签名机制”是不同的。</span><br><span class="line"> </span><br><span class="line"><span class="number">1</span>、源串构造方法</span><br><span class="line">（<span class="number">1</span>）将需要参与签名的所有参数按key进行字典升序排列。</span><br><span class="line">（<span class="number">2</span>）将第<span class="number">1</span>步中排序后的参数(key=value)用&amp;拼接起来；</span><br><span class="line">（<span class="number">3</span>）key中存在大小写字母，保持大小写字母的存在。不要将key进行统一转换为大写或小写操作；</span><br><span class="line">（<span class="number">4</span>）如果value为空, 生成格式为“key=”，这点与后台之间签名方法是不一样的；</span><br><span class="line">（<span class="number">5</span>）签名原始串中，字段名和字段值都采用原始值，不进行URL Encode。</span><br><span class="line"> </span><br><span class="line">举例：</span><br><span class="line">调用某个接口，接口有如下字段：</span><br><span class="line">appId、nonce、tokenId、pubAcc、bargainorId</span><br><span class="line"> </span><br><span class="line">实际调用接口时，各字段的值：</span><br><span class="line">appId=<span class="number">100619284</span>、nonce=ksjfwierwfjk、tokenId=<span class="number">1000000002</span>、pubAcc=、bargainorId=<span class="number">1900000109</span></span><br><span class="line"> </span><br><span class="line">正确的签名原始串是：</span><br><span class="line">appId=<span class="number">100619284</span>&amp;bargainorId=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;pubAcc=&amp;tokenId=<span class="number">1000000002</span></span><br><span class="line"> </span><br><span class="line">常见的错误有：</span><br><span class="line">appId=<span class="number">100619284</span>&amp;bargainorId=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;tokenId=<span class="number">1000000002</span></span><br><span class="line">appid=<span class="number">100619284</span>&amp;bargainorid=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;pubacc=&amp;tokenid=<span class="number">1000000002</span></span><br><span class="line">appId=<span class="number">100619284</span>&amp;nonce=ksjfwierwfjk&amp;tokenId=<span class="number">1000000002</span>&amp;pubAcc=&amp;bargainorId=<span class="number">1900000109</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>、 密钥构造方法</span><br><span class="line">（<span class="number">1</span>）在http:<span class="comment">//open.qq.com申请appId，并获得appKey；</span></span><br><span class="line">（<span class="number">2</span>）构造到密钥的方式：在应用的appkey末尾加上一个字符的“&amp;”，即appkey&amp;。</span><br><span class="line"> </span><br><span class="line">示例：</span><br><span class="line">appkey 值为 d139ae6fb0175e5659dce2a7c1fe84d5</span><br><span class="line">正确的密钥为：d139ae6fb0175e5659dce2a7c1fe84d5&amp;</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>、 生成签名值方法</span><br><span class="line">（<span class="number">1</span>）使用HMAC-SHA1加密算法，使用”密钥构造方法“中得到的密钥对“源串构造方法”中得到的源串进行加密（注：一般程序语言中会内置HMAC-SHA1加密算法的函数，例如PHP5<span class="number">.1</span><span class="number">.2</span>之后的版本可直接调用hash_hmac函数）；</span><br><span class="line">（<span class="number">2</span>）然后将加密后的字符串进行Base64编码（注：一般程序语言中会内置Base64编码函数，例如PHP中可直接调用 base64_encode() 函数）；</span><br><span class="line">（<span class="number">3</span>）最后得到的签名值sig结果如下：</span><br><span class="line">c6xXw0tNABhOMc869h1bfxTp9Mk=</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="2-1代码示例">2.1代码示例</h1><ul>
<li><p>android</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 签名步骤建议不要在app上执行，要放在服务器上执行.</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> signApi(PayApi api) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">  <span class="comment">// 按key排序</span></span><br><span class="line">  StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"appId="</span>).<span class="built_in">append</span>(api.appId);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;bargainorId="</span>).<span class="built_in">append</span>(api.bargainorId);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;nonce="</span>).<span class="built_in">append</span>(api.nonce);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;pubAcc="</span>).<span class="built_in">append</span>(<span class="string">""</span>);</span><br><span class="line">  stringBuilder.<span class="built_in">append</span>(<span class="string">"&amp;tokenId="</span>).<span class="built_in">append</span>(api.tokenId);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">String</span> APP_KEY = <span class="string">"d139ae6fb0175e5659dce2a7c1fe84d5"</span>;<span class="comment">// 调试使用,应该服务器保护</span></span><br><span class="line">  <span class="built_in">byte</span>[] byteKey = (APP_KEY + <span class="string">"&amp;"</span>).getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line">  <span class="comment">// 根据给定的字节数组构造一个密钥,第二参数指定一个密钥算法的名称</span></span><br><span class="line">  SecretKey secretKey = <span class="keyword">new</span> SecretKeySpec(byteKey, <span class="string">"HmacSHA1"</span>);</span><br><span class="line">  <span class="comment">// 生成一个指定 Mac 算法 的 Mac 对象</span></span><br><span class="line">  Mac mac = Mac.getInstance(<span class="string">"HmacSHA1"</span>);</span><br><span class="line">  <span class="comment">// 用给定密钥初始化 Mac 对象</span></span><br><span class="line">  mac.init(secretKey);</span><br><span class="line">  <span class="built_in">byte</span>[] byteSrc = stringBuilder.toString().getBytes(<span class="string">"UTF-8"</span>);</span><br><span class="line">  <span class="comment">// 完成 Mac 操作</span></span><br><span class="line">  <span class="built_in">byte</span>[] dst = mac.doFinal(byteSrc);</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// Base64</span></span><br><span class="line">  <span class="comment">// api.sig = Base64.encodeToString(dst, Base64.NO_WRAP);</span></span><br><span class="line">  <span class="comment">// api.sigType = "HMAC-SHA1";</span></span><br><span class="line">  <span class="keyword">return</span> Base64.encodeToString(dst, Base64.NO_WRAP);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ios</p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成签名串</span></span><br><span class="line">- (<span class="built_in">NSString</span> *)getMySignatureWithAppId:(<span class="built_in">NSString</span> *)appId</span><br><span class="line">                          bargainorId:(<span class="built_in">NSString</span> *)bargainorId</span><br><span class="line">                                nonce:(<span class="built_in">NSString</span> *)nonce</span><br><span class="line">                              tokenId:(<span class="built_in">NSString</span> *)tokenId</span><br><span class="line">                           signingKey:(<span class="built_in">NSString</span> *)signingKey&#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 1. 将 appId,bargainorId,nonce,tokenId 拼成字符串</span></span><br><span class="line">    <span class="built_in">NSString</span> *source = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"appId=%@&amp;bargainorId=%@&amp;nonce=%@&amp;pubAcc=&amp;tokenId=%@"</span>,</span><br><span class="line">                        appId,bargainorId,nonce,tokenId];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 2. 将刚才拼好的字符串，用key来加密</span></span><br><span class="line">    <span class="built_in">NSData</span> *signature = [source dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];</span><br><span class="line">    <span class="built_in">NSData</span> *signingData = [[signingKey stringByAppendingString:<span class="string">@"&amp;"</span>] dataUsingEncoding:<span class="built_in">NSUTF8StringEncoding</span>];  <span class="comment">// 约定在key末尾拼一个‘&amp;’符号</span></span><br><span class="line">    <span class="built_in">NSData</span> *digest = [<span class="keyword">self</span> hmacSha1:signature key:signingData];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// 3. 将加密后的data以base64形式输出</span></span><br><span class="line">    <span class="built_in">NSString</span> *signatureBase64 = [digest base64Encoding];</span><br><span class="line">    <span class="keyword">return</span> signatureBase64;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="可能遇到的问题">可能遇到的问题</h1><h2 id="ios_build_error">ios build error</h2><ul>
<li><p>错误</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Library not found <span class="keyword">for</span> -lcrt1<span class="number">.3</span><span class="number">.1</span>.o</span><br></pre></td></tr></table></figure>
</li>
<li><p>解决</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deployment target <span class="keyword">from</span> ios5<span class="number">.0</span> <span class="keyword">then</span> change <span class="keyword">it</span> <span class="keyword">to</span> ios6<span class="number">.0</span> <span class="keyword">or</span> later</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="cordova_方法控制台需要在第二次调用时才会回调方法,可测试一下几个方法">cordova 方法控制台需要在第二次调用时才会回调方法,可测试一下几个方法</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Wechat.isInstalled(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"res"</span>,res)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"error"</span>,res)&#125;)</span><br><span class="line">YCQQ.checkClientInstalled(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"res"</span>,res)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"error"</span>,res)&#125;)</span><br><span class="line"> </span><br><span class="line">QPay.getOrderno(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"res"</span>,res)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"error"</span>,res)&#125;)</span><br><span class="line">QPay.mqqPay(&#123;tokenId:<span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>&#125; ,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"res"</span>,res)&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;<span class="built_in">console</span>.log(<span class="string">"error"</span>,res)&#125;);</span><br></pre></td></tr></table></figure>
<p>注:经测试,代码调用不会出现首次首次失效的情况</p>
<h2 id="xcode插件失效">xcode插件失效</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span>-<span class="number">12</span>-<span class="number">06</span> <span class="number">17</span>:<span class="number">15</span>:<span class="number">03.982</span> xcodebuild[<span class="number">9374</span>:<span class="number">245800</span>] [MT] <span class="string">PluginLoading:</span> Required plug-<span class="keyword">in</span> compatibility UUID <span class="number">8</span>A66E736-A720-<span class="number">4</span>B3C-<span class="number">92</span>F1-<span class="number">33</span>D9962C69DF <span class="keyword">for</span> plug-<span class="keyword">in</span> at path <span class="string">'~/Library/Application Support/Developer/Shared/Xcode/Plug-ins/Unity4XC.xcplugin'</span> not present <span class="keyword">in</span> DVTPlugInCompatibilityUUIDs</span><br><span class="line">Build settings from command <span class="string">line:</span></span><br><span class="line">    ARCHS = armv7 armv7s arm64</span><br><span class="line">    CONFIGURATION_BUILD_DIR = <span class="regexp">/Users/</span>wosai<span class="regexp">/Desktop/</span>work<span class="regexp">/hybrid Dev/</span>sxb_physics<span class="regexp">/platforms/</span>ios<span class="regexp">/build/</span>device</span><br><span class="line">    SDKROOT = iphoneos10<span class="number">.0</span></span><br><span class="line">    SHARED_PRECOMPS_DIR = <span class="regexp">/Users/</span>wosai<span class="regexp">/Desktop/</span>work<span class="regexp">/hybrid Dev/</span>sxb_physics<span class="regexp">/platforms/</span>ios<span class="regexp">/build/</span>sharedpch</span><br><span class="line">    VALID_ARCHS = armv7 armv7s arm64</span><br></pre></td></tr></table></figure>
<ul>
<li>处理办法1<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -<span class="keyword">s</span> http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/ForkPanda/RescueXcodePlug-ins/master/RescueXcode.<span class="keyword">sh</span> | <span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://stackoverflow.com/questions/35110910/xcode-7-pluginloading-required-plug-in-compatibility-uuid" target="_blank" rel="external">http://stackoverflow.com/questions/35110910/xcode-7-pluginloading-required-plug-in-compatibility-uuid</a></p>
<ul>
<li>处理办法2<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcode-<span class="built_in">select</span> <span class="comment">--install</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://stackoverflow.com/questions/20732327/xcode-5-required-plug-in-not-present-in-dvtplugincompatibilityuuids" target="_blank" rel="external">http://stackoverflow.com/questions/20732327/xcode-5-required-plug-in-not-present-in-dvtplugincompatibilityuuids</a></p>
<ul>
<li>处理办法3<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">find</span> ~<span class="regexp">/Library/</span>Application\ Support<span class="regexp">/Developer/</span>Shared<span class="regexp">/Xcode/</span>Plug-ins -name Info.plist -maxdepth <span class="number">3</span> | xargs -I&#123;&#125; defaults <span class="keyword">write</span> &#123;&#125; DVTPlugInCompatibilityUUIDs -array-add `defaults <span class="keyword">read</span> <span class="regexp">/Applications/</span>Xcode.app<span class="regexp">/Contents/I</span>nfo.plist DVTPlugInCompatibilityUUID`</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://joeshang.github.io/2015/04/10/fix-xcode-upgrade-plugin-invalid/" target="_blank" rel="external">http://joeshang.github.io/2015/04/10/fix-xcode-upgrade-plugin-invalid/</a></p>
<h2 id="SDK_‘iOS_10-0’问题">SDK ‘iOS 10.0’问题</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">Check</span> dependencies</span><br><span class="line">Signing <span class="keyword">for</span> <span class="string">"赛学霸物理"</span> requires a development team. <span class="keyword">Select</span> a development team <span class="keyword">in</span> the <span class="keyword">project</span> editor.</span><br><span class="line">Code signing <span class="keyword">is</span> <span class="keyword">required</span> <span class="keyword">for</span> product <span class="keyword">type</span> <span class="string">'Application'</span> <span class="keyword">in</span> SDK <span class="string">'iOS 10.0'</span></span><br><span class="line"> </span><br><span class="line">** <span class="keyword">BUILD</span> <span class="keyword">FAILED</span> **</span></span><br></pre></td></tr></table></figure>
<ul>
<li>解决办法<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">打开xcode,<span class="constant">General</span>中勾选<span class="symbol">:Automatically</span> manage signing</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://blog.csdn.net/h643342713/article/details/52728782" target="_blank" rel="external">http://blog.csdn.net/h643342713/article/details/52728782</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="腾讯财付通_移动QQ支付_Cordova-plugin-qpay">腾讯财付通 移动QQ支付 Cordova-plugin-qpay</h1><ul>
<li><p>场景介绍<br><a href="https://qpay.qq.com/qpaywiki/sho]]>
    </summary>
    
      <category term="Cordova-plugin-qpay" scheme="http://yoursite.com/tags/Cordova-plugin-qpay/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vue.js相关]]></title>
    <link href="http://yoursite.com/2016/12/21/Vue.js%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2016/12/21/Vue.js相关/</id>
    <published>2016-12-20T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:46.005Z</updated>
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><ul>
<li>前端 MVVM(Model-View-ViewModel)库</li>
<li>部分功能和Jquery是差不多的，Vuejs能做的，Jquery也能做</li>
<li>Jquery多简单啊，令人发指的是Vuejs在实现相同功能的时候更简单<br><a href="http://larabase.com/collection/2/post/108" target="_blank" rel="external">http://larabase.com/collection/2/post/108</a></li>
</ul>
<h1 id="脚手架">脚手架</h1><ul>
<li><a href="https://github.com/fountainjs/generator-fountain-vue#readme" target="_blank" rel="external"> FountainJS/generator-fountain-vue</a> <code>star 24</code></li>
<li><a href="https://github.com/davidhellmann/generator-dhBoilerplate#readme" target="_blank" rel="external"> davidhellmann/generator-dhBoilerplate</a>     <code>star 18</code> </li>
<li><a href="http://www.yowebapp.com/generators/" target="_blank" rel="external">更多</a></li>
</ul>
<h1 id="使用">使用</h1><ul>
<li><p>示例</p>
<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"./lib/vue.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"app"</span>&gt;</span></span><br><span class="line">  </span><span class="expression">&#123;&#123; <span class="variable">message</span> &#125;&#125;</span><span class="xml"></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="actionscript"></span><br><span class="line">  <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">'#app'</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">      message: <span class="string">'Hello Vue!'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>API<br><a href="http://devdocs.io/vue~2/" target="_blank" rel="external">http://devdocs.io/vue~2/</a></p>
</li>
</ul>
<h1 id="组件库">组件库</h1><p><a href="http://element.eleme.io/#/zh-CN" target="_blank" rel="external">Element</a><br>Element，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的组件库，提供了配套设计资源，帮助你的网站快速成型。</p>
<p><code>表格</code> <a href="http://element.eleme.io/#/zh-CN/component/table" target="_blank" rel="external">http://element.eleme.io/#/zh-CN/component/table</a><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/80850400-file_1484818139040_1757d.png" alt="">  </p>
<h1 id="示例">示例</h1><ul>
<li><a href="https://github.com/vue-bulma/vue-admin" target="_blank" rel="external">vue-bulma/vue-admin</a>  <code>star 2,188</code><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/55408542-file_1484818151580_8c3c.png" alt="">  </li>
</ul>
<ul>
<li><a href="https://github.com/taylorchen709/vueAdmin" target="_blank" rel="external">taylorchen709/vueAdmin</a>  <code>star 184</code></li>
</ul>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/40671054-file_1484818165497_12ade.png" alt=""></p>
<ul>
<li><a href="https://github.com/misterGF/CoPilot" target="_blank" rel="external">misterGF/CoPilot</a>   <code>star 470</code><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/11652390-file_1484818178174_26d1.png" alt=""></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="简介">简介</h1><ul>
<li>前端 MVVM(Model-View-ViewModel)库</li>
<li>部分功能和Jquery是差不多的，Vuejs能做的，Jquery也能做</li>
<li>Jquery多简单啊，令人发指的是Vuejs在实现相同]]>
    </summary>
    
      <category term="Vue.js" scheme="http://yoursite.com/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React native相关]]></title>
    <link href="http://yoursite.com/2016/12/20/React%20native%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2016/12/20/React native相关/</id>
    <published>2016-12-19T16:00:02.000Z</published>
    <updated>2017-01-19T10:09:45.992Z</updated>
    <content type="html"><![CDATA[<h1 id="React_Native简介">React Native简介</h1><p>React Native使你能够在Javascript和React的基础上获得完全一致的开发体验，构建世界一流的原生APP。</p>
<p>支持系统：Android 4.1 (API 16) 以及 &gt;= iOS 7.0</p>
<p><code>github</code>  <a href="https://facebook.github.io/react-native/docs/getting-started.html" target="_blank" rel="external">https://facebook.github.io/react-native/docs/getting-started.html</a></p>
<p><code>React Native 中文网</code><br><a href="http://reactnative.cn/" target="_blank" rel="external">http://reactnative.cn/</a></p>
<p><code>从零开始的Android新项目10 - React Native &amp; Redux - 马克宅只是个码农 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/marktheone/article/details/52238413" target="_blank" rel="external">http://blog.csdn.net/marktheone/article/details/52238413</a></p>
<hr>
<h2 id="github_React_Native_资料"><code>github</code> React Native 资料</h2><p><code>React-Native学习指南</code> <code>star 7074</code></p>
<p><a href="https://github.com/reactnativecn/react-native-guide" target="_blank" rel="external">https://github.com/reactnativecn/react-native-guide</a></p>
<p><code>教程和处理React Native的资源的列表</code>   <code>star 9094</code><br><a href="https://github.com/jondot/awesome-react-native" target="_blank" rel="external">https://github.com/jondot/awesome-react-native</a></p>
<p><code>React资料整理，基于个人书签收集导出</code><br><a href="https://github.com/OXOYO/F2E-Tutorial-Collect/blob/master/React.md" target="_blank" rel="external">https://github.com/OXOYO/F2E-Tutorial-Collect/blob/master/React.md</a><br><code>React-Native入门指南</code><br><a href="https://github.com/vczero/react-native-lesson" target="_blank" rel="external">https://github.com/vczero/react-native-lesson</a></p>
<hr>
<h1 id="工具">工具</h1><ul>
<li>IDE</li>
</ul>
<p><code>atom</code>  <a href="https://atom.io/" target="_blank" rel="external">https://atom.io/</a></p>
<p><code>WebStorm</code><br><code>Sublime</code></p>
<ul>
<li>代码提示</li>
</ul>
<p><code>React Native研发代码编辑工具之WebStorm配置</code><br><a href="http://www.tuicool.com/articles/fQ3IriM" target="_blank" rel="external">http://www.tuicool.com/articles/fQ3IriM</a></p>
<p><code>ReactNative-LiveTemplate</code><br><a href="https://github.com/virtoolswebplayer/ReactNative-LiveTemplate" target="_blank" rel="external">https://github.com/virtoolswebplayer/ReactNative-LiveTemplate</a></p>
<hr>
<h1 id="几类移动应用开发方式区别">几类移动应用开发方式区别</h1><table>
<thead>
<tr>
<th>类型</th>
<th>技术</th>
<th>特点</th>
<th>性能</th>
<th>技术手段</th>
</tr>
</thead>
<tbody>
<tr>
<td>web</td>
<td>weiui等(响应式mobile库)</td>
<td>运行环境限制在手机浏览器中（含微信）</td>
<td>一般</td>
<td>纯前端</td>
</tr>
<tr>
<td>hybrid app</td>
<td>ionic （angular+cordova）</td>
<td>同时支持手机浏览器和独立APP</td>
<td>还行</td>
<td>UI用前端,本地设备用cordova plugin</td>
</tr>
<tr>
<td>native app</td>
<td>React native（RN），ionic2</td>
<td>仅支持独立APP</td>
<td>优秀</td>
<td>ui和设备全用前端语言映射，不完成支持前端特性（html，css）</td>
</tr>
<tr>
<td>native</td>
<td>android、ios</td>
<td>仅支持独立APP</td>
<td>极限方案</td>
<td>多平台独立编写</td>
</tr>
</tbody>
</table>
<hr>
<h1 id="使用">使用</h1><ul>
<li><p>搭建开发环境 &amp; 安装</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">react-<span class="keyword">native</span> init AwesomeProject</span><br><span class="line">cd AwesomeProject</span><br><span class="line">react-<span class="keyword">native</span> run-android</span><br></pre></td></tr></table></figure>
</li>
<li><p>仅启动服务(调试)</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">react-<span class="keyword">native</span> start</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://reactnative.cn/docs/0.39/getting-started.html" target="_blank" rel="external">http://reactnative.cn/docs/0.39/getting-started.html</a></p>
<h2 id="编写Hello_World_(注：没有DIV)">编写Hello World (注：没有DIV)</h2><p><code>index.ios.js</code>或是<code>index.android.js</code></p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="type">React</span>, &#123; <span class="type">Component</span> &#125; from <span class="symbol">'reac</span>t';</span><br><span class="line"><span class="keyword">import</span> &#123; <span class="type">AppRegistry</span>, <span class="type">Text</span> &#125; from <span class="symbol">'react</span>-native';</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloWorldApp</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Component</span> &#123;</span></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">      &lt;<span class="type">Text</span>&gt;<span class="type">Hello</span> world!&lt;/<span class="type">Text</span>&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// 注意，这里用引号括起来的'HelloWorldApp'必须和你init创建的项目名一致</span></span><br><span class="line"><span class="type">AppRegistry</span>.registerComponent(<span class="symbol">'HelloWorldAp</span>p', () =&gt; <span class="type">HelloWorldApp</span>);</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="详解_index-android-js">详解 <code>index.android.js</code></h1><ul>
<li><p>引入依赖</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    AppRegistry,</span><br><span class="line">    StyleSheet,</span><br><span class="line">    Text,</span><br><span class="line">    View</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>注册组件</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AppRegistry.registerComponent(<span class="string">'AwesomeProject'</span>, <span class="function"><span class="params">()</span> =&gt;</span> AwesomeProject);</span><br></pre></td></tr></table></figure>
</li>
<li><p>类定义</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">export <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">AwesomeProject</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Component</span> &#123;</span></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;<span class="type">View</span> style=&#123;styles.container&#125;&gt;</span><br><span class="line">                &lt;<span class="type">Text</span> style=&#123;styles.hello&#125;&gt;</span><br><span class="line">                    hello world</span><br><span class="line">                &lt;/<span class="type">Text</span>&gt;</span><br><span class="line">                &lt;<span class="type">Text</span> style=&#123;styles.welcome&#125;&gt;</span><br><span class="line">                    <span class="type">Welcome</span> to <span class="type">React</span> <span class="type">Native</span>!</span><br><span class="line">                &lt;/<span class="type">Text</span>&gt;</span><br><span class="line">                &lt;<span class="type">Text</span> style=&#123;styles.instructions&#125;&gt;</span><br><span class="line">                    <span class="type">To</span> get started, edit index.android.js</span><br><span class="line">                &lt;/<span class="type">Text</span>&gt;</span><br><span class="line">                &lt;<span class="type">Text</span> style=&#123;styles.instructions&#125;&gt;</span><br><span class="line">                    <span class="type">Double</span> tap <span class="type">R</span> on your keyboard to reload,&#123;'\n'&#125;</span><br><span class="line">                    <span class="type">Shake</span> or press menu button <span class="keyword">for</span> dev menu</span><br><span class="line">                &lt;/<span class="type">Text</span>&gt;</span><br><span class="line">            &lt;/<span class="type">View</span>&gt;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">AwesomeProject</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Component</span></span><br><span class="line"></span></span><br><span class="line">export的带<span class="keyword">default</span>关键字的组件，即默认组件,将其命名为 <span class="type">AwesomeProject</span> (可以自定义命名)</span><br></pre></td></tr></table></figure>
<ul>
<li>样式(命名方式的变化如<code>fontSize</code> )<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> styles = StyleSheet.create(&#123;</span><br><span class="line">    container: &#123;</span><br><span class="line">        flex: <span class="number">1</span>,</span><br><span class="line">        justifyContent: <span class="string">'center'</span>,</span><br><span class="line">        alignItems: <span class="string">'center'</span>,</span><br><span class="line">        backgroundColor: <span class="string">'#F5FCFF'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    hello:&#123;</span><br><span class="line">        <span class="built_in">color</span>:<span class="string">'red'</span>,</span><br><span class="line">        fontSize: <span class="number">20</span>,</span><br><span class="line">        <span class="built_in">textAlign</span>: <span class="string">'center'</span>,</span><br><span class="line">        margin: <span class="number">10</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    welcome: &#123;</span><br><span class="line">        fontSize: <span class="number">20</span>,</span><br><span class="line">        <span class="built_in">textAlign</span>: <span class="string">'center'</span>,</span><br><span class="line">        margin: <span class="number">10</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    instructions: &#123;</span><br><span class="line">        <span class="built_in">textAlign</span>: <span class="string">'center'</span>,</span><br><span class="line">        <span class="built_in">color</span>: <span class="string">'#333333'</span>,</span><br><span class="line">        marginBottom: <span class="number">5</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="初始页模块化">初始页模块化</h1><ul>
<li><p><code>index.android.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;AppRegistry&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"><span class="keyword">import</span> setup <span class="keyword">from</span> <span class="string">'./src/setup'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// AppRegistry.registerComponent('AwesomeProject', setup);// function (问题:Hot不同步)</span></span><br><span class="line">AppRegistry.registerComponent(<span class="string">'AwesomeProject'</span>, () =&gt; setup);<span class="comment">// module</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>/src/setup.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">'use strict'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> React, &#123;Component&#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;StyleSheet, Text, View, Navigator&#125; <span class="keyword">from</span> <span class="string">'react-native'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">           ...</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>RN----导入组件，import from &#39;xxxx&#39;的用法详解</code><br><a href="http://blog.csdn.net/chevins/article/details/51523770" target="_blank" rel="external">http://blog.csdn.net/chevins/article/details/51523770</a></p>
<hr>
<h1 id="问题">问题</h1><ul>
<li>依赖sdk<code>23.0.1</code>,安装即可<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Starting JS server...                                                                    </span><br><span class="line">Building <span class="operator">and</span> installing <span class="operator">the</span> app <span class="command"><span class="keyword">on</span> <span class="title">the</span> <span class="title">device</span> (<span class="title">cd</span> <span class="title">android</span> &amp;&amp; <span class="title">gradlew</span>.<span class="title">bat</span> <span class="title">installDebug</span>)...</span></span><br><span class="line"> </span><br><span class="line">FAILURE: Build failed <span class="operator">with</span> <span class="operator">an</span> exception.                                                 </span><br><span class="line"> </span><br><span class="line">* What went wrong:                                                                       </span><br><span class="line">A problem occurred configuring project <span class="string">':app'</span>.                                           </span><br><span class="line">&gt; failed <span class="built_in">to</span> find Build Tools revision <span class="number">23.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><a href="http://stackoverflow.com/questions/33155087/react-native-on-android-failed-to-find-build-tools" target="_blank" rel="external">http://stackoverflow.com/questions/33155087/react-native-on-android-failed-to-find-build-tools</a></p>
<ul>
<li>react-native Fetching JS Bundle<br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/66720886-file_1484816673101_12b00.png" alt=""></li>
</ul>
<p>处理办法：删除node_modules,重新<code>npm install</code> (建议使用国内镜像)</p>
<ul>
<li>启动后，无法正常打开，是因为<code>调试工具</code>依赖<code>悬浮窗</code>权限，需要手动赋予。<br><code>react-native在Anroid真机运行时可能会遇到白屏的情况解决办法</code><br><a href="http://blog.csdn.net/itpinpai/article/details/50845625" target="_blank" rel="external">http://blog.csdn.net/itpinpai/article/details/50845625</a></li>
</ul>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/80604699-file_1484818079208_893f.png" alt=""><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/65728024-file_1484818103275_f82a.png" alt=""></p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/50668486-file_1484818111205_13b48.png" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="React_Native简介">React Native简介</h1><p>React Native使你能够在Javascript和React的基础上获得完全一致的开发体验，构建世界一流的原生APP。</p>
<p>支持系统：Android 4.1 (API 16]]>
    </summary>
    
      <category term="React native" scheme="http://yoursite.com/tags/React-native/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[React相关]]></title>
    <link href="http://yoursite.com/2016/12/20/React%E7%9B%B8%E5%85%B3/"/>
    <id>http://yoursite.com/2016/12/20/React相关/</id>
    <published>2016-12-19T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:45.961Z</updated>
    <content type="html"><![CDATA[<h1 id="React简介">React简介</h1><ul>
<li>不是一个 MVC 框架,仅仅是 UI</li>
<li>虚拟 DOM</li>
<li>单向响应的数据流</li>
<li>使用JSX语法</li>
</ul>
<p><code>github</code> <a href="https://github.com/facebook/react" target="_blank" rel="external">https://github.com/facebook/react</a></p>
<h2 id="JSX">JSX</h2><p>JSX (Javascript XML syntax transform) 是使用XML语法编写Javascript的一套解析工具；<br>X代表XML；也可以理解为扩展(eXtension)，因为实现JSX功能本身就是使用Javascript；</p>
<p><code>React入门：关于JSX语法 – WEB前端开发</code><br><a href="http://www.css88.com/archives/5632?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://www.css88.com/archives/5632?utm_source=tuicool&amp;utm_medium=referral</a></p>
<ul>
<li>新的替代<code>babel</code><br>JSX是什么JSX其实是JavaScript的扩展，React为了代码的可读性更方便地创建虚拟DOM等原因，加入了一些类似XML的语法的扩展。<br>第二代编译器——babel<br>React官方博客发布了一篇文章，声明其自身用于JSX语法解析的编译器JSTransform已经过期，不再维护，React JS和React Native已经全部采用第三方Babel的JSX编译器实现。原因是两者在功能上已经完全重复，而Babel作为专门的JavaScript语法编译工具，提供了更为强大的功能。而browser.js是babel编译器的浏览器版本。<br><a href="https://segmentfault.com/q/1010000003877594?_ea=505400" target="_blank" rel="external">https://segmentfault.com/q/1010000003877594?_ea=505400</a></li>
</ul>
<hr>
<h1 id="学习">学习</h1><p><code>React 教程 | 菜鸟教程</code><br><a href="http://www.runoob.com/react/react-tutorial.html" target="_blank" rel="external">http://www.runoob.com/react/react-tutorial.html</a></p>
<p><code>[课程]React入门</code> -视频课<br><a href="http://www.imooc.com/learn/504" target="_blank" rel="external">http://www.imooc.com/learn/504</a></p>
<p><code>React 入门实例 - 阮一峰</code><br><a href="http://www.ruanyifeng.com/blog/2015/03/react.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/03/react.html</a></p>
<p><a href="https://github.com/ruanyf/react-demos" target="_blank" rel="external">https://github.com/ruanyf/react-demos</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="React简介">React简介</h1><ul>
<li>不是一个 MVC 框架,仅仅是 UI</li>
<li>虚拟 DOM</li>
<li>单向响应的数据流</li>
<li>使用JSX语法</li>
</ul>
<p><code>github</code]]>
    </summary>
    
      <category term="React" scheme="http://yoursite.com/tags/React/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[react Webpack组合]]></title>
    <link href="http://yoursite.com/2016/12/20/react%20Webpack%E7%BB%84%E5%90%88/"/>
    <id>http://yoursite.com/2016/12/20/react Webpack组合/</id>
    <published>2016-12-19T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:45.975Z</updated>
    <content type="html"><![CDATA[<h1 id="Webpack">Webpack</h1><p><code>介紹 | Webpack 中文指南</code><br><a href="http://webpackdoc.com/" target="_blank" rel="external">http://webpackdoc.com/</a><br><code>使用示例</code>  <a href="http://webpackdoc.com/usage.html" target="_blank" rel="external">http://webpackdoc.com/usage.html</a></p>
<hr>
<h2 id="webpack简单点来说就就是一个配置文件，所有的魔力都是在这一个文件中发生的。_这个配置文件主要分为三大块">webpack简单点来说就就是一个配置文件，所有的魔力都是在这一个文件中发生的。 这个配置文件主要分为三大块</h2><ul>
<li>entry 入口文件 让webpack用哪个文件作为项目的入口</li>
<li>output 出口 让webpack把处理完成的文件放在哪里</li>
<li>module 模块 要用什么不同的模块来处理各种类型的文件</li>
</ul>
<p><code>Webpack傻瓜式指南（一） - 前端外刊评论 - 知乎专栏</code><br><a href="https://zhuanlan.zhihu.com/p/20367175?columnSlug=FrontendMagazine" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/20367175?columnSlug=FrontendMagazine</a></p>
<p><code>Webpack傻瓜指南（二）开发和部署技巧 - 前端外刊评论 - 知乎专栏</code><br><a href="https://zhuanlan.zhihu.com/p/20397902" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/20397902</a></p>
<hr>
<p><code>React+Webpack快速上手指南 - 简书</code><br><a href="http://www.jianshu.com/p/418e48e0cef1" target="_blank" rel="external">http://www.jianshu.com/p/418e48e0cef1</a></p>
<p><code>Webpack 入门指迷 - 题叶, JiyinYiyong - SegmentFault</code><br><a href="https://segmentfault.com/a/1190000002551952" target="_blank" rel="external">https://segmentfault.com/a/1190000002551952</a></p>
<p><code>轻松入门React和Webpack - 说学逗唱 - SegmentFault</code><br><a href="https://segmentfault.com/a/1190000002767365" target="_blank" rel="external">https://segmentfault.com/a/1190000002767365</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">执行打包</span><br><span class="line">如果通过npm install -g webpack方式安装webpack的话，可以通过命令行直接执行打包命令，比如这样：</span><br><span class="line"> </span><br><span class="line"><span class="variable">$webpack</span> --config webpack.config.js</span><br><span class="line">这样就会读取当前目录下的webpack.config.js作为配置文件执行打包操作</span><br><span class="line"> </span><br><span class="line">如果是通过gulp插件gulp-webpack，则可以在gulpfile中写上gulp任务：</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> gulp = <span class="keyword">require</span>(<span class="string">'gulp'</span>);</span><br><span class="line"><span class="keyword">var</span> webpack = <span class="keyword">require</span>(<span class="string">'gulp-webpack'</span>);</span><br><span class="line"><span class="keyword">var</span> webpackConfig = <span class="keyword">require</span>(<span class="string">'./webpack.config'</span>);</span><br><span class="line">gulp.task(<span class="string">"webpack"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> gulp</span><br><span class="line">        .src(<span class="string">'./'</span>)</span><br><span class="line">        .pipe(webpack(webpackConfig))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">'./build'</span>));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="generator-react-webpack项目运行过程"><code>generator-react-webpack</code>项目运行过程</h1><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> start</span><br></pre></td></tr></table></figure>
<ul>
<li><p><code>package.json</code> - <code>scripts</code> - <code>start</code></p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"node server.js --env=dev"</span>,</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"karma start"</span>,</span><br><span class="line">    <span class="string">"serve"</span>: <span class="string">"node server.js --env=dev"</span>,</span><br><span class="line">    <span class="string">"serve:dist"</span>: <span class="string">"node server.js --env=dist"</span>,</span><br><span class="line">    <span class="string">"dist"</span>: <span class="string">"npm run copy &amp; webpack --env=dist"</span>,</span><br><span class="line">    <span class="string">"copy"</span>: <span class="string">"copyfiles -f ./src/index.html ./src/favicon.ico ./dist"</span>,</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>server.js --env=dev</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>(<span class="string">'core-js/fn/object/assign'</span>);</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">'webpack'</span>);</span><br><span class="line"><span class="keyword">const</span> WebpackDevServer = <span class="built_in">require</span>(<span class="string">'webpack-dev-server'</span>);</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">'./webpack.config'</span>);</span><br><span class="line"><span class="keyword">const</span> open = <span class="built_in">require</span>(<span class="string">'open'</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> compiler = webpack(config); <span class="comment">// 实例化webpack</span></span><br><span class="line"><span class="keyword">new</span> WebpackDevServer(compiler, config.devServer) <span class="comment">// 启动服务</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>webpack.config.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> args = <span class="built_in">require</span>(<span class="string">'minimist'</span>)(process.argv.slice(<span class="number">2</span>)); <span class="comment">//  获取输入`dev`</span></span><br><span class="line"><span class="keyword">let</span> config = <span class="built_in">require</span>(path.join(__dirname, <span class="string">'cfg/'</span> + validEnv));<span class="comment">// 获取cfg模块 `cfg/dev`</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">module</span>.exports = buildConfig(env);<span class="comment">// 导出配置</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>cfg/dev.js</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> baseConfig = <span class="built_in">require</span>(<span class="string">'./base'</span>);</span><br><span class="line"><span class="keyword">let</span> defaultSettings = <span class="built_in">require</span>(<span class="string">'./defaults'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置初始化(继承`baseConfig`)</span></span><br><span class="line"><span class="keyword">let</span> config = <span class="built_in">Object</span>.assign(&#123;&#125;, baseConfig, &#123;</span><br><span class="line">  entry: [  <span class="comment">// 项目 入口</span></span><br><span class="line">    <span class="string">'webpack-dev-server/client?http://127.0.0.1:'</span> + defaultSettings.port,</span><br><span class="line">    <span class="string">'webpack/hot/only-dev-server'</span>,</span><br><span class="line">    <span class="string">'./src/index'</span></span><br><span class="line">  ],</span><br><span class="line">  cache: <span class="literal">true</span>,</span><br><span class="line">  devtool: <span class="string">'eval-source-map'</span>,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> webpack.HotModuleReplacementPlugin(),</span><br><span class="line">    <span class="keyword">new</span> webpack.NoErrorsPlugin(),</span><br><span class="line">    <span class="keyword">new</span> BowerWebpackPlugin(&#123;</span><br><span class="line">      searchResolveModulesDirectories: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br><span class="line">  <span class="built_in">module</span>: defaultSettings.getDefaultModules() <span class="comment">// 项目module 模块</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Add needed loaders to the defaults here</span></span><br><span class="line">config.module.loaders.push(&#123;</span><br><span class="line">  test: <span class="regexp">/\.(js|jsx)$/</span>,</span><br><span class="line">  loader: <span class="string">'react-hot!babel-loader'</span>, <span class="comment">// hot热加载 &amp;  Babel能够将ES6代码转换成ES5</span></span><br><span class="line">  include: [].concat(</span><br><span class="line">    config.additionalPaths,</span><br><span class="line">    [ path.join(__dirname, <span class="string">'/../src'</span>) ]</span><br><span class="line">  )</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = config; <span class="comment">// 导出配置</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>cfg/ defaults.js</code>  项目module 模块</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="module"><span class="keyword">module</span>.exports = </span>&#123;</span><br><span class="line">  srcPath: srcPath,</span><br><span class="line">  publicPath: <span class="string">'/assets/'</span>,</span><br><span class="line">  port: dfltPort,</span><br><span class="line">  getDefaultModules: getDefaultModules <span class="comment">// function</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><code>cfg/base.js</code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  additionalPaths: additionalPaths,</span><br><span class="line">  port: defaultSettings.port,</span><br><span class="line">  debug: <span class="literal">true</span>, <span class="comment">// 是否启用debug</span></span><br><span class="line">  devtool: <span class="string">'eval'</span>,</span><br><span class="line">  output: &#123; <span class="comment">// 项目出口</span></span><br><span class="line">    path: path.join(__dirname, <span class="string">'/../dist/assets'</span>),</span><br><span class="line">    filename: <span class="string">'app.js'</span>,</span><br><span class="line">    publicPath: defaultSettings.publicPath</span><br><span class="line">  &#125;,</span><br><span class="line">  devServer: &#123;</span><br><span class="line">    contentBase: <span class="string">'./src/'</span>,</span><br><span class="line">    historyApiFallback: <span class="literal">true</span>,</span><br><span class="line">    hot: <span class="literal">true</span>,<span class="comment">// 是否支持热加载</span></span><br><span class="line">    port: defaultSettings.port,</span><br><span class="line">    publicPath: defaultSettings.publicPath,</span><br><span class="line">    noInfo: <span class="literal">false</span></span><br><span class="line">  &#125;,</span><br><span class="line">  resolve: &#123;</span><br><span class="line">    extensions: [<span class="string">''</span>, <span class="string">'.js'</span>, <span class="string">'.jsx'</span>],</span><br><span class="line">    alias: &#123;</span><br><span class="line">      actions: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/actions/`</span>,</span><br><span class="line">      components: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/components/`</span>,</span><br><span class="line">      sources: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/sources/`</span>,</span><br><span class="line">      stores: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/stores/`</span>,</span><br><span class="line">      styles: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/styles/`</span>,</span><br><span class="line">      config: <span class="string">`<span class="subst">$&#123;defaultSettings.srcPath&#125;</span>/config/`</span> + process.env.REACT_WEBPACK_ENV,</span><br><span class="line">      <span class="string">'react/lib/ReactMount'</span>: <span class="string">'react-dom/lib/ReactMount'</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="built_in">module</span>: &#123;&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Webpack">Webpack</h1><p><code>介紹 | Webpack 中文指南</code><br><a href="http://webpackdoc.com/" target="_blank" rel="external">http://web]]>
    </summary>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[查看Android签名]]></title>
    <link href="http://yoursite.com/2016/12/19/%E6%9F%A5%E7%9C%8BAndroid%E7%AD%BE%E5%90%8D/"/>
    <id>http://yoursite.com/2016/12/19/查看Android签名/</id>
    <published>2016-12-18T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:45.950Z</updated>
    <content type="html"><![CDATA[<h1 id="方式一：通过签名文件_app-keystore_中获取">方式一：通过签名文件 <code>app.keystore</code> 中获取</h1><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -<span class="keyword">list</span> -v -keystore <span class="keyword">app</span>.keystore</span><br></pre></td></tr></table></figure>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">F:\work\android_sign&gt;keytool -<span class="built_in">list</span> -v -keystore app.keystore</span><br><span class="line">输入密钥库口令:</span><br><span class="line"> </span><br><span class="line">密钥库类型: JKS</span><br><span class="line">密钥库提供方: SUN</span><br><span class="line"> </span><br><span class="line">您的密钥库包含 <span class="number">1</span> 个条目</span><br><span class="line"> </span><br><span class="line">别名: app.keystore</span><br><span class="line">创建日期: <span class="number">2015</span>-<span class="number">6</span>-<span class="number">29</span></span><br><span class="line">条目类型: PrivateKeyEntry</span><br><span class="line">证书链长度: <span class="number">1</span></span><br><span class="line">证书[<span class="number">1</span>]:</span><br><span class="line">所有者: CN=wosaitech, OU=wosaitech, O=wosaitech, L=杭州, ST=浙江, C=cn</span><br><span class="line">发布者: CN=wosaitech, OU=wosaitech, O=wosaitech, L=杭州, ST=浙江, C=cn</span><br><span class="line">序列号: <span class="number">61f</span>0b791</span><br><span class="line">有效期开始日期: Mon Jun <span class="number">29</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">31</span> CST <span class="number">2015</span>, 截止日期: Fri May <span class="number">12</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">31</span> CST <span class="number">2215</span></span><br><span class="line">证书指纹:</span><br><span class="line">         MD5: FD:A1:F4:B4:FD:B7:<span class="number">85</span>:<span class="number">1</span>C:<span class="number">34</span>:<span class="number">77</span>:<span class="number">7</span>E:BB:B7:F0:<span class="number">40</span>:<span class="number">70</span></span><br><span class="line">         SHA1: <span class="number">2</span>D:<span class="number">57</span>:FB:<span class="number">81</span>:F3:<span class="number">43</span>:<span class="number">62</span>:<span class="number">81</span>:<span class="number">2</span>E:<span class="number">50</span>:<span class="number">63</span>:<span class="number">46</span>:<span class="number">42</span>:BA:<span class="number">0</span>A:<span class="number">8</span>B:<span class="number">1F</span>:<span class="number">92</span>:BC:<span class="number">39</span></span><br><span class="line">         SHA256: <span class="number">27</span>:EE:<span class="number">91</span>:AE:B3:BF:<span class="number">6</span>D:<span class="number">49</span>:<span class="number">36</span>:<span class="number">8</span>B:AB:<span class="number">0F</span>:<span class="number">7</span>E:B6:<span class="number">83</span>:C1:<span class="number">9</span>A:B3:<span class="number">91</span>:<span class="number">34</span>:AA:<span class="number">43</span>:<span class="number">62</span>:<span class="number">63</span>:AE:<span class="number">04</span>:<span class="number">38</span>:EC:<span class="number">25</span>:<span class="number">25</span>:<span class="number">2</span>B:<span class="number">31</span></span><br><span class="line">         签名算法名称: SHA256withRSA</span><br><span class="line">         版本: <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">扩展:</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor">#<span class="number">1</span>: ObjectId: <span class="number">2.5</span><span class="number">.29</span><span class="number">.14</span> Criticality=false</span></span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line"><span class="number">0000</span>: B9 <span class="number">5</span>C <span class="number">2F</span> EC <span class="number">1</span>D <span class="number">02</span> <span class="number">67</span> <span class="number">02</span>   <span class="number">54</span> <span class="number">19</span> <span class="number">03</span> <span class="number">10</span> <span class="number">32</span> <span class="number">10</span> <span class="number">7</span>C C9  .\/...g.T..<span class="number">.2</span>...</span><br></pre></td></tr></table></figure>
<ul>
<li>结果<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHA1: <span class="number">2</span>D:<span class="number">57</span>:FB:<span class="number">81</span>:F3:<span class="number">43</span>:<span class="number">62</span>:<span class="number">81</span>:<span class="number">2</span>E:<span class="number">50</span>:<span class="number">63</span>:<span class="number">46</span>:<span class="number">42</span>:BA:<span class="number">0</span>A:<span class="number">8</span>B:<span class="number">1F</span>:<span class="number">92</span>:BC:<span class="number">39</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="方式二：通过程序包app-apk中获取">方式二：通过程序包<code>app.apk</code>中获取</h1><ul>
<li>先解压<code>app.apk</code></li>
<li>再到解压目录中使用<code>keytool  -printcert</code> （ -printcert          打印证书内容）<figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -printcert -<span class="keyword">file</span> .\META-<span class="keyword">INF</span>\APP_KEYS.RSA</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">F:\work\android_sign\android-release-<span class="keyword">signed</span>&gt;keytool -printcert -file .\META-INF\APP_KEYS.RSA</span><br><span class="line">所有者: CN=wosaitech, OU=wosaitech, O=wosaitech, L=杭州, ST=浙江, C=cn</span><br><span class="line">发布者: CN=wosaitech, OU=wosaitech, O=wosaitech, L=杭州, ST=浙江, C=cn</span><br><span class="line">序列号: <span class="number">61f</span>0b791</span><br><span class="line">有效期开始日期: Mon Jun <span class="number">29</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">31</span> CST <span class="number">2015</span>, 截止日期: Fri May <span class="number">12</span> <span class="number">10</span>:<span class="number">31</span>:<span class="number">31</span> CST <span class="number">2215</span></span><br><span class="line">证书指纹:</span><br><span class="line">         MD5: FD:A1:F4:B4:FD:B7:<span class="number">85</span>:<span class="number">1</span>C:<span class="number">34</span>:<span class="number">77</span>:<span class="number">7</span>E:BB:B7:F0:<span class="number">40</span>:<span class="number">70</span></span><br><span class="line">         SHA1: <span class="number">2</span>D:<span class="number">57</span>:FB:<span class="number">81</span>:F3:<span class="number">43</span>:<span class="number">62</span>:<span class="number">81</span>:<span class="number">2</span>E:<span class="number">50</span>:<span class="number">63</span>:<span class="number">46</span>:<span class="number">42</span>:BA:<span class="number">0</span>A:<span class="number">8</span>B:<span class="number">1F</span>:<span class="number">92</span>:BC:<span class="number">39</span></span><br><span class="line">         SHA256: <span class="number">27</span>:EE:<span class="number">91</span>:AE:B3:BF:<span class="number">6</span>D:<span class="number">49</span>:<span class="number">36</span>:<span class="number">8</span>B:AB:<span class="number">0F</span>:<span class="number">7</span>E:B6:<span class="number">83</span>:C1:<span class="number">9</span>A:B3:<span class="number">91</span>:<span class="number">34</span>:AA:<span class="number">43</span>:<span class="number">62</span>:<span class="number">63</span>:AE:<span class="number">04</span>:<span class="number">38</span>:EC:<span class="number">25</span>:<span class="number">25</span>:<span class="number">2</span>B:<span class="number">31</span></span><br><span class="line">         签名算法名称: SHA256withRSA</span><br><span class="line">         版本: <span class="number">3</span></span><br><span class="line"> </span><br><span class="line">扩展:</span><br><span class="line"> </span><br><span class="line"><span class="preprocessor">#<span class="number">1</span>: ObjectId: <span class="number">2.5</span><span class="number">.29</span><span class="number">.14</span> Criticality=false</span></span><br><span class="line">SubjectKeyIdentifier [</span><br><span class="line">KeyIdentifier [</span><br><span class="line"><span class="number">0000</span>: B9 <span class="number">5</span>C <span class="number">2F</span> EC <span class="number">1</span>D <span class="number">02</span> <span class="number">67</span> <span class="number">02</span>   <span class="number">54</span> <span class="number">19</span> <span class="number">03</span> <span class="number">10</span> <span class="number">32</span> <span class="number">10</span> <span class="number">7</span>C C9  .\/...g.T..<span class="number">.2</span>...</span><br><span class="line"><span class="number">0010</span>: <span class="number">7</span>A EE B3 E1                                        z...</span><br><span class="line">]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<ul>
<li>结果<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHA1: <span class="number">2</span>D:<span class="number">57</span>:FB:<span class="number">81</span>:F3:<span class="number">43</span>:<span class="number">62</span>:<span class="number">81</span>:<span class="number">2</span>E:<span class="number">50</span>:<span class="number">63</span>:<span class="number">46</span>:<span class="number">42</span>:BA:<span class="number">0</span>A:<span class="number">8</span>B:<span class="number">1F</span>:<span class="number">92</span>:BC:<span class="number">39</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="方式一：通过签名文件_app-keystore_中获取">方式一：通过签名文件 <code>app.keystore</code> 中获取</h1><figure class="highlight stata"><table><tr><td class="gutt]]>
    </summary>
    
      <category term="Android签名" scheme="http://yoursite.com/tags/Android%E7%AD%BE%E5%90%8D/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[https]]></title>
    <link href="http://yoursite.com/2016/12/16/https/"/>
    <id>http://yoursite.com/2016/12/16/https/</id>
    <published>2016-12-15T16:00:04.000Z</published>
    <updated>2017-01-19T10:57:13.322Z</updated>
    <content type="html"><![CDATA[<h1 id="网络分层">网络分层</h1><p>网络层次可划分为五层因特网协议栈和七层因特网协议栈</p>
<table>
<thead>
<tr>
<th>五层</th>
<th>七层(OSI模型)</th>
</tr>
</thead>
<tbody>
<tr>
<td>应用层</td>
<td>应用层</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>会话层</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
<td>表示层</td>
<td></td>
</tr>
<tr>
<td>传输层</td>
<td>传输层</td>
<td></td>
</tr>
<tr>
<td>网络层</td>
<td>网络层</td>
<td></td>
</tr>
<tr>
<td>链路层</td>
<td>链路层</td>
<td></td>
</tr>
<tr>
<td>物理层</td>
<td>物理层</td>
<td></td>
</tr>
</tbody>
</table>
<ul>
<li>协议栈（Protocol Stack）<figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">应用层（HTTP，FTP，TFTP，TELNET，DNS，EMAIL等）</span><br><span class="line">表示层（VTP）</span><br><span class="line">会话层</span><br><span class="line">传输层（TCP，UDP）</span><br><span class="line">网络层（IP）</span><br><span class="line">数据链路层（WI-FI，以太网，令牌环，FDDI，MAC等）</span><br><span class="line">物理层<span class="string">[2]</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>网络分层_百度百科</code><br><a href="http://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82" target="_blank" rel="external">http://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%88%86%E5%B1%82</a></p>
<hr>
<h1 id="Https简介">Https简介</h1><p>HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的HTTP通道，简单讲是HTTP的安全版。即HTTP下加入SSL层，HTTPS的安全基础是SSL，因此加密的详细内容就需要SSL</p>
<h1 id="HTTPS和HTTP的区别">HTTPS和HTTP的区别</h1><table>
<thead>
<tr>
<th>场景</th>
<th>http</th>
<th>https</th>
</tr>
</thead>
<tbody>
<tr>
<td>传输</td>
<td>明文</td>
<td>密文</td>
</tr>
<tr>
<td>证书</td>
<td>不需要</td>
<td>ca申请证书(免费/收费)</td>
</tr>
<tr>
<td>协议</td>
<td>http是超文本传输协议</td>
<td>https 则是具有安全性的ssl加密传输协议</td>
</tr>
<tr>
<td>端口</td>
<td>80</td>
<td>443</td>
</tr>
<tr>
<td>状态</td>
<td>无状态</td>
<td>由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议</td>
</tr>
</tbody>
</table>
<p><code>https_百度百科</code><br><a href="http://baike.baidu.com/item/https" target="_blank" rel="external">http://baike.baidu.com/item/https</a></p>
<hr>
<h1 id="https通信过程">https通信过程</h1><ul>
<li>https的实现原理<br>有两种基本的加解密算法类型：<br>1）对称加密：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密算法有DES、AES等；<br>2）非对称加密：密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密，私钥加密需要公钥解密），相对对称加密速度较慢，典型的非对称加密算法有RSA、DSA等。</li>
</ul>
<ul>
<li>https通信的优点<br>1）客户端产生的密钥只有客户端和服务器端能得到；<br>2）加密的数据只有客户端和服务器端才能得到明文；<br>3）客户端到服务端的通信是安全的。</li>
</ul>
<p><code>深入理解http/https协议</code><br><a href="http://www.mamicode.com/info-detail-1631526.html" target="_blank" rel="external">http://www.mamicode.com/info-detail-1631526.html</a></p>
<hr>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/448896-file_1484817404992_914a.png" alt=""><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/46324672-file_1484817412376_123a9.png" alt=""><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/14880190-file_1484817424981_12d7f.png" alt=""></p>
<p><code>苹果强制使用HTTPS传输了怎么办？——关于HTTPS，APP开发者必须知道的事 - 推酷</code><br><a href="http://www.tuicool.com/articles/nya6BbM" target="_blank" rel="external">http://www.tuicool.com/articles/nya6BbM</a></p>
<hr>
<p><code>记录启用https的全过程 - 推酷</code><br><a href="http://www.tuicool.com/articles/ZVjMZ3Y" target="_blank" rel="external">http://www.tuicool.com/articles/ZVjMZ3Y</a></p>
<h1 id="密钥，CA证书">密钥，CA证书</h1><ul>
<li>SSL证书分为四大类<ul>
<li>DV证书</li>
<li>OV证书</li>
<li>EV证书</li>
<li>自签名证书: 自签名证书很少被部署到正式的网站上，一般是被用在内部的测试环境中. (工具openssl)<br><a href="https://github.com/michaelliao/itranswarp.js/blob/master/conf/ssl/gencert.sh" target="_blank" rel="external">https://github.com/michaelliao/itranswarp.js/blob/master/conf/ssl/gencert.sh</a></li>
</ul>
</li>
</ul>
<p><code>给Nginx配置一个自签名的SSL证书 - 推酷</code><br><a href="http://www.tuicool.com/articles/VNj2um" target="_blank" rel="external">http://www.tuicool.com/articles/VNj2um</a></p>
<p><code>更多：自动shell脚本 gencert.sh</code><br><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=Enter+your+domain+filename%3Agencert.sh&amp;type=Code&amp;ref=searchresults" target="_blank" rel="external">https://github.com/search?utf8=%E2%9C%93&amp;q=Enter+your+domain+filename%3Agencert.sh&amp;type=Code&amp;ref=searchresults</a></p>
<p><code>为满足微信小程序 HTTPS 的要求，我们在部署 HTTPS 网站时，该如何选择 SSL 证书？ - 推酷</code><br><a href="http://www.tuicool.com/articles/3yaqqiN" target="_blank" rel="external">http://www.tuicool.com/articles/3yaqqiN</a></p>
<p><code>利用腾讯云免费证书打造全https站 - 推酷</code><br><a href="http://www.tuicool.com/articles/rMNRVrr" target="_blank" rel="external">http://www.tuicool.com/articles/rMNRVrr</a></p>
<p><code>https 免费证书获取指引 - 推酷</code><br><a href="http://www.tuicool.com/articles/z2m2auZ" target="_blank" rel="external">http://www.tuicool.com/articles/z2m2auZ</a></p>
<ul>
<li>1, 通过 let’s encrypt</li>
<li>2, 腾讯云免费 ssl 证书申请</li>
<li>3, CDN 服务商一键提供</li>
</ul>
<ul>
<li>证书校验的几种方式：<ul>
<li>1, 邮箱验证 admin@cnodejs.org</li>
<li>2, 文件校验 http:// cnodejs.org/5d41402abc4 b2a76b9719d911017c592.html</li>
<li>3, dns 校验 http:// 5d41402abc4b2a76b9719d911017c592.cnodejs.org 的域名 cname 到某个地址</li>
</ul>
</li>
</ul>
<p><code>七牛云推出SSL证书免费服务 并宣布HTTPS调价 - 推酷</code><br><a href="http://www.tuicool.com/articles/M73EvqA" target="_blank" rel="external">http://www.tuicool.com/articles/M73EvqA</a></p>
<hr>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/64482030-file_1484817437675_9d43.png" alt=""><br><code>如何快速上线全站 HTTPS - 推酷</code><br> <a href="http://www.tuicool.com/articles/MneaAbj" target="_blank" rel="external">http://www.tuicool.com/articles/MneaAbj</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="网络分层">网络分层</h1><p>网络层次可划分为五层因特网协议栈和七层因特网协议栈</p>
<table>
<thead>
<tr>
<th>五层</th>
<th>七层(OSI模型)</th>
</tr>
</thead>
<tbody>
<tr>
<td>]]>
    </summary>
    
      <category term="https" scheme="http://yoursite.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic-native-transitions 试用]]></title>
    <link href="http://yoursite.com/2016/12/16/ionic-native-transitions%20%E8%AF%95%E7%94%A8/"/>
    <id>http://yoursite.com/2016/12/16/ionic-native-transitions 试用/</id>
    <published>2016-12-15T16:00:03.000Z</published>
    <updated>2017-01-19T10:09:45.924Z</updated>
    <content type="html"><![CDATA[<p><code>github</code><br><a href="https://github.com/shprink/ionic-native-transitions" target="_blank" rel="external">https://github.com/shprink/ionic-native-transitions</a></p>
<hr>
<h1 id="1-安装node_modules">1.安装<code>node_modules</code></h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> ionic-<span class="keyword">native</span>-transitions <span class="comment">--save</span></span></span><br></pre></td></tr></table></figure>
<h1 id="2-安装lib库依赖">2.安装lib库依赖</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bower <span class="operator"><span class="keyword">install</span> shprink/ionic-<span class="keyword">native</span>-transitions</span></span><br></pre></td></tr></table></figure>
<ul>
<li>引入<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"./PathToBowerLib/dist/ionic-native-transitions.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="3-安装cordova插件plugin">3.安装cordova插件plugin</h1><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Cordova</span></span><br><span class="line">cordova plugin <span class="built_in">add</span> <span class="keyword">https</span>://github.com/Telerik-Verified-Plugins/NativePageTransitions<span class="comment">#0.6.5</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># Using Ionic CLI</span></span><br><span class="line">ionic plugin <span class="built_in">add</span> <span class="keyword">https</span>://github.com/Telerik-Verified-Plugins/NativePageTransitions<span class="comment">#0.6.5</span></span><br></pre></td></tr></table></figure>
<ul>
<li>IOS9设备 闪屏问题，安装插件解决<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Using Cordova</span><br><span class="line">cordova <span class="keyword">plugin</span> add cordova-<span class="keyword">plugin</span>-wkwebview</span><br><span class="line"> </span><br><span class="line"># Using Ionic <span class="keyword">CLI</span></span><br><span class="line">ionic <span class="keyword">plugin</span> add cordova-<span class="keyword">plugin</span>-wkwebview</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="4-ionic（angular）模块引入-_app-js">4.ionic（angular）模块引入. <code>app.js</code></h1><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">angular.<span class="keyword">module</span>(<span class="symbol">'yourApp'</span>, [ <span class="symbol">'ionic</span>-native-transitions' ]);</span><br></pre></td></tr></table></figure>
<h1 id="5-安装尝试(无需改变默认配置)">5.安装尝试(无需改变默认配置)</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">ionic</span> platform <span class="keyword">add </span><span class="keyword">android</span><br><span class="line"></span><span class="label">ionic</span> run <span class="keyword">android</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="6-修改默认配置">6.修改默认配置</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.config(<span class="keyword">function</span>(<span class="variable">$ionicNativeTransitionsProvider</span>)&#123;</span><br><span class="line">    nativeTransitionConfig();//  场景切换,配置</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">* 场景切换,配置</span><br><span class="line">*/</span><br><span class="line">function nativeTransitionConfig() &#123;</span><br><span class="line">  <span class="variable">$ionicNativeTransitionsProvider</span>.setDefaultOptions(&#123;</span><br><span class="line">    duration: <span class="number">200</span>, // <span class="keyword">in</span> milliseconds (ms), <span class="keyword">default</span> <span class="number">400</span>,</span><br><span class="line">    slowdownfactor: <span class="number">4</span>, // overlap views (higher <span class="built_in">number</span> is more) <span class="literal">or</span> no overlap (<span class="number">1</span>), <span class="keyword">default</span> <span class="number">4</span></span><br><span class="line">    iosdelay: -<span class="number">1</span>, // ms <span class="keyword">to</span> wait <span class="keyword">for</span> the iOS webview <span class="keyword">to</span> update before animation kicks <span class="keyword">in</span>, <span class="keyword">default</span> -<span class="number">1</span></span><br><span class="line">    androiddelay: -<span class="number">1</span>, // same as above but <span class="keyword">for</span> Android, <span class="keyword">default</span> -<span class="number">1</span></span><br><span class="line">    winphonedelay: -<span class="number">1</span>, // same as above but <span class="keyword">for</span> Windows Phone, <span class="keyword">default</span> -<span class="number">1</span>,</span><br><span class="line">    fixedPixelsTop: <span class="number">0</span>, // the <span class="built_in">number</span> of pixels of your fixed header, <span class="keyword">default</span> <span class="number">0</span> (iOS <span class="literal">and</span> Android)</span><br><span class="line">    fixedPixelsBottom: <span class="number">0</span>, // the <span class="built_in">number</span> of pixels of your fixed footer (f.i. a tab bar), <span class="keyword">default</span> <span class="number">0</span> (iOS <span class="literal">and</span> Android)</span><br><span class="line">    triggerTransitionEvent: <span class="string">'$ionicView.afterEnter'</span>, // internal ionic-native-transitions option</span><br><span class="line">    backInOppositeDirection: <span class="literal">false</span> // Takes over <span class="keyword">default</span> back transition <span class="literal">and</span> state back transition <span class="keyword">to</span> use the opposite direction transition <span class="keyword">to</span> go back</span><br><span class="line">  &#125;)<span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">  /**</span><br><span class="line">   * transitions</span><br><span class="line">   * Slide 滑动</span><br><span class="line">   * Flip 翻转</span><br><span class="line">   * Fade 褪色</span><br><span class="line">   * Drawer 抽屉</span><br><span class="line">   * Curl 卷曲</span><br><span class="line">   */</span><br><span class="line">  <span class="variable">$ionicNativeTransitionsProvider</span>.setDefaultTransition(&#123;</span><br><span class="line">    type: <span class="string">'slide'</span>,</span><br><span class="line">    direction: <span class="string">'left'</span></span><br><span class="line">  &#125;)<span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable">$ionicNativeTransitionsProvider</span>.setDefaultBackTransition(&#123;</span><br><span class="line">    type: <span class="string">'slide'</span>,</span><br><span class="line">    direction: <span class="string">'right'</span></span><br><span class="line">  &#125;)<span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">  /**</span><br><span class="line">   * 更多配置,详见官方介绍：</span><br><span class="line">   * https://github.com/shprink/ionic-native-transitions</span><br><span class="line">   */</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>参考</strong><br><code>ionic-native-transitions让你的Ionic应用比原生还快</code></p>
<p><a href="http://www.phonegap100.com/article-482-1.html" target="_blank" rel="external">http://www.phonegap100.com/article-482-1.html</a><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ionic-<span class="keyword">native</span>-transitions调用原生页面切换实现ionic路由切换，让你的ionic应用比原生的应用更快</span><br></pre></td></tr></table></figure></p>
<hr>
<p><code>ionic react-native和native开发移动app那个好</code><br><a href="http://www.phonegap100.com/article-486-1.html" target="_blank" rel="external">http://www.phonegap100.com/article-486-1.html</a><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ionic使用ionic-<span class="keyword">native</span>-transitions   调用原生专场基本看不出和原生区别  （适合android ios）</span><br></pre></td></tr></table></figure></p>
<p><code>让ionic应用实现类原生app的平滑过渡 | 常亮的技术博客</code><br><a href="http://www.diantuo.net/1613" target="_blank" rel="external">http://www.diantuo.net/1613</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>github</code><br><a href="https://github.com/shprink/ionic-native-transitions" target="_blank" rel="external">https://github.com/sh]]>
    </summary>
    
      <category term="ionic-native-transitions" scheme="http://yoursite.com/tags/ionic-native-transitions/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[微信支付-APP支付]]></title>
    <link href="http://yoursite.com/2016/12/16/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98-APP%E6%94%AF%E4%BB%98/"/>
    <id>http://yoursite.com/2016/12/16/微信支付-APP支付/</id>
    <published>2016-12-15T16:00:02.000Z</published>
    <updated>2017-01-19T10:57:13.296Z</updated>
    <content type="html"><![CDATA[<h1 id="业务流程">业务流程</h1><p><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_3" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_3</a><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/54482401-file_1484817226181_73db.png" alt=""></p>
<ul>
<li>过程说明<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">商户系统和微信支付系统主要交互说明：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">步骤<span class="number">1</span>：用户在商户APP中选择商品，提交订单，选择微信支付。</span><br><span class="line">步骤<span class="number">2</span>：商户后台收到用户支付单，调用微信支付统一下单接口。参见【统一下单API】。</span><br><span class="line">步骤<span class="number">3</span>：统一下单接口返回正常的prepay_id，再按签名规范重新生成签名后，将数据传输给APP。参与签名的字段名为appId，partnerId，prepayId，nonceStr，timeStamp，package。注意：package的值格式为Sign=WXPay</span><br><span class="line">步骤<span class="number">4</span>：商户APP调起微信支付。api参见本章节【app端开发步骤说明】</span><br><span class="line">步骤<span class="number">5</span>：商户后台接收支付通知。api参见【支付结果通知API】</span><br><span class="line">步骤<span class="number">6</span>：商户后台查询支付结果。，api参见【查询订单API】</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="生成订单（_微信_）">生成订单（ 微信 ）</h1><p>参考：统一下单接口 <code>&lt;trade_type&gt;APP&lt;/trade_type&gt;</code><br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_1</a><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">xml</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">appid</span>&gt;</span>wx2421b1c4370ec43b<span class="tag">&lt;/<span class="title">appid</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">attach</span>&gt;</span>支付测试<span class="tag">&lt;/<span class="title">attach</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">body</span>&gt;</span>APP支付测试<span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">mch_id</span>&gt;</span>10000100<span class="tag">&lt;/<span class="title">mch_id</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">nonce_str</span>&gt;</span>1add1a30ac87aa2db72f57a2375d8fec<span class="tag">&lt;/<span class="title">nonce_str</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">notify_url</span>&gt;</span>http://wxpay.wxutil.com/pub_v2/pay/notify.v2.php<span class="tag">&lt;/<span class="title">notify_url</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">out_trade_no</span>&gt;</span>1415659990<span class="tag">&lt;/<span class="title">out_trade_no</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">spbill_create_ip</span>&gt;</span>14.23.150.211<span class="tag">&lt;/<span class="title">spbill_create_ip</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">total_fee</span>&gt;</span>1<span class="tag">&lt;/<span class="title">total_fee</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">trade_type</span>&gt;</span>APP<span class="tag">&lt;/<span class="title">trade_type</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">sign</span>&gt;</span>0CB01533B8C1EF103065174F50BCA001<span class="tag">&lt;/<span class="title">sign</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">xml</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<ul>
<li>API签名规范<br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3</a></li>
</ul>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">假设传送的参数如下：</span><br><span class="line">appid： wxd930ea5d5a258f4f</span><br><span class="line">mch_id： <span class="number">10000100</span></span><br><span class="line">device_info： <span class="number">1000</span></span><br><span class="line">body： test</span><br><span class="line">nonce_str： ibuaiVcKdpRxkhJA</span><br><span class="line"> </span><br><span class="line">第一步：对参数按照key=value的格式，并按照参数名ASCII字典序排序如下：</span><br><span class="line">stringA=<span class="string">"appid=wxd930ea5d5a258f4f&amp;body=test&amp;device_info=1000&amp;mch_id=10000100&amp;nonce_str=ibuaiVcKdpRxkhJA"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二步：拼接API密钥：</span><br><span class="line">stringSignTemp=<span class="string">"stringA&amp;key=192006250b4c09247ec02edce69f6a2d"</span></span><br><span class="line">sign=MD5(stringSignTemp).<span class="keyword">to</span>UpperCase()=<span class="string">"9A0A8659F005D6984697E2CA0A9CF3B7"</span></span><br><span class="line"> </span><br><span class="line">最终得到最终发送的数据：</span><br><span class="line"><span class="variable">&lt;xml&gt;</span></span><br><span class="line"><span class="variable">&lt;appid&gt;</span>wxd930ea5d5a258f4f<span class="variable">&lt;/appid&gt;</span></span><br><span class="line"><span class="variable">&lt;mch_id&gt;</span><span class="number">10000100</span><span class="variable">&lt;/mch_id&gt;</span></span><br><span class="line"><span class="variable">&lt;device_info&gt;</span><span class="number">1000</span><span class="variable">&lt;device_info&gt;</span></span><br><span class="line"><span class="variable">&lt;body&gt;</span>test<span class="variable">&lt;/body&gt;</span></span><br><span class="line"><span class="variable">&lt;nonce_str&gt;</span>ibuaiVcKdpRxkhJA<span class="variable">&lt;/nonce_str&gt;</span></span><br><span class="line"><span class="variable">&lt;sign&gt;</span><span class="number">9</span>A0A8659F005D6984697E2CA0A9CF3B7<span class="variable">&lt;/sign&gt;</span></span><br><span class="line"><span class="variable">&lt;xml&gt;</span></span><br></pre></td></tr></table></figure>
<p>微信提供相关接口在线签名验证工具： <a href="https://pay.weixin.qq.com/wiki/tools/signverify/" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/tools/signverify/</a></p>
<ul>
<li>API密钥<br>商户平台中设置  <a href="https://pay.weixin.qq.com" target="_blank" rel="external">https://pay.weixin.qq.com</a><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/17-1-19/41729331-file_1484817256396_ffb0.png" alt=""></li>
</ul>
<h1 id="调起支付">调起支付</h1><p><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_5</a></p>
<ul>
<li><p>android</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">IWXAPI api<span class="comment">;</span></span><br><span class="line">PayReq request = new PayReq()<span class="comment">;</span></span><br><span class="line">request.appId = "wxd930ea<span class="number">5d5a258</span>f4f"<span class="comment">;</span></span><br><span class="line">request.partnerId = "<span class="number">1900000109</span>"<span class="comment">;</span></span><br><span class="line">request.prepayId= "<span class="number">1101000000140</span>415649af9fc314aa427",<span class="comment">;</span></span><br><span class="line">request.packageValue = "Sign=WXPay"<span class="comment">;</span></span><br><span class="line">request.nonceStr= "<span class="number">1101000000140</span>429eb<span class="number">40476f8896</span>f4c9"<span class="comment">;</span></span><br><span class="line">request.timeStamp= "<span class="number">1398746574</span>"<span class="comment">;</span></span><br><span class="line">request.sign= "7FFECB<span class="number">600D7157</span>C5AA<span class="number">49810D2D8</span>F28BC<span class="number">2811827</span>B"<span class="comment">;</span></span><br><span class="line">api.sendReq(req)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>cordova plugin ： cordova-plugin-wechat</p>
</li>
</ul>
<p><a href="https://github.com/xu-li/cordova-plugin-wechat" target="_blank" rel="external">https://github.com/xu-li/cordova-plugin-wechat</a></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> dto = response.data.object.dto;</span><br><span class="line"><span class="comment">// var params = &#123;</span></span><br><span class="line"><span class="comment">//   appid: resData.appid,</span></span><br><span class="line"><span class="comment">//   noncestr: resData.nonce_str, // nonce:随机字符串，不长于32位。推荐随机数生成算法</span></span><br><span class="line"><span class="comment">//   package: resData.package,</span></span><br><span class="line"><span class="comment">//   partnerid: resData.partnerid, // merchant id : 商户号</span></span><br><span class="line"><span class="comment">//   prepayid: resData.prepay_id, // prepay id:微信生成的预支付回话标识，用于后续接口调用中使用，该值有效期为2小时</span></span><br><span class="line"><span class="comment">//   timestamp: resData.timestamp, // timestamp:时间戳 String(10)</span></span><br><span class="line"><span class="comment">//   sign:resData.sign</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">window</span>.Wechat &amp;&amp; <span class="built_in">window</span>.Wechat.sendPaymentRequest(dto, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Success"</span>);</span><br><span class="line">  orderCheck(response.data.object.code);<span class="comment">// 订单校验</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">reason</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// alert("Failed: " + reason);</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Failed:"</span>, reason);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>该sign生成字段名列表见调起支付API<br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12</a></li>
</ul>
<ul>
<li><code>API签名规范</code>(同上)<br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=4_3</a></li>
</ul>
<ul>
<li>依赖API密钥 (同上)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="业务流程">业务流程</h1><p><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_3" target="_blank" rel="external">https://pa]]>
    </summary>
    
      <category term="微信支付" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[QQ支付-cordova qpay]]></title>
    <link href="http://yoursite.com/2016/12/16/QQ%E6%94%AF%E4%BB%98-cordova%20qpay/"/>
    <id>http://yoursite.com/2016/12/16/QQ支付-cordova qpay/</id>
    <published>2016-12-15T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:45.899Z</updated>
    <content type="html"><![CDATA[<h1 id="业务流程">业务流程</h1><p><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=201" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=201</a><br><img src="http://p.qpic.cn/qpaywikipic/0/qpaywikipic_582045e17a9263438/0" alt=""></p>
<h1 id="生成订单">生成订单</h1><ul>
<li><p>参考统一下单接口<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=58" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=58</a></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">xml</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">appid</span>&gt;</span>1111223451<span class="tag">&lt;/<span class="title">appid</span>&gt;</span> <span class="comment">&lt;!-- 应用ID --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span>123<span class="tag">&lt;/<span class="title">body</span>&gt;</span> <span class="comment">&lt;!-- 商品描述  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">device_info</span>&gt;</span>1234567890abc<span class="tag">&lt;/<span class="title">device_info</span>&gt;</span> <span class="comment">&lt;!-- 设备信息 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">limit_pay</span>&gt;</span><span class="tag">&lt;/<span class="title">limit_pay</span>&gt;</span> <span class="comment">&lt;!-- 支付方式限制  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">mch_id</span>&gt;</span>1301278501<span class="tag">&lt;/<span class="title">mch_id</span>&gt;</span> <span class="comment">&lt;!-- 商户ID --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">nonce_str</span>&gt;</span>fecf31a13be2309093db5df934848583<span class="tag">&lt;/<span class="title">nonce_str</span>&gt;</span> <span class="comment">&lt;!-- 随机字符串 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">notify_url</span>&gt;</span>https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi<span class="tag">&lt;/<span class="title">notify_url</span>&gt;</span><span class="comment">&lt;!-- 支付结果通知地址 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">out_trade_no</span>&gt;</span>2016061235213702<span class="tag">&lt;/<span class="title">out_trade_no</span>&gt;</span> <span class="comment">&lt;!-- 商户订单号  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">sign</span>&gt;</span>f0c328d362858713b66feafb802615d8<span class="tag">&lt;/<span class="title">sign</span>&gt;</span><span class="comment">&lt;!-- 统一下单签名 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">spbill_create_ip</span>&gt;</span>10.123.9.102<span class="tag">&lt;/<span class="title">spbill_create_ip</span>&gt;</span> <span class="comment">&lt;!-- 终端ip --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">total_fee</span>&gt;</span>1<span class="tag">&lt;/<span class="title">total_fee</span>&gt;</span> <span class="comment">&lt;!-- 价格  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">trade_type</span>&gt;</span>NATIVE<span class="tag">&lt;/<span class="title">trade_type</span>&gt;</span> <span class="comment">&lt;!-- 支付场景  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">xml</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>签名规范<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=57" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=57</a></p>
</li>
</ul>
<figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">假设传送的参数如下： </span><br><span class="line">appid： d930ea5d5a258f4f </span><br><span class="line">mch_id： <span class="number">10000100</span> </span><br><span class="line">device_info： <span class="number">1000</span> </span><br><span class="line">body： test </span><br><span class="line">nonce_str： ibuaiVcKdpRxkhJA </span><br><span class="line"> </span><br><span class="line">第一步：对参数按照key=value的格式，并按照参数名ASCII字典序排序如下： </span><br><span class="line">stringA=<span class="string">"appid=d930ea5d5a258f4f&amp;body=test&amp;device_info=1000&amp;mch_id=10000100&amp;nonce_str=ibuaiVcKdpRxkhJA"</span>; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二步：拼接API密钥： </span><br><span class="line">stringSignTemp=<span class="string">"stringA&amp;key=192006250b4c09247ec02edce69f6a2d"</span> </span><br><span class="line">sign=MD5(stringSignTemp).<span class="keyword">to</span>UpperCase()=<span class="string">"9A0A8659F005D6984697E2CA0A9CF3B7"</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">最终得到最终发送的数据： </span><br><span class="line"><span class="variable">&lt;xml&gt;</span> </span><br><span class="line"><span class="variable">&lt;appid&gt;</span>d930ea5d5a258f4f<span class="variable">&lt;/appid&gt;</span> </span><br><span class="line"><span class="variable">&lt;mch_id&gt;</span><span class="number">10000100</span><span class="variable">&lt;/mch_id&gt;</span> </span><br><span class="line"><span class="variable">&lt;device_info&gt;</span><span class="number">1000</span><span class="variable">&lt;device_info&gt;</span> </span><br><span class="line"><span class="variable">&lt;body&gt;</span>test<span class="variable">&lt;/body&gt;</span> </span><br><span class="line"><span class="variable">&lt;nonce_str&gt;</span>ibuaiVcKdpRxkhJA<span class="variable">&lt;/nonce_str&gt;</span></span><br><span class="line"><span class="variable">&lt;sign&gt;</span><span class="number">9</span>A0A8659F005D6984697E2CA0A9CF3B7<span class="variable">&lt;/sign&gt;</span> </span><br><span class="line"><span class="variable">&lt;xml&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>API密钥<br><a href="https://qpay.qq.com/account/api_cert.shtml" target="_blank" rel="external">https://qpay.qq.com/account/api_cert.shtml</a><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-12-23/82075208-file_1482463058867_b57.png" alt=""></li>
</ul>
<h1 id="调起支付">调起支付</h1><ul>
<li>android<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165</a></li>
</ul>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）初始化PayApi，并将数据填写完整：</span><br><span class="line">PayApi api = <span class="literal">new</span> PayApi();</span><br><span class="line">api<span class="built_in">.</span>appId = APP_ID; <span class="comment">// 在http://open.qq.com注册的AppId,参与支付签名，签名关键字key为appId       </span></span><br><span class="line">api<span class="built_in">.</span>serialNumber = <span class="attribute">...</span>; <span class="comment">// 支付序号,用于标识此次支付</span></span><br><span class="line">api<span class="built_in">.</span>callbackScheme = <span class="attribute">...</span>; <span class="comment">// QQ钱包支付结果回调给urlscheme为callbackScheme的activity.，参看后续的“支付回调结果处理” </span></span><br><span class="line">api<span class="built_in">.</span>tokenId = <span class="attribute">...</span>; <span class="comment">// QQ钱包支付生成的token_id</span></span><br><span class="line">api<span class="built_in">.</span>pubAcc = <span class="attribute">...</span>; <span class="comment">// 手Q公众帐号id.参与支付签名，签名关键字key为pubAcc</span></span><br><span class="line">api<span class="built_in">.</span>pubAccHint = <span class="attribute">...</span>; <span class="comment">// 支付完成页面，展示给用户的提示语：提醒关注公众帐号</span></span><br><span class="line">api<span class="built_in">.</span>nonce = <span class="attribute">...</span>; <span class="comment">// 随机字段串，每次支付时都要不一样.参与支付签名，签名关键字key为nonce</span></span><br><span class="line">api<span class="built_in">.</span>timeStamp = <span class="attribute">...</span>; <span class="comment">// 时间戳，为1970年1月1日00:00到请求发起时间的秒数</span></span><br><span class="line">api<span class="built_in">.</span>bargainorId = <span class="attribute">...</span>; <span class="comment">// 商户号.参与支付签名，签名关键字key为bargainorId</span></span><br><span class="line">api<span class="built_in">.</span>sig = <span class="attribute">...</span>; <span class="comment">// 商户Server下发的数字签名，生成的签名串，参看“数字签名”</span></span><br><span class="line">api<span class="built_in">.</span>sigType = <span class="string">"HMAC-SHA1"</span>; <span class="comment">// 签名时，使用的加密方式，默认为"HMAC-SHA1"</span></span><br><span class="line"> </span><br><span class="line">（<span class="number">2</span>）在启动QQ钱包支付前，判断一下数据是否完整，再启动QQ钱包支付：</span><br><span class="line"><span class="keyword">if</span> (api<span class="built_in">.</span>checkParams()) &#123;</span><br><span class="line">     openApi<span class="built_in">.</span>execApi(api);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>cordova plugin：com.wosai.qpay</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">QPay.mqqPay(&#123;</span><br><span class="line">  tokenId: <span class="string">'1V39f4eaf286fe3718731871b4fe96dc'</span>,<span class="comment">// 订单号</span></span><br><span class="line">  nonce: <span class="string">''</span>,<span class="comment">// 随机数</span></span><br><span class="line">  bargainorId: <span class="string">'1424912901'</span>,<span class="comment">// 商户号</span></span><br><span class="line">  appKey: <span class="string">'CuWbc7F0XrTpnHBa'</span>,<span class="comment">// appkey</span></span><br><span class="line">  sig: <span class="string">''</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"res:"</span> + res)</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">  alert(<span class="string">"error:"</span> + res)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>APP调用QQ钱包支付-签名规范<br><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165" target="_blank" rel="external">https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=165</a></p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">数字签名</span><br><span class="line"> </span><br><span class="line">为了保障商户利益与安全，商户App调用QQ钱包支付时启用另一套签名机制。该签名机制与“商户后台与QQ钱包支付后台的签名机制”是不同的。</span><br><span class="line"> </span><br><span class="line"><span class="number">1</span>、源串构造方法</span><br><span class="line">（<span class="number">1</span>）将需要参与签名的所有参数按key进行字典升序排列。</span><br><span class="line">（<span class="number">2</span>）将第<span class="number">1</span>步中排序后的参数(key=value)用&amp;拼接起来；</span><br><span class="line">（<span class="number">3</span>）key中存在大小写字母，保持大小写字母的存在。不要将key进行统一转换为大写或小写操作；</span><br><span class="line">（<span class="number">4</span>）如果value为空, 生成格式为“key=”，这点与后台之间签名方法是不一样的；</span><br><span class="line">（<span class="number">5</span>）签名原始串中，字段名和字段值都采用原始值，不进行URL Encode。</span><br><span class="line"> </span><br><span class="line">举例：</span><br><span class="line">调用某个接口，接口有如下字段：</span><br><span class="line">appId、nonce、tokenId、pubAcc、bargainorId</span><br><span class="line"> </span><br><span class="line">实际调用接口时，各字段的值：</span><br><span class="line">appId=<span class="number">100619284</span>、nonce=ksjfwierwfjk、tokenId=<span class="number">1000000002</span>、pubAcc=、bargainorId=<span class="number">1900000109</span></span><br><span class="line"> </span><br><span class="line">正确的签名原始串是：</span><br><span class="line">appId=<span class="number">100619284</span>&amp;bargainorId=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;pubAcc=&amp;tokenId=<span class="number">1000000002</span></span><br><span class="line"> </span><br><span class="line">常见的错误有：</span><br><span class="line">appId=<span class="number">100619284</span>&amp;bargainorId=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;tokenId=<span class="number">1000000002</span></span><br><span class="line">appid=<span class="number">100619284</span>&amp;bargainorid=<span class="number">1900000109</span>&amp;nonce=ksjfwierwfjk&amp;pubacc=&amp;tokenid=<span class="number">1000000002</span></span><br><span class="line">appId=<span class="number">100619284</span>&amp;nonce=ksjfwierwfjk&amp;tokenId=<span class="number">1000000002</span>&amp;pubAcc=&amp;bargainorId=<span class="number">1900000109</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>、 密钥构造方法</span><br><span class="line">（<span class="number">1</span>）在http:<span class="comment">//open.qq.com申请appId，并获得appKey；</span></span><br><span class="line">（<span class="number">2</span>）构造到密钥的方式：在应用的appkey末尾加上一个字符的“&amp;”，即appkey&amp;。</span><br><span class="line"> </span><br><span class="line">示例：</span><br><span class="line">appkey 值为 d139ae6fb0175e5659dce2a7c1fe84d5</span><br><span class="line">正确的密钥为：d139ae6fb0175e5659dce2a7c1fe84d5&amp;</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>、 生成签名值方法</span><br><span class="line">（<span class="number">1</span>）使用HMAC-SHA1加密算法，使用”密钥构造方法“中得到的密钥对“源串构造方法”中得到的源串进行加密（注：一般程序语言中会内置HMAC-SHA1加密算法的函数，例如PHP5<span class="number">.1</span><span class="number">.2</span>之后的版本可直接调用hash_hmac函数）；</span><br><span class="line">（<span class="number">2</span>）然后将加密后的字符串进行Base64编码（注：一般程序语言中会内置Base64编码函数，例如PHP中可直接调用 base64_encode() 函数）；</span><br><span class="line">（<span class="number">3</span>）最后得到的签名值sig结果如下：</span><br><span class="line">c6xXw0tNABhOMc869h1bfxTp9Mk=</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="业务流程">业务流程</h1><p><a href="https://qpay.qq.com/qpaywiki/showdocument.php?pid=38&amp;docid=201" target="_blank" rel="external">https:]]>
    </summary>
    
      <category term="cordova qpay" scheme="http://yoursite.com/tags/cordova-qpay/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[新一代包管理工具yarn]]></title>
    <link href="http://yoursite.com/2016/12/15/%E6%96%B0%E4%B8%80%E4%BB%A3%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7yarn/"/>
    <id>http://yoursite.com/2016/12/15/新一代包管理工具yarn/</id>
    <published>2016-12-14T16:00:00.000Z</published>
    <updated>2017-01-19T10:09:45.887Z</updated>
    <content type="html"><![CDATA[<p><code>Yarn vs npm：你需要知道的一切</code><br><a href="https://zhuanlan.zhihu.com/p/23493436?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/23493436?utm_source=tuicool&amp;utm_medium=referral</a></p>
<p><code>新一代包管理工具yarn</code><br><a href="http://imweb.io/topic/581f6c0bf2e7e042172d618a?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://imweb.io/topic/581f6c0bf2e7e042172d618a?utm_source=tuicool&amp;utm_medium=referral</a></p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="operator"><span class="keyword">install</span> === yarn / yarn <span class="keyword">install</span></span><br><span class="line">npm <span class="keyword">install</span> xxx —<span class="keyword">save</span> === yarn <span class="keyword">add</span> xxx</span><br><span class="line">npm <span class="keyword">uninstall</span> xxx —<span class="keyword">save</span> === yarn remove xxx</span><br><span class="line">npm <span class="keyword">install</span> xxx —<span class="keyword">save</span>-dev === yarn <span class="keyword">add</span> xxx —dev</span><br><span class="line">npm <span class="keyword">update</span> === yarn <span class="keyword">upgrade</span></span><br><span class="line">npm <span class="keyword">install</span> xxx -<span class="keyword">g</span> === yarn <span class="keyword">global</span> <span class="keyword">add</span> xxx</span></span><br></pre></td></tr></table></figure>
<hr>
<ul>
<li>新的包管理工具,主打是速度和依赖管理(可靠性)</li>
</ul>
<ul>
<li>同样有淘宝的仓库:<figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn config <span class="keyword">set</span> <span class="keyword">registry</span> <span class="string">" https://registry.npm.taobao.org"</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>我刚在 专家库项目上试了下,删除node_modules再用yarn可以装回去</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>Yarn vs npm：你需要知道的一切</code><br><a href="https://zhuanlan.zhihu.com/p/23493436?utm_source=tuicool&amp;utm_medium=referral" target="_]]>
    </summary>
    
      <category term="yarn" scheme="http://yoursite.com/tags/yarn/"/>
    
  </entry>
  
</feed>
