<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[编程在继续]]></title>
  <subtitle><![CDATA[编程在继续，刘祥's blog]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-09-24T06:34:12.504Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[刘祥@赛学霸]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[emoji表情mysql支持]]></title>
    <link href="http://yoursite.com/2016/09/22/emoji%E8%A1%A8%E6%83%85mysql%E6%94%AF%E6%8C%81/"/>
    <id>http://yoursite.com/2016/09/22/emoji表情mysql支持/</id>
    <published>2016-09-21T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.504Z</updated>
    <content type="html"><![CDATA[<h1 id="异常_：mysql_Incorrect_string_value_\xF0\x9F\x98\x84\xF0\x9F">异常 ：mysql Incorrect string value \xF0\x9F\x98\x84\xF0\x9F</h1><p>尝试插入 类似 这样的string（其实是emoji表情），这些uft8 占位过多，数据库如果用标准utf8 格式插入不了这样的字符串</p>
<ul>
<li>解决<br>使用uft8mb4 格式<br>(1)设置表格式为utf8mb4<br>(2)设置连接格式为utf8mb4</li>
</ul>
<p><a href="http://blog.csdn.net/taitoubiyan1/article/details/50595407" target="_blank" rel="external">http://blog.csdn.net/taitoubiyan1/article/details/50595407</a></p>
<p><code>mysql - java.sql.SQLException: Incorrect string value: &#39;\xF0\x9F\x91\xBD\xF0\x9F...&#39; - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/13653712/java-sql-sqlexception-incorrect-string-value-xf0-x9f-x91-xbd-xf0-x9f" target="_blank" rel="external">http://stackoverflow.com/questions/13653712/java-sql-sqlexception-incorrect-string-value-xf0-x9f-x91-xbd-xf0-x9f</a></p>
<p><code>【emoji表情】阿里云数据库RDS支持emoji表情 - 推酷</code>  ★ ★ ★<br><a href="http://www.tuicool.com/articles/2qYbQ3I" target="_blank" rel="external">http://www.tuicool.com/articles/2qYbQ3I</a></p>
<p><code>搜索 - 推酷 : mysql emoji</code><br><a href="http://www.tuicool.com/search?kw=mysql+emoji&amp;t=1" target="_blank" rel="external">http://www.tuicool.com/search?kw=mysql+emoji&amp;t=1</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="异常_：mysql_Incorrect_string_value_\xF0\x9F\x98\x84\xF0\x9F">异常 ：mysql Incorrect string value \xF0\x9F\x98\x84\xF0\x9F</h1><p>尝试插入 类似 ]]>
    </summary>
    
      <category term="emoji" scheme="http://yoursite.com/tags/emoji/"/>
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[web网络劫持,被嵌入广告]]></title>
    <link href="http://yoursite.com/2016/09/20/web%E7%BD%91%E7%BB%9C%E5%8A%AB%E6%8C%81-%E8%A2%AB%E5%B5%8C%E5%85%A5%E5%B9%BF%E5%91%8A/"/>
    <id>http://yoursite.com/2016/09/20/web网络劫持-被嵌入广告/</id>
    <published>2016-09-19T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.499Z</updated>
    <content type="html"><![CDATA[<h1 id="常见源头:">常见源头:</h1><p>1.是不是我们项目中的第三方jar非官方版本，被植入了一些广告代码   (★)<br>2.dns劫持  (★★★)<br>3.http劫持 (★★★★)</p>
<h1 id="排查:">排查:</h1><p>检查DNS,替换安全DNS观察广告是否存在<br>启用使用https服务,观察广告是否存在</p>
<h1 id="防护办法:">防护办法:</h1><blockquote>
<p>替换安全DNS<br>使用https服务<br>nginx出口网络过滤<br>使用第三方官方工具<br>ios/android webView过滤<br>前端页面javaScript主动防御</p>
</blockquote>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/55107594.jpg" alt=""><br><!-- --></p>
<p><code>让那些烦人的广告，滚出我们的APP！ - 吴焱的博客 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/wy1002003/article/details/51783623" target="_blank" rel="external">http://blog.csdn.net/wy1002003/article/details/51783623</a></p>
<p><code>联通宽带劫持网页，JS 弹窗广告，该如何解决？ - 知乎</code><br><a href="https://www.zhihu.com/question/23197534" target="_blank" rel="external">https://www.zhihu.com/question/23197534</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="常见源头:">常见源头:</h1><p>1.是不是我们项目中的第三方jar非官方版本，被植入了一些广告代码   (★)<br>2.dns劫持  (★★★)<br>3.http劫持 (★★★★)</p>
<h1 id="排查:">排查:</h1><p>检查DNS,替]]>
    </summary>
    
      <category term="广告" scheme="http://yoursite.com/tags/%E5%B9%BF%E5%91%8A/"/>
    
      <category term="网络劫持" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[javaScript 模块进化]]></title>
    <link href="http://yoursite.com/2016/09/16/javaScript%20%E6%A8%A1%E5%9D%97%E8%BF%9B%E5%8C%96/"/>
    <id>http://yoursite.com/2016/09/16/javaScript 模块进化/</id>
    <published>2016-09-15T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.481Z</updated>
    <content type="html"><![CDATA[<h1 id="最初的美好">最初的美好</h1><ul>
<li><p>污染全局变量</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bar</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">log</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>减少了全局变量</p>
</li>
<li>暴露所有的模块成员，内部状态可以被外部读写</li>
</ul>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    bar: <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="built_in">log</span>: <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line">myMoudle.bar();</span><br></pre></td></tr></table></figure>
<ul>
<li>匿名闭包的写法（Immediately-Invoked Function Expression，IIFE）<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myModule = (<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _log = <span class="string">"hello world"</span>;</span><br><span class="line">    <span class="keyword">var</span> log = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(_log);</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        log: log</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line">myModule.log();<span class="comment">//hello world</span></span><br><span class="line">myModule._log;<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li><p>引入依赖关系</p>
<figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">var myModule = (<span class="function"><span class="keyword">function</span><span class="params">($)</span>&#123;</span></span><br><span class="line">    var $<span class="built_in">log</span> = $('.<span class="built_in">log</span>');</span><br><span class="line">    var <span class="built_in">log</span> = <span class="function"><span class="keyword">function</span><span class="params">()</span>&#123;</span></span><br><span class="line">        console.<span class="built_in">log</span>($<span class="built_in">log</span>);</span><br><span class="line">    &#125;;</span><br><span class="line"> </span><br><span class="line">    return &#123;</span><br><span class="line">        <span class="built_in">log</span>: <span class="built_in">log</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)(jQuery);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//引用</span></span><br><span class="line">myModule.<span class="built_in">log</span>();</span><br></pre></td></tr></table></figure>
</li>
<li><p>依赖管理</p>
</li>
<li>没有引入一个依赖的 js 文件而导致后面 js 的功能失效. | 请求过多 ，不利于性能优化<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"dialog.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"tooltip.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"toast.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="handlebars"><span class="xml"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"handlebar.js"</span>&gt;</span><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="undefined"></span><br><span class="line">......</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="CommonJS规范、AMD规范、CMD规范">CommonJS规范、AMD规范、CMD规范</h1><h2 id="CommonJS(代表作:_Browserify_)">CommonJS(代表作: Browserify )</h2><ul>
<li>服务器端的模块化的规范，是 Nood.js 在实践中推出的，Nood.js 也是首先采用 js 模块化的；</li>
<li>exports 定义模块</li>
<li>require 加载模块<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//math.js</span></span><br><span class="line">exports.add = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> c = a + b;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//index.js</span></span><br><span class="line"><span class="keyword">var</span> add = <span class="built_in">require</span>(<span class="string">'math'</span>).add;<span class="comment">//</span></span><br><span class="line"><span class="built_in">console</span>.log(add(<span class="number">1</span>,<span class="number">1</span>));<span class="comment">//2</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="ADM(代表作:RequireJS_)">ADM(代表作:RequireJS )</h2><ul>
<li>Asynchronous Module Definition，即异步的模块定义，是浏览器端的模块化规范，是 RequireJS 在推广过程中对模块定义的规范化产出</li>
</ul>
<ul>
<li>define 定义模块(同时定义依赖),模块名为文件名<ul>
<li><code>JavaScript模块化－require.js，r.js和打包发布 - 简书</code> <a href="http://www.jianshu.com/p/7186e5f2f341" target="_blank" rel="external">http://www.jianshu.com/p/7186e5f2f341</a><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">define</span>(<span class="title">id</span>?, dependencies?, factory);</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define(<span class="string">'myModule'</span>,[<span class="string">'jQuery'</span>,<span class="string">'types/Employee'</span>],<span class="function"><span class="keyword">function</span><span class="params">($,Employee)</span></span>&#123;<span class="comment">//定义模块myModule，引入依赖jQuery，types/Employee</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">Programmer</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//do something</span></span><br><span class="line">        &#125;;</span><br><span class="line">        Programmer.prototype = <span class="keyword">new</span> Employee();</span><br><span class="line">        <span class="keyword">return</span> Programmer;  <span class="comment">//return Constructor</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h2 id="CMD(代表作:SeaJS_)">CMD(代表作:SeaJS )</h2><ul>
<li>Common Module Definition，即通用模块定义，是浏览器端的模块化规范，是 SeaJS 在推广过程中对模块定义的规范化产出</li>
</ul>
<ul>
<li>seajs.use模块载入<ul>
<li>seajs.use(‘./a’),require(‘a’), require.asyc(‘./a.js’)</li>
<li><code>Seajs模块载入方法 - 简书</code> <a href="http://www.jianshu.com/p/2de0d5b24c8c" target="_blank" rel="external">http://www.jianshu.com/p/2de0d5b24c8c</a></li>
</ul>
</li>
<li>define 定义模块(require提取依赖模块),模块名为文件名<ul>
<li><code>seajs模块加载机制 - 简书</code> <a href="http://www.jianshu.com/p/1245af09383e" target="_blank" rel="external">http://www.jianshu.com/p/1245af09383e</a><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">define</span>(<span class="title">factory</span>)</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//CMD recommanded</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span>(<span class="params">require, exports, module</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="built_in">require</span>(<span class="string">'a'</span>);</span><br><span class="line">  a.doSomething();</span><br><span class="line">  <span class="keyword">var</span> b = <span class="built_in">require</span>(<span class="string">'b'</span>);</span><br><span class="line">  b.doSomething();    <span class="comment">// 依赖就近，延迟执行</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//AMD recommanded</span></span><br><span class="line">define([<span class="string">'a'</span>, <span class="string">'b'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>)</span>&#123;</span><br><span class="line">    a.doSomething();    <span class="comment">// 依赖前置，提前执行</span></span><br><span class="line">    b.doSomething();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="RequireJS模块化及r-js指南">RequireJS模块化及r.js指南</h1><ul>
<li><p>在 html 中指定了 RrequireJS 第一次需要加载的模块，也就是通过 data-main 所指定</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"src/js/app/index"</span> <span class="attribute">src</span>=<span class="value">"src/js/lib/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>index.js</p>
<figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="symbol">'src</span>/js',</span><br><span class="line">  paths: &#123;</span><br><span class="line">    jquery: <span class="symbol">'lib</span>/jquery',</span><br><span class="line">    backTop: <span class="symbol">'com</span>/backTop',</span><br><span class="line">    jumpTo: <span class="symbol">'com</span>/jumpTo',</span><br><span class="line">    carousel: <span class="symbol">'com</span>/carousel',</span><br><span class="line">    exposure: <span class="symbol">'com</span>/exposure',</span><br><span class="line">    navfloor: <span class="symbol">'com</span>/navfloor',</span><br><span class="line">    waterfall: <span class="symbol">'com</span>/waterfall'</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>其中 baseUrl 是改变基准路径，所有的模块相对于 baseUrl 来加载； baseUrl 路径以 index.html 所在的目录为基准；</p>
</li>
<li>其中 requirejs.config() 函数的 paths 属性指定各个模块的加载路径(相对于 baseUrl )，如果没有指定 baseUrl ，路径默认和主模块在同一目录;</li>
</ul>
<p>采用了 RequireJS 模块化写法解决了命名冲突和依赖管理的问题，同时也增加了文件数量，这也意味着请求的增多，无疑会带来性能问题；</p>
<ul>
<li><p>打包（优化）工具 r.js ,它可以实现前端文件的压缩与合并,减少服务器请求</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(&#123;</span><br><span class="line">    baseUrl: <span class="string">"./src/js"</span>,</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="variable">'jquery</span><span class="variable">':</span> <span class="variable">'lib/bower_components/jquery/dist/jquery.min</span>'</span><br><span class="line">    &#125;,</span><br><span class="line">    name: <span class="string">"main"</span>,</span><br><span class="line">    out: <span class="string">"dist/js/merge.js"</span></span><br><span class="line">&#125;)</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>baseUrl 路径设置应与主模块中 require.config() 方法里的 baseUrl 实际路径一致</p>
</li>
<li>nam 指定的是解析入口，这里写了主模块，路径相对于前面指定的 baseUrl </li>
</ul>
<hr>
<p><code>前端模块化之旅（一）：因何生它 - 推酷</code><br><a href="http://www.tuicool.com/articles/z2AFRfF" target="_blank" rel="external">http://www.tuicool.com/articles/z2AFRfF</a></p>
<p><code>Javascript模块化编程（一）：模块的写法 - 阮一峰的网络日志</code><br><a href="http://www.ruanyifeng.com/blog/2012/10/javascript_module.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2012/10/javascript_module.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="最初的美好">最初的美好</h1><ul>
<li><p>污染全局变量</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line"]]>
    </summary>
    
      <category term="模块化" scheme="http://yoursite.com/tags/%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[aat(async auto test 异步自动化测试) 介绍&模块化实践]]></title>
    <link href="http://yoursite.com/2016/09/16/aat(async%20auto%20test%20%E5%BC%82%E6%AD%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95)%20%E4%BB%8B%E7%BB%8D&%E6%A8%A1%E5%9D%97%E5%8C%96%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2016/09/16/aat(async auto test 异步自动化测试) 介绍&模块化实践/</id>
    <published>2016-09-15T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.491Z</updated>
    <content type="html"><![CDATA[<h1 id="关键描述">关键描述</h1><ul>
<li>async 步执行函数,目的:页面同步刷新(柯里化)</li>
<li>sycFuncPromise 返回Promise的方法,处理连续的异步func调用.(可完全替代async)</li>
<li>currying 柯里化,单行定义函数且执行函数<figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_Each</span><span class="params">(index, length)</span> &#123;</span></span><br><span class="line">  sycFuncPromise(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">  &#125;)()</span><br><span class="line">    .<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">      <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">        el(<span class="string">'.bookname_content&gt;.bookname'</span>, index).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">        ++index &lt; <span class="built_in">length</span> &amp;&amp; _Each(index, <span class="built_in">length</span>);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">      &#125;)()</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="keyword">then</span>(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">      <span class="comment">// ...</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line">_Each(<span class="number">0</span>, $(<span class="string">'.bookname_content&gt;.bookname'</span>).<span class="built_in">length</span>);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">currying<span class="list">(<span class="keyword">function</span> _Each<span class="list">(<span class="keyword">index</span>, length)</span> &#123;</span><br><span class="line"> </span><br><span class="line">  sycFuncPromise<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">    el<span class="list">('.nav-bar-title.ng-binding')</span>.triggerHandler<span class="list">(<span class="quoted">'click</span>')</span><span class="comment">;</span></span><br><span class="line">  &#125;)</span><span class="list">()</span></span><br><span class="line">    .then<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">      return sycFuncPromise<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">        el<span class="list">('.bookname_content&gt;.bookname', index)</span>.triggerHandler<span class="list">(<span class="quoted">'click</span>')</span><span class="comment">;</span></span><br><span class="line">        ++index &lt; length <span class="keyword">&amp;&amp;</span> _Each<span class="list">(<span class="keyword">index</span>, length)</span><span class="comment">;// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">      &#125;)</span><span class="list">()</span></span><br><span class="line">    &#125;)</span></span><br><span class="line">    .then<span class="list">(<span class="keyword">function</span> <span class="list">()</span> &#123;</span><br><span class="line">      // ...</span><br><span class="line">    &#125;)</span></span><br><span class="line"> </span><br><span class="line">&#125;)</span><span class="list">(<span class="number">0</span>, $<span class="list">('.bookname_content&gt;.bookname')</span>.length)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>el 简化选择器(支持angular选择器,jquery,querySelector)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 简化选择器</span><br><span class="line">* @param selector</span><br><span class="line">* @param index</span><br><span class="line">* @returns &#123;*&#125;</span><br><span class="line">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">el</span>(<span class="params">selector, index</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> index = <span class="built_in">arguments</span>.length &lt;= <span class="number">1</span> || <span class="built_in">arguments</span>[<span class="number">1</span>] === <span class="literal">undefined</span> ? <span class="number">0</span> : <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">window</span>.angular ? angular.element(<span class="built_in">document</span>.querySelectorAll(selector)[index]) : $(selector);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">exports.el = el;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="使用">使用</h1><h2 id="方式一">方式一</h2><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/core.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/task.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>core.aat.js (直接引用情况下会exports会使用window)</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.xxx = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line">或者,直接使用<span class="built_in">window</span>进行赋值.</span><br></pre></td></tr></table></figure>
<ul>
<li>task.aat.js   (直接引用情况下会exports会使用window)<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br><span class="line"><span class="comment">// ---</span></span><br><span class="line">或者,直接使用<span class="built_in">window</span>进行赋值.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="方式二">方式二</h2><hr>
<h1 id="require-js_模块化方式">require.js 模块化方式</h1><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"js/index"</span> <span class="attribute">src</span>=<span class="value">"lib/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span><span class="comment">&lt;!--  模块化入口 --&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>js/index.js 配置初始化</p>
</li>
<li><p>requirejs([‘aat_core’, ‘aat’], function (aat_core, task) 对象初始化 <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="string">''</span>,</span><br><span class="line">  paths: &#123;</span><br><span class="line">    aat_core: <span class="string">'autoTest/core.aat'</span>,</span><br><span class="line">    aat: <span class="string">'autoTest/task.aat'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Start the main app</span></span><br><span class="line">requirejs([<span class="string">'aat_core'</span>, <span class="string">'aat'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">aat_core,  aat </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( aat );<span class="comment">// 初始化验证</span></span><br><span class="line">  <span class="built_in">window</span>.aat =  aat ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>core.aat.js (模块化引用情况下会exports会使用 AMD )</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  exports.xxx = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</li>
<li><p>task.aat.js   ( 模块化 引用情况下会exports会使用 AMD )</p>
<blockquote>
<p>require(‘aat_core’) 注意需要 requirejs.config初始化<code>aat_core</code>且 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;], function (aat_core,  aat )</code>完成初始化</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> core = (<span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span>) ? <span class="built_in">require</span>(<span class="string">'aat_core'</span>) : exports;</span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<hr>
<h1 id="使用时初始化(使用文件名)">使用时初始化(使用文件名)</h1><p>例: <code>task.aat.js</code>  </p>
<blockquote>
<p>define(function (require, exports, module) {  require(‘path/filename’);  })</p>
</blockquote>
<ul>
<li>js/index.js 配置初始化</li>
<li><p>requirejs([‘aat’], function ( aat ) 对象初始化(仅初始化主函数) <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="string">''</span>,</span><br><span class="line">  paths: &#123;</span><br><span class="line">    aat: <span class="string">'autoTest/task.aat'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Start the main app</span></span><br><span class="line">requirejs([<span class="string">'aat'</span>], <span class="function"><span class="keyword">function</span> (<span class="params"> aat </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( aat );<span class="comment">// 初始化验证</span></span><br><span class="line">  <span class="built_in">window</span>.aat =  aat ;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
</li>
<li><p>task.aat.js   ( 模块化 引用情况下会exports会使用 AMD )</p>
<blockquote>
<p>require(‘ autoTest/aat_core’ ‘) 可不需要 requirejs.config初始化<code>aat_core</code>及 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;], function (aat_core,  aat )</code></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define(factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory(<span class="literal">null</span>,(global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params"> require, exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> core = <span class="built_in">require</span>(<span class="string">'autoTest/aat_core'</span>)</span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  exports.sss = <span class="string">''</span>;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</blockquote>
</li>
<li><p>简易参考</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这里按照commonjs的形式让requirejs自己去搜一遍，再引入third.js</span></span><br><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params">require, exports, module</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> third =<span class="built_in">require</span>(<span class="string">'third'</span>);</span><br><span class="line">    third();</span><br><span class="line">    <span class="built_in">module</span>.exports.action = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="number">22</span>)&#125;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="可能遇到问题_&amp;_处理办法">可能遇到问题 &amp; 处理办法</h1><h2 id="启动异常:Uncaught_Error:_Mismatched_anonymous_define()_module:_function">启动异常:Uncaught Error: Mismatched anonymous define() module: function</h2><h3 id="问题原因">问题原因</h3><p>引入<code>require.js</code>后,所有的<code>define()</code>定义模块都应该使用<code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;],</code>初始化,不应该<script>直接引入</p>
<ul>
<li>分析:<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">引用的requirejs跟引用的其他js引起了冲突,其他js中也定义的<span class="keyword">define</span>这个变量.</span><br><span class="line">比如你引用了这样的<span class="title">js</span>:</span><br><span class="line">&lt;script src=<span class="string">"services/require.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=<span class="string">"services/Utility.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">出现了Mismatched anonymous <span class="keyword">define</span>() <span class="title">module</span>这种错误.那么意味着Utility.js中也定义了<span class="keyword">define</span>这样的变量.所以在使用中你只引用<span class="title">require</span>.js</span><br><span class="line">然后 require([<span class="string">'Utility'</span>],function()&#123;&#125;) 使用Utility.js 就不会出现错误了.</span><br><span class="line">该错误归根结底就是 <span class="keyword">define</span>已经被定义了.或者在之后的<span class="title">js</span>中被重写了.</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>Mismatched anonymous define() module:这个怎么解决requirejs中的_百度知道</code><br><a href="http://zhidao.baidu.com/link?url=g9Lh6tofr3U7-nPUDqbqk6ifHxLH8PLwkDQ039biy3bhwwCGRyfDkonLaDUFMgoDj-UyiajnmSjO0MvtcCjdjXKvTlNOoMDMk_YpGlyODi7">http://zhidao.baidu.com/link?url=g9Lh6tofr3U7-nPUDqbqk6ifHxLH8PLwkDQ039biy3bhwwCGRyfDkonLaDUFMgoDj-UyiajnmSjO0MvtcCjdjXKvTlNOoMDMk_YpGlyODi7</a></p>
<h3 id="处理办法">处理办法</h3><p>方法一: 调整<code>&lt;script src=&quot;require.js&quot;&gt;&lt;/script&gt;</code>引入时机</p>
<p>方法二: 依据规范,通过 <code>requirejs([&#39;aat_core&#39;, &#39;aat&#39;],</code>初始化<br><code>javascript - Uncaught Error: Mismatched anonymous define() module: function definition(name, global) - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/23796019/uncaught-error-mismatched-anonymous-define-module-function-definitionname">http://stackoverflow.com/questions/23796019/uncaught-error-mismatched-anonymous-define-module-function-definitionname</a></p>
<p>方法三: 修改<code>&lt;Script&gt;</code>引入方法<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="keyword">var</span> ace = <span class="built_in">require</span>(<span class="string">"./path/to/ace"</span>);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><code>javascript - loading Ace causes Uncaught Error: Mismatched anonymous define() module: - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/23224341/loading-ace-causes-uncaught-error-mismatched-anonymous-define-module">http://stackoverflow.com/questions/23224341/loading-ace-causes-uncaught-error-mismatched-anonymous-define-module</a></p>
<hr>
<h2 id="启动异常:Uncaught_Error:_Module_name_“aatcore”_has_not_been_loaded_yet_for_context:_-_Use_require([])">启动异常:Uncaught Error: Module name “aat<em>core” has not been loaded yet for context: </em>. Use require([])</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">require.<span class="string">js:</span><span class="number">168</span> Uncaught <span class="string">Error:</span> Module name <span class="string">"aat_core"</span> has not been loaded yet <span class="keyword">for</span> <span class="string">context:</span> _. Use require([])</span><br><span class="line"><span class="string">http:</span><span class="comment">//requirejs.org/docs/errors.html#notloadedmakeError</span></span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">168</span>localRequire</span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">1433</span>requirejs</span><br><span class="line">     @ require.<span class="string">js:</span><span class="number">1794</span>(anonymous function)</span><br><span class="line">    @ task.aat.<span class="string">js:</span><span class="number">18</span>execCb</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1693</span>check</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">881</span>enable</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1173</span>init</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">786</span>callGetModule</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1200</span>completeLoad</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1587</span>onScriptLoad</span><br><span class="line">    @ require.<span class="string">js:</span><span class="number">1714</span></span><br><span class="line">ng_http.factory.<span class="string">js:</span><span class="number">276</span> <span class="string">response:</span> <span class="number">34</span> <span class="number">0.397</span>s 查询成功 Object &#123;<span class="string">object:</span> Object&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>问题原因</li>
</ul>
<p>偶现：资源的异步加载，当使用了未初始化的对象时异常<br>依赖：未明确依赖，需要维护依赖关系</p>
<ul>
<li>解决办法<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>,<span class="string">'aat_core'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> core = (<span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span>) ? <span class="built_in">require</span>(<span class="string">'aat_core'</span>) : exports;</span><br><span class="line">  <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line"> </span><br><span class="line">&#125;)))</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>理解和解决requireJS的报错:MODULE NAME HAS NOT BEEN LOADED YET FOR CONTEXT</code><br><a href="http://blog.csdn.net/aitangyong/article/details/40708025">http://blog.csdn.net/aitangyong/article/details/40708025</a></p>
<p><code>javascript - Dynamic require in RequireJS, getting &quot;Module name has not been loaded yet for context&quot; error? - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/17446844/dynamic-require-in-requirejs-getting-module-name-has-not-been-loaded-yet-for-c">http://stackoverflow.com/questions/17446844/dynamic-require-in-requirejs-getting-module-name-has-not-been-loaded-yet-for-c</a></p>
<hr>
<h1 id="类似技术,开源技术">类似技术,开源技术</h1><p><code>搭建基于Karma和Jasmine的前端单元测试 - 简书</code><br>www.jianshu.com/p/a7ffb564734e</p>
<p>更多:<code>简书-搜索: karma</code><br><a href="http://www.jianshu.com/search?q=karma&amp;page=1&amp;type=notes">http://www.jianshu.com/search?q=karma&amp;page=1&amp;type=notes</a></p>
<p><code>webpro/Automated-SPA-Testing: Automated unit &amp; functional testing for web applications</code><br><a href="https://github.com/webpro/Automated-SPA-Testing">https://github.com/webpro/Automated-SPA-Testing</a></p>
</script></p>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="关键描述">关键描述</h1><ul>
<li>async 步执行函数,目的:页面同步刷新(柯里化)</li>
<li>sycFuncPromise 返回Promise的方法,处理连续的异步func调用.(可完全替代async)</li>
<li>currying]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ES6 模块化]]></title>
    <link href="http://yoursite.com/2016/09/15/ES6%20%E6%A8%A1%E5%9D%97%E5%8C%96/"/>
    <id>http://yoursite.com/2016/09/15/ES6 模块化/</id>
    <published>2016-09-14T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.474Z</updated>
    <content type="html"><![CDATA[<p>示例:  <a href="https://github.com/tildeio/rsvp.js" target="_blank" rel="external">https://github.com/tildeio/rsvp.js</a></p>
<ul>
<li>ES6编写</li>
<li>支持 CommonJS, AMD模块化规范<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.RSVP = global.RSVP || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="ES6的模块化的基本规则或特点">ES6的模块化的基本规则或特点</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="comment">//导出常量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> sqrt = <span class="built_in">Math</span>.sqrt;</span><br><span class="line"><span class="comment">//导出函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">square</span>(<span class="params">x</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//导出函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">diag</span>(<span class="params">x, y</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqrt(square(x) + square(y));</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; square, diag &#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(square(<span class="number">11</span>)); <span class="comment">// 121</span></span><br><span class="line"><span class="built_in">console</span>.log(diag(<span class="number">4</span>, <span class="number">3</span>)); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure>
<h1 id="import和export的基本语法">import和export的基本语法</h1><ul>
<li><p>export{} 导出方式</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js 文件</span></span><br><span class="line"><span class="keyword">let</span> bar = <span class="string">"stringBar"</span>;</span><br><span class="line"><span class="keyword">let</span> foo = <span class="string">"stringFoo"</span>;</span><br><span class="line"><span class="keyword">let</span> fn0 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn0"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> fn1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn1"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">export</span>&#123; bar , foo, fn0, fn1&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;bar,foo, fn0, fn1&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(bar+<span class="string">"_"</span>+foo);</span><br><span class="line">fn0();</span><br><span class="line">fn1();</span><br></pre></td></tr></table></figure>
</li>
<li><p>export{} 导出方式 + 别名</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js文件</span></span><br><span class="line"><span class="keyword">let</span> fn0 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"fn0"</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">let</span> obj0 = &#123;&#125;</span><br><span class="line"><span class="keyword">export</span> &#123; fn0 <span class="keyword">as</span> foo, obj0 <span class="keyword">as</span> bar&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, bar&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line">foo();</span><br><span class="line"><span class="built_in">console</span>.log(bar);</span><br></pre></td></tr></table></figure>
</li>
<li><p>单行导出</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js文件</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> foo = ()=&gt; &#123;<span class="built_in">console</span>.log(<span class="string">"fnFoo"</span>) ;<span class="keyword">return</span> <span class="string">"foo"</span>&#125;,bar = <span class="string">"stringBar"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js文件</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, bar&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(foo());</span><br><span class="line"><span class="built_in">console</span>.log(bar);</span><br></pre></td></tr></table></figure>
</li>
<li><p>default匿名导出</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="string">"string"</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> defaultString <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(defaultString);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">let</span> fn = () =&gt; <span class="string">"string"</span>;</span><br><span class="line"><span class="keyword">export</span> &#123;fn <span class="keyword">as</span> <span class="keyword">default</span>&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> defaultFn <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(defaultFn());</span><br></pre></td></tr></table></figure>
<ul>
<li>通配符导出所有<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> * from <span class="string">"./other"</span>;</span><br><span class="line"><span class="comment">//如果只想导出部分接口， 只要把接口名字列出来</span></span><br><span class="line"><span class="comment">//export &#123;foo,fnFoo&#125; from "./other";</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//other.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> foo = <span class="string">"stringFoo"</span>, fnFoo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;<span class="built_in">console</span>.log(<span class="string">"fnFoo"</span>)&#125;;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123;foo, fnFoo&#125; <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(foo);</span><br><span class="line"><span class="built_in">console</span>.log(fnFoo());</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> obj <span class="keyword">from</span> <span class="string">"./lib"</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj);</span><br></pre></td></tr></table></figure>
<h1 id="ES6导入的模块都是属于引用">ES6导入的模块都是属于引用</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lib.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> counter = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">incCounter</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    counter++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="function"><span class="keyword">function</span> <span class="title">setCounter</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">    counter = value;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment">//main.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; counter, incCounter ,setCounter&#125; <span class="keyword">from</span> <span class="string">'./lib'</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">// The imported value `counter` is live</span></span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 3</span></span><br><span class="line">incCounter();</span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 4</span></span><br><span class="line">setCounter(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">console</span>.log(counter); <span class="comment">// 0</span></span><br></pre></td></tr></table></figure>
<h1 id="循环依赖的问题">循环依赖的问题</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">//index.html</span><br><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"cyclic"</span> <span class="attribute">src</span>=<span class="value">"//cdn.bootcss.com/require.js/2.2.0/require.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"><span class="comment">//cyclic.js</span></span><br><span class="line"><span class="built_in">require</span>([<span class="string">"file0"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file0</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file0)</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//file0.js</span></span><br><span class="line">define([<span class="string">"file1"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file1</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file1)</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        file0 : <span class="string">"file0"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"> </span><br><span class="line"><span class="comment">//file1.js</span></span><br><span class="line">define([<span class="string">"file0"</span>], <span class="function"><span class="keyword">function</span>(<span class="params">file0</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(file0);</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        file1 : <span class="string">"file1"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">undefined</span></span><br><span class="line"><span class="built_in">Object</span> &#123; file1: <span class="string">"file1"</span> &#125;</span><br><span class="line"><span class="built_in">Object</span> &#123; file0: <span class="string">"file0"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>在执行file1.js的时候file0.js还没执行完， 所以输出了undefined， 这种输出结果和NodeJS输出的情况是一样的；</p>
<hr>
<p><code>ES6新特性：使用export和import实现模块化 - 方方和圆圆 - 博客园</code><br><a href="http://www.cnblogs.com/diligenceday/p/5503777.htm" target="_blank" rel="external">http://www.cnblogs.com/diligenceday/p/5503777.htm</a> l</p>
<ul>
<li>ES6的模块化的基本规则或特点：</li>
<li>下面列出几种import和export的基本语法：</li>
<li>ES6导入的模块都是属于引用：</li>
<li>循环依赖的问题：</li>
<li>浏览器兼容：</li>
<li>参考：</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>示例:  <a href="https://github.com/tildeio/rsvp.js" target="_blank" rel="external">https://github.com/tildeio/rsvp.js</a></p>
<ul>
<li>ES6编]]>
    </summary>
    
      <category term="ES6" scheme="http://yoursite.com/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic Icon and Splash Screen Image Generation完整收集]]></title>
    <link href="http://yoursite.com/2016/09/14/ionic%20Icon%20and%20Splash%20Screen%20Image%20Generation%E5%AE%8C%E6%95%B4%E6%94%B6%E9%9B%86/"/>
    <id>http://yoursite.com/2016/09/14/ionic Icon and Splash Screen Image Generation完整收集/</id>
    <published>2016-09-13T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.466Z</updated>
    <content type="html"><![CDATA[<h1 id="ionic_Icon_and_Splash_Screen_Image_Generation官方说明">ionic Icon and Splash Screen Image Generation官方说明</h1><ul>
<li><p>使用命令（支持png、psd和ai，尺寸越大越好）</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ionic resources --icon</span><br><span class="line"><span class="variable">$ </span>ionic resources --splash</span><br><span class="line"><span class="variable">$ </span>ionic resources</span><br><span class="line"><span class="variable">$ </span>ionic resources ios</span><br><span class="line"><span class="variable">$ </span>ionic resources --default</span><br><span class="line"><span class="variable">$ </span>ionic resources --default --force</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用PSD模板</p>
<ul>
<li><p><a href="http://code.ionicframework.com/resources/splash.psd" target="_blank" rel="external">Photoshop Splash Screen Template</a></p>
</li>
<li><p><a href="http://code.ionicframework.com/resources/icon.psd" target="_blank" rel="external">Photoshop Icon Template</a></p>
</li>
</ul>
</li>
</ul>
<p><a href="https://github.com/driftyco/ionic-cli#icon-and-splash-screen-image-generation" target="_blank" rel="external">https://github.com/driftyco/ionic-cli#icon-and-splash-screen-image-generation</a></p>
<p><code>介绍 博客</code><br><a href="http://blog.ionic.io/automating-icons-and-splash-screens/" target="_blank" rel="external">http://blog.ionic.io/automating-icons-and-splash-screens/</a></p>
<p><code>自定义图标 Customize Icons</code><br><a href="http://cordova.apache.org/docs/en/dev/config_ref/images.html#Icons%20and%20Splash%20Screens_" target="_blank" rel="external">http://cordova.apache.org/docs/en/dev/config_ref/images.html#Icons%20and%20Splash%20Screens_</a></p>
<hr>
<h1 id="在线生成工具">在线生成工具</h1><p><code>图标工场 - 移动应用图标生成工具，一键生成所有尺寸的应用图标</code>  ★ ★<br><a href="http://icon.wuruihong.com/" target="_blank" rel="external">http://icon.wuruihong.com/</a></p>
<p><code>在线批量生成各种尺寸iOS、Android APP图表集合 - aTool在线工具</code><br><a href="http://www.atool.org/ios_logo.php" target="_blank" rel="external">http://www.atool.org/ios_logo.php</a></p>
<hr>
<h1 id="开源工具">开源工具</h1><p><code>cordova-icon-splash-generator</code><br><a href="https://github.com/collingreen/cordova-icon-splash-generator" target="_blank" rel="external">https://github.com/collingreen/cordova-icon-splash-generator</a></p>
<p><code>busterc/cordova-resource-generators</code> - liunx,mac <code>35star</code><br><a href="https://github.com/busterc/cordova-resource-generators" target="_blank" rel="external">https://github.com/busterc/cordova-resource-generators</a></p>
<p><code>gulp-cordova-resources</code><br><a href="https://github.com/david-alexander/gulp-cordova-resources" target="_blank" rel="external">https://github.com/david-alexander/gulp-cordova-resources</a></p>
<p><code>cordova-ionic-maven-archetype | cordova-icon-splash 生成器</code> ★<br><a href="https://github.com/zhoujianhui/cordova-ionic-maven-archetype/blob/52d5186c785d1d27d06336916a2056c6c15d4980/test-cordova-ionic-maven-archetype/icon-splash/README.md" target="_blank" rel="external">https://github.com/zhoujianhui/cordova-ionic-maven-archetype/blob/52d5186c785d1d27d06336916a2056c6c15d4980/test-cordova-ionic-maven-archetype/icon-splash/README.md</a></p>
<p><code>cordova-splash</code>  <code>207star</code>  ★<br><a href="https://github.com/AlexDisler/cordova-splash" target="_blank" rel="external">https://github.com/AlexDisler/cordova-splash</a></p>
<p><code>AlexDisler/cordova-icon</code> 404star  ★ ★</p>
<p><a href="https://github.com/AlexDisler/cordova-icon" target="_blank" rel="external">https://github.com/AlexDisler/cordova-icon</a><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cordova-<span class="attribute">icon</span> --config=config<span class="class">.xml</span> --<span class="attribute">icon</span>= resources/ <span class="attribute">icon</span>.png</span><br></pre></td></tr></table></figure></p>
<p><code>AlexDisler/cordova-splash</code> 207star  ★ ★<br><a href="https://github.com/AlexDisler/cordova-splash" target="_blank" rel="external">https://github.com/AlexDisler/cordova-splash</a></p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">cordova</span><span class="literal">-</span><span class="comment">splash</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">config=config</span><span class="string">.</span><span class="comment">xml</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">splash=resources/splash</span><span class="string">.</span><span class="comment">png</span></span><br></pre></td></tr></table></figure>
<p>(生成后直接应用于platform中,需要手动取出.按规格存放resources)</p>
<p><code>Icon-Splash-Resize</code><br><a href="https://github.com/dericeira/Icon-Splash-Resize" target="_blank" rel="external">https://github.com/dericeira/Icon-Splash-Resize</a></p>
<p><code>github搜索:cordova splash 生成</code><br><a href="https://github.com/search?utf8=%E2%9C%93&amp;q=cordova+splash+%E7%94%9F%E6%88%90&amp;type=Code&amp;ref=searchresults" target="_blank" rel="external">https://github.com/search?utf8=%E2%9C%93&amp;q=cordova+splash+%E7%94%9F%E6%88%90&amp;type=Code&amp;ref=searchresults</a></p>
<hr>
<p><code>ionic框架iOS所需icon与splash规格（命名与尺寸）</code><br><a href="http://blog.leanote.com/freemem" target="_blank" rel="external">http://blog.leanote.com/freemem</a></p>
<p><code>App各种Icon及Launch image的尺寸和用途 移动端尺寸基础知识</code></p>
<p><a href="https://my.oschina.net/u/2252309/blog/402724" target="_blank" rel="external">https://my.oschina.net/u/2252309/blog/402724</a></p>
<hr>
<h1 id="文章介绍">文章介绍</h1><p><code>Cordova 3.x 基础（2） -- 应用图标icon和启动页面SplashScreen - Fish Where The Fish Are - ITeye技术网站</code><br><a href="http://rensanning.iteye.com/blog/2017380" target="_blank" rel="external">http://rensanning.iteye.com/blog/2017380</a><br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">如果你本地安装了ImageMagick，<span class="keyword">CLI</span>还会自动调用ImageMagick来做成不同尺寸的图像。</span><br><span class="line">需要注意的是：</span><br><span class="line">（<span class="number">1</span>）图像的路径是相对于工程根目录不是根据www</span><br><span class="line">（<span class="number">2</span>）不要和PhoneGap <span class="keyword">CLI</span>的设置混淆</span><br></pre></td></tr></table></figure></p>
<p><code>Ionic Framework的一些命令行解释 - 推酷</code><br><a href="http://www.tuicool.com/articles/FFfiquu" target="_blank" rel="external">http://www.tuicool.com/articles/FFfiquu</a></p>
<p><code>【Ionic】图标-名称-启动画修改_百度经验</code><br><a href="http://jingyan.baidu.com/article/fdffd1f85ee24ef3e88ca164.html" target="_blank" rel="external">http://jingyan.baidu.com/article/fdffd1f85ee24ef3e88ca164.html</a></p>
<p><code>【Ionic】App应用名字+应用图标+启动画的修改_百度经验</code><br><a href="http://jingyan.baidu.com/article/c35dbcb0ec59438916fcbcaf.html" target="_blank" rel="external">http://jingyan.baidu.com/article/c35dbcb0ec59438916fcbcaf.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="ionic_Icon_and_Splash_Screen_Image_Generation官方说明">ionic Icon and Splash Screen Image Generation官方说明</h1><ul>
<li><p>使用命令（支持png、psd和]]>
    </summary>
    
      <category term="ionic" scheme="http://yoursite.com/tags/ionic/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[aat(async auto test 异步自动化测试) 引用&源码]]></title>
    <link href="http://yoursite.com/2016/09/13/aat(async%20auto%20test%20%E5%BC%82%E6%AD%A5%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95)%20%E5%BC%95%E7%94%A8&%E6%BA%90%E7%A0%81/"/>
    <id>http://yoursite.com/2016/09/13/aat(async auto test 异步自动化测试) 引用&源码/</id>
    <published>2016-09-12T16:00:02.000Z</published>
    <updated>2016-09-24T06:34:12.459Z</updated>
    <content type="html"><![CDATA[<h1 id="引用">引用</h1><h3 id="方式一">方式一</h3><ul>
<li>index.html<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/core.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"autoTest/task.aat.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="方式二">方式二</h3><h1 id="require-js_模块化方式">require.js 模块化方式</h1><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">data-main</span>=<span class="value">"js/index"</span> <span class="attribute">src</span>=<span class="value">"lib/require.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span><span class="comment">&lt;!--  模块化入口 --&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>js/index.js 配置初始化</p>
</li>
<li>requirejs([‘aat_core’, ‘aat’], function (aat_core, task) 对象初始化<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">requirejs.config(&#123;</span><br><span class="line">  baseUrl: <span class="string">''</span>,</span><br><span class="line">  paths: &#123;</span><br><span class="line">    aat_core: <span class="string">'autoTest/core.aat'</span>,</span><br><span class="line">    aat: <span class="string">'autoTest/task.aat'</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Start the main app</span></span><br><span class="line">requirejs([<span class="string">'aat_core'</span>, <span class="string">'aat'</span>], <span class="function"><span class="keyword">function</span> (<span class="params">aat_core, aat</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(aat);<span class="comment">// 初始化验证</span></span><br><span class="line">  <span class="built_in">window</span>.aat = aat;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>更具体见<code>autoTest/README.md</code></p>
</blockquote>
<hr>
<h1 id="源码">源码</h1><ul>
<li><p>core.aat.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* Created by Administrator on 2016/9/13 0013.</span><br><span class="line">*/</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 返回Promise的方法,处理连续的异步func调用</span><br><span class="line">   * @param func</span><br><span class="line">   * @returns &#123;Function&#125;</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sycFuncPromise</span>(<span class="params">func, time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> _arguments = <span class="built_in">arguments</span>;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123; <span class="comment">// promise方式</span></span><br><span class="line">        <span class="keyword">async</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">          func(_arguments);</span><br><span class="line">          resolve();<span class="comment">// 执行完毕,推送成功</span></span><br><span class="line">        &#125;, time)();</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 柯里化</span><br><span class="line">   * @param func</span><br><span class="line">   * @returns &#123;Function&#125;</span><br><span class="line">   * @private</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">currying</span>(<span class="params">func</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _arguments = <span class="built_in">arguments</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="comment">// return func.call(this, ...arguments, ..._arguments);</span></span><br><span class="line">      <span class="keyword">return</span> func.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>, _arguments);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 异步执行函数,目的:页面同步刷新(柯里化)</span><br><span class="line">   * 经过调试,在angular应用中700ms比较合适(原因是路由间动画需要时间)</span><br><span class="line">   * @param func</span><br><span class="line">   * @param time</span><br><span class="line">   * @returns &#123;Function&#125;</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">async</span>(<span class="params">func, time</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> time = <span class="built_in">arguments</span>.length &lt;= <span class="number">1</span> || <span class="built_in">arguments</span>[<span class="number">1</span>] === <span class="literal">undefined</span> ? <span class="number">700</span> : <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> _arguments = <span class="built_in">arguments</span>;</span><br><span class="line">      setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// return func.call(this, ..._arguments);</span></span><br><span class="line">        <span class="keyword">return</span> func.apply(<span class="keyword">this</span>, _arguments);</span><br><span class="line">      &#125;, time)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/** 出口 */</span></span><br><span class="line">  <span class="comment">// global.aat = &#123;</span></span><br><span class="line">  <span class="comment">//   sycFuncPromise: sycFuncPromise, // 返回Promise的方法,处理连续的异步func调用</span></span><br><span class="line">  <span class="comment">//   async: async,                   // 异步执行函数</span></span><br><span class="line">  <span class="comment">//   currying: currying              // 柯里化</span></span><br><span class="line">  <span class="comment">// &#125;;</span></span><br><span class="line"> </span><br><span class="line">  exports.sycFuncPromise = sycFuncPromise;</span><br><span class="line">  exports.async = <span class="keyword">async</span>;</span><br><span class="line">  exports.currying = currying;</span><br><span class="line">  <span class="comment">/*******************************************************/</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 简化选择器</span><br><span class="line">   * @param selector</span><br><span class="line">   * @param index</span><br><span class="line">   * @returns &#123;*&#125;</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">el</span>(<span class="params">selector, index</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> index = <span class="built_in">arguments</span>.length &lt;= <span class="number">1</span> || <span class="built_in">arguments</span>[<span class="number">1</span>] === <span class="literal">undefined</span> ? <span class="number">0</span> : <span class="built_in">arguments</span>[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">typeof</span> angular === <span class="string">'object'</span></span><br><span class="line">      ? angular.element(<span class="built_in">document</span>.querySelectorAll(selector)[index])</span><br><span class="line">      : (<span class="built_in">window</span>.jQuery ? $(selector) : <span class="built_in">document</span>.querySelectorAll(selector)[index]);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  exports.el = el;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/*******************************************************/</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 同步睡眠,如:sleep(3000);</span><br><span class="line">   * @param delay</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">delay</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() &lt; start + delay);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 强行重绘</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">refresh</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 对面板强行重绘</span></span><br><span class="line">    $(<span class="string">"ion-content"</span>).css(<span class="string">'display'</span>, <span class="string">'none'</span>);</span><br><span class="line">    <span class="built_in">document</span>.body.offsetWidth;<span class="comment">// 在样式变化间加入计算,可强制提交之前的样式变化。否则浏览器会进行事务优化，事务前后无变化的不再重绘</span></span><br><span class="line">    $(<span class="string">"ion-content"</span>).css(<span class="string">'display'</span>, <span class="string">''</span>);</span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">&#125;)));</span><br></pre></td></tr></table></figure>
</li>
<li><p>task.aat.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* Created by Administrator on 2016/9/15 0015.</span><br><span class="line">*/</span></span><br><span class="line"> </span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global, factory</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">typeof</span> exports === <span class="string">'object'</span> &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">module</span> !== <span class="string">'undefined'</span> ? factory(exports) :<span class="comment">// CommonJS</span></span><br><span class="line">    <span class="keyword">typeof</span> define === <span class="string">'function'</span> &amp;&amp; define.amd ? define([<span class="string">'exports'</span>, <span class="string">'aat_core'</span>], factory) : <span class="comment">// AMD</span></span><br><span class="line">      (factory((global.aat = global.aat || &#123;&#125;))); <span class="comment">// window</span></span><br><span class="line">&#125;(<span class="keyword">this</span>, (<span class="function"><span class="keyword">function</span> (<span class="params">exports</span>) </span>&#123;</span><br><span class="line"><span class="pi">  'use strict'</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/** 引入模块接口(待规范模块化) */</span></span><br><span class="line">    <span class="comment">// var sycFuncPromise = global.aat.sycFuncPromise;</span></span><br><span class="line">    <span class="comment">// var async = global.aat.async;</span></span><br><span class="line">    <span class="comment">// var currying = global.aat.currying;</span></span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> core = (<span class="keyword">typeof</span> <span class="built_in">require</span> === <span class="string">'function'</span>) ? <span class="built_in">require</span>(<span class="string">'aat_core'</span>) : exports;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/** 引入模块接口(规范模块化,兼容AMD) */</span></span><br><span class="line">  <span class="keyword">var</span> sycFuncPromise = core.sycFuncPromise;</span><br><span class="line">  <span class="keyword">var</span> <span class="keyword">async</span> = core.async;</span><br><span class="line">  <span class="keyword">var</span> currying = core.currying;</span><br><span class="line">  <span class="keyword">var</span> el = core.el;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/*********************************************************************/</span></span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> task = &#123;</span><br><span class="line">      chioseBook: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!$(<span class="string">'.choice-content'</span>).hasClass(<span class="string">'ng-hide'</span>)) &#123;</span><br><span class="line">          <span class="keyword">async</span>(<span class="function"><span class="keyword">function</span> (<span class="params">prom</span>) </span>&#123;</span><br><span class="line">            el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>)</span><br><span class="line">          &#125;)()</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">          sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">          &#125;)()</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                el(<span class="string">'.bookname_content&gt;.bookname'</span>, index).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">                ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">              &#125;)()</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// ...</span></span><br><span class="line">            &#125;)</span><br><span class="line"> </span><br><span class="line">        &#125;)(<span class="number">0</span>, $(<span class="string">'.bookname_content&gt;.bookname'</span>).length);</span><br><span class="line"> </span><br><span class="line">      &#125;,</span><br><span class="line">      openChapter: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">        currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">          sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> selector = <span class="string">'.sections'</span>;</span><br><span class="line">            <span class="keyword">var</span> event = &#123;type: <span class="string">'click'</span>, currentTarget: <span class="built_in">document</span>.querySelectorAll(selector)[index]&#125;;</span><br><span class="line">            el(selector, index).triggerHandler(event);<span class="comment">// 打开章节</span></span><br><span class="line">          &#125;)()</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">'.back-button'</span>).click();<span class="comment">// 返回</span></span><br><span class="line">                ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">              &#125;)()</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// ...</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(<span class="number">0</span>, $(<span class="string">'.sections'</span>).length);</span><br><span class="line"> </span><br><span class="line">      &#125;,</span><br><span class="line">      practice: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">            sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">var</span> selector = <span class="string">'.sections'</span>;</span><br><span class="line">              <span class="keyword">var</span> event = &#123;type: <span class="string">'click'</span>, currentTarget: <span class="built_in">document</span>.querySelectorAll(selector)[index]&#125;;</span><br><span class="line">              el(selector, index).triggerHandler(event);<span class="comment">// 打开章节</span></span><br><span class="line">            &#125;)()</span><br><span class="line">              .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">                  sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    el(<span class="string">'.practice_inlet'</span>).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 打开练习</span></span><br><span class="line"> </span><br><span class="line">                    <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">                      currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">                        sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                          el(<span class="string">'.option'</span>, ~~(<span class="built_in">Math</span>.random() * <span class="number">4</span>)).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 打开1</span></span><br><span class="line">                          ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">                          index &gt;= length &amp;&amp; resolve();<span class="comment">// 执行完毕,通知下一步环境</span></span><br><span class="line">                        &#125;)()</span><br><span class="line">                      &#125;)(<span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">                    &#125;).then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                      sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $(<span class="string">'.back-button'</span>).click();<span class="comment">// 返回</span></span><br><span class="line">                        resolve();</span><br><span class="line">                      &#125;)();</span><br><span class="line">                    &#125;)</span><br><span class="line">                  &#125;)()</span><br><span class="line">                &#125;)</span><br><span class="line">              &#125;)</span><br><span class="line">              .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                  $(<span class="string">'.back-button'</span>).click();<span class="comment">// 返回</span></span><br><span class="line">                  ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">                &#125;)()</span><br><span class="line">              &#125;)</span><br><span class="line">              .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">// ...</span></span><br><span class="line">              &#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        )(<span class="number">0</span>, $(<span class="string">'.sections'</span>).length);</span><br><span class="line">      &#125;,</span><br><span class="line">      openExp_sign: <span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">        currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">          sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            el(<span class="string">'.pointItem'</span>, index).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 打开知识点(实验)</span></span><br><span class="line">          &#125;)()</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                el(<span class="string">'.closeExp'</span>).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 关闭实验</span></span><br><span class="line">                <span class="comment">// 此次error: Blocked a frame with origin "http://localhost:3342" from accessing a cross-origin frame.</span></span><br><span class="line">                ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">                <span class="comment">//index &gt;= length &amp;&amp; resolve();// 执行完毕,通知下一步环境</span></span><br><span class="line">              &#125;, <span class="number">8000</span>)();<span class="comment">// 时间放大为3s</span></span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">//...</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(<span class="number">0</span>, $(<span class="string">'.pointItem'</span>).length);</span><br><span class="line">      &#125;</span><br><span class="line">      ,</span><br><span class="line">      openExp: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">          sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> selector = <span class="string">'.sections'</span>;</span><br><span class="line">            <span class="keyword">var</span> event = &#123;type: <span class="string">'click'</span>, currentTarget: <span class="built_in">document</span>.querySelectorAll(selector)[index]&#125;;</span><br><span class="line">            el(selector, index).triggerHandler(event);<span class="comment">// 打开章节</span></span><br><span class="line">          &#125;, <span class="number">1500</span>)()</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">async</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"> </span><br><span class="line">                  currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span>(<span class="params">index, length</span>) </span>&#123;</span><br><span class="line">                    sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                      el(<span class="string">'.pointItem'</span>, index).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 打开知识点(实验)</span></span><br><span class="line">                    &#125;, <span class="number">2000</span>)().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                      <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        el(<span class="string">'.closeExp'</span>).triggerHandler(<span class="string">'click'</span>);<span class="comment">// 关闭实验</span></span><br><span class="line">                        ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">                        index &gt;= length &amp;&amp; resolve();<span class="comment">// 执行完毕,通知下一步环境</span></span><br><span class="line">                      &#125;, <span class="number">8000</span>)();<span class="comment">// 时间放大为3s</span></span><br><span class="line">                    &#125;)</span><br><span class="line"> </span><br><span class="line">                  &#125;)(<span class="number">0</span>, $(<span class="string">'.pointItem'</span>).length);</span><br><span class="line"> </span><br><span class="line">                &#125;, <span class="number">1500</span>)();</span><br><span class="line"> </span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="keyword">return</span> sycFuncPromise(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">'.back-button'</span>).click();<span class="comment">// 返回</span></span><br><span class="line">                ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">              &#125;, <span class="number">1500</span>)()</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">              <span class="comment">// ...</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)(<span class="number">0</span>, $(<span class="string">'.sections'</span>).length);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> taskItems = [</span><br><span class="line">    &#123;name: <span class="string">'切换分册'</span>, action: task.chioseBook&#125;,</span><br><span class="line">    &#123;name: <span class="string">'打开本册章节'</span>, action: task.openChapter&#125;,</span><br><span class="line">    <span class="comment">// &#123;name: '单个章节实验', action: task.openExp_sign&#125;,</span></span><br><span class="line">    &#123;name: <span class="string">'本册所有实验(移动端)'</span>, action: task.openExp&#125;,</span><br><span class="line">    &#123;name: <span class="string">'本册练习'</span>, action: task.practice&#125;</span><br><span class="line">  ];</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 出口</span><br><span class="line">   * aat:Asynchronous Auto Test</span><br><span class="line">   * 异步自动化测试</span><br><span class="line">   */</span></span><br><span class="line"><span class="comment">// global.aat = &#123;</span></span><br><span class="line"><span class="comment">//   init: init,</span></span><br><span class="line"><span class="comment">//   task: task,</span></span><br><span class="line"><span class="comment">//   taskf: taskf</span></span><br><span class="line"><span class="comment">// &#125;;</span></span><br><span class="line"> </span><br><span class="line">  exports.init = init;</span><br><span class="line">  exports.task = task;</span><br><span class="line">  exports.taskItems = taskItems;</span><br><span class="line"> </span><br><span class="line">&#125;)))</span><br><span class="line">;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/** 简易示例 */</span></span><br><span class="line"><span class="comment">// define(function (require, exports, module) &#123;</span></span><br><span class="line"><span class="comment">//   var core = require('autoTest/core');</span></span><br><span class="line"><span class="comment">//   console.log('core', core);</span></span><br><span class="line"><span class="comment">//   module.exports.action = function () &#123;</span></span><br><span class="line"><span class="comment">//     console.log(22)</span></span><br><span class="line"><span class="comment">//   &#125;;</span></span><br><span class="line"><span class="comment">// &#125;);</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="引用">引用</h1><h3 id="方式一">方式一</h3><ul>
<li>index.html<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="lin]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[嵌入式自动化测试-遇到问题，解决问题]]></title>
    <link href="http://yoursite.com/2016/09/13/%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95-%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%EF%BC%8C%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/09/13/嵌入式自动化测试-遇到问题，解决问题/</id>
    <published>2016-09-12T16:00:01.000Z</published>
    <updated>2016-09-24T06:34:12.449Z</updated>
    <content type="html"><![CDATA[<h1 id="睡眠,停顿_[等待页面元素加载完成]">睡眠,停顿 [等待页面元素加载完成]</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">delay</span>)</span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> start = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() &lt; start + delay);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//usage</span></span><br><span class="line"><span class="comment">//wait for 3 seconds</span></span><br><span class="line">sleep(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>
<p><code>webdriver 的三种等待方式 - 风雨的日志 - 网易博客</code><br><a href="http://blog.163.com/yang_jianli/blog/static/16199000620157445841592/" target="_blank" rel="external">http://blog.163.com/yang_jianli/blog/static/16199000620157445841592/</a></p>
<p><code>Appium 三种wait方法（appium 学习之改造轮子） - to be crazy - 博客园</code><br><a href="http://www.cnblogs.com/tobecrazy/p/4596214.html" target="_blank" rel="external">http://www.cnblogs.com/tobecrazy/p/4596214.html</a></p>
<p><code>selenium webdriver（Appium）如何等待页面元素加载完成 - 北极的冰箱 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/jlminghui/article/details/41821533" target="_blank" rel="external">http://blog.csdn.net/jlminghui/article/details/41821533</a></p>
<h1 id="js执行过程中,页面并不同步。_聪明的浏览器">js执行过程中,页面并不同步。 聪明的浏览器</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">因为渲染树的改变导致的重绘或重排操作都可能代价很高，浏览器会对这个改动做很多优化。</span><br><span class="line">一个策略就是不要立即做操作，而是批量进行。比如把你的脚本对DOM的修改放入一个队列，在队列所有操作结束后只需要进行一次绘制即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">浏览器引擎可能会针对重排做了优化。比如Opera，它会等到有足够数量的变化发生，或者等到一定的时间，或者等一个线程结束，再一起处理，这样就只发生一次重排。但除了渲染树的直接变化，当获取一些属性时，浏览器为取得正确的值也会触发重排。这样就使得浏览器的优化失效了。这些属性包括：offsetTop、offsetLeft、 offsetWidth、offsetHeight、scrollTop、scrollLeft、scrollWidth、scrollHeight、clientTop、clientLeft、clientWidth、clientHeight、<span class="function"><span class="title">getComputedStyle</span><span class="params">()</span></span> (currentStyle <span class="keyword">in</span> IE)。所以，在多次使用这些值时应进行缓存。</span><br></pre></td></tr></table></figure>
<ul>
<li><p>解决办法：方法延迟执行</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repeat</span><span class="params">(func, times, wait)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">(str)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; times; i++) &#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">          func(str);</span><br><span class="line">        &#125;, <span class="number">5000</span> * i);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> repeatedFun = repeat(alert, <span class="number">2</span>, <span class="number">5000</span>);</span><br><span class="line">  repeatedFun(<span class="string">"hellworld"</span>);<span class="comment">//会alert十次 helloworld, 每次间隔5秒</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>优化， 使用 setInterval,减少循环控制</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">repeat</span><span class="params">(func, times, wait)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">(str)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> handle_num = <span class="number">0</span>,</span><br><span class="line">        handle =</span><br><span class="line">          setInterval(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">            func(str);</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> (++handle_num &gt;= times) &#123;</span><br><span class="line">              clearInterval(handle);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;, wait);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">var</span> repeatedFun = repeat(alert, <span class="number">2</span>, <span class="number">5000</span>);</span><br><span class="line">  repeatedFun(<span class="string">"hellworld"</span>);<span class="comment">//会alert十次 helloworld, 每次间隔5秒</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li><p>证实:线程执行完之前浏览器不会刷新ui,需要借助异步线程来完成</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">el</span>(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line"><span class="keyword">el</span>(<span class="string">'.bookname_content&gt;.bookname'</span>, <span class="number">1</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> &#123;</span></span><br><span class="line">  <span class="keyword">el</span>(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">  <span class="keyword">el</span>(<span class="string">'.bookname_content&gt;.bookname'</span>, <span class="number">2</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);// 上一步页面更新</span><br></pre></td></tr></table></figure>
</li>
<li><p>循环控制异步调用(存在问题:循环间不能等差时间调用,后文使用递归解决)</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; $(<span class="string">'.bookname_content&gt;.bookname'</span>).length; i++) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'&gt;'</span>, i);</span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params">i</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"ddd"</span>, i);</span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">    el(<span class="string">'.bookname_content&gt;.bookname'</span>, i).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">  &#125;, <span class="number">1000</span> * i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li>批量异步方法执行 + 异步函数执行asyn(含 柯里化 ) +  _forEach递归</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 异步执行函数,目的:页面同步刷新</span><br><span class="line"> * <span class="doctag">@param</span> func</span><br><span class="line"> * <span class="doctag">@param</span> time</span><br><span class="line"> * <span class="doctag">@returns</span> &#123;Function&#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyn</span><span class="params">(func, time = <span class="number">1000</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      func(prom)</span><br><span class="line">    &#125;, time)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">_forEach</span><span class="params">(start, end)</span> </span>&#123;</span><br><span class="line">  asyn(<span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// console.log('dd', prom);</span></span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">    asyn(<span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">      <span class="comment">// console.log('dd2', prom);</span></span><br><span class="line">      el(<span class="string">'.bookname_content&gt;.bookname'</span>, prom).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">       ++index &lt; length &amp;&amp; _Each(index, length);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">    &#125;)(prom);</span><br><span class="line">  &#125;)(start);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">_forEach(<span class="number">0</span>, <span class="number">2</span>);<span class="comment">// 启动</span></span><br></pre></td></tr></table></figure>
<ul>
<li>批量异步方法执行 + 异步函数执行asyn(含 柯里化 )    +  _forEach递归  + _forEach 柯里化</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span><span class="params">(start, end)</span> </span>&#123;</span><br><span class="line">  asyn(<span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    asyn(<span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">      el(<span class="string">'.bookname_content&gt;.bookname'</span>, prom).triggerHandler(<span class="string">'click'</span>);</span><br><span class="line">      <span class="comment">//noinspection JSAnnotator</span></span><br><span class="line">      ++start &lt;= end &amp;&amp; _Each(start, end);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">    &#125;)(prom);</span><br><span class="line">  &#125;)(start);</span><br><span class="line">&#125;)(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 柯里化</span><br><span class="line"> * <span class="doctag">@param</span> func</span><br><span class="line"> * <span class="doctag">@returns</span> &#123;Function&#125;</span><br><span class="line"> * <span class="doctag">@private</span></span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">currying</span><span class="params">(func)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> _arguments = arguments;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> func.call(this, ...arguments, ..._arguments);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 异步执行函数,目的:页面同步刷新(柯里化)</span><br><span class="line"> * <span class="doctag">@param</span> func</span><br><span class="line"> * <span class="doctag">@param</span> time</span><br><span class="line"> * <span class="doctag">@returns</span> &#123;Function&#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">asyn</span><span class="params">(func, time = <span class="number">1000</span>)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> _arguments = arguments;</span><br><span class="line">    setTimeout(<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> func.call(this, ..._arguments);</span><br><span class="line">    &#125;, time)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>批量异步方法执行-方法数组封装(失败:无法连续执行)</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span><span class="params">(start, end)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> func1 = [<span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    el(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>)</span><br><span class="line">  &#125;];</span><br><span class="line">  <span class="keyword">var</span> func2 = [<span class="function"><span class="keyword">function</span> <span class="params">(prom)</span> </span>&#123;</span><br><span class="line">    el(<span class="string">'.bookname_content&gt;.bookname'</span>, prom).triggerHandler(<span class="string">'click'</span>)</span><br><span class="line">  &#125;, start];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  bachSycFunc(func1, func2);</span><br><span class="line">  ++start &lt;= end &amp;&amp; _Each(start, end);<span class="comment">// 递归调用自己,相比for没有了时间计算</span></span><br><span class="line">  <span class="comment">// 问题关键:循环间不能连续</span></span><br><span class="line">&#125;)(<span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 批量异步方法执行</span><br><span class="line"> * <span class="doctag">@param</span> funcs</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bachSycFunc</span><span class="params">(...funcs)</span> </span>&#123;</span><br><span class="line">  currying(<span class="function"><span class="keyword">function</span> <span class="title">_Each</span><span class="params">(_funcs, index)</span> </span>&#123;</span><br><span class="line">    asyn(<span class="function"><span class="keyword">function</span> <span class="params">(_funcs, index)</span> </span>&#123;</span><br><span class="line">      _funcs[index][<span class="number">0</span>](_funcs[index][<span class="number">1</span>]);</span><br><span class="line">      ++index &lt; _funcs.length &amp;&amp; _Each(_funcs, index)</span><br><span class="line">    &#125;)(_funcs, index);</span><br><span class="line">  &#125;)(funcs, <span class="number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>批量异步方法执行 + 异步函数执行asyn(含 柯里化 )    +  _forEach递归 </p>
</li>
<li><ul>
<li>_forEach 柯里化 +  返回Promise 处理连续的func调用  <code>★  (特技加满,完整版)</code><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">// 调用示例</span><br><span class="line">currying(function _Each(index, length) &#123;</span><br><span class="line">  </span><br><span class="line">  sycFuncPromise(function () &#123;</span><br><span class="line">    el('.nav-bar-title.ng-binding').triggerHandler('click');</span><br><span class="line">  &#125;)()</span><br><span class="line">    .then(function () &#123;</span><br><span class="line">      return sycFuncPromise(function () &#123;</span><br><span class="line">        el('.bookname_content&gt;.bookname', index).triggerHandler('click');</span><br><span class="line">        ++index <span class="variable">&lt; length &amp;&amp; _Each(index, length);// 递归调用自己,相比for没有了时间计算</span><br><span class="line">      &#125;)()</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(function () &#123;</span><br><span class="line">      // ...</span><br><span class="line">    &#125;)</span><br><span class="line">  </span><br><span class="line">&#125;)(0, $('.bookname_content&gt;</span>.bookname').length);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/ <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span> <span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span> <span class="keyword">*</span><span class="keyword">*</span>/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> 返回Promise的方法,处理连续的func调用</span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@param func</span></span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@returns &#123;Function&#125;</span></span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">function sycFuncPromise(func) &#123;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var _arguments = arguments;</span><br><span class="line">    return new Promise(function (resolve, reject) &#123; // promise方式</span><br><span class="line">      asyn(function () &#123;</span><br><span class="line">        func(_arguments);</span><br><span class="line">        resolve();</span><br><span class="line">      &#125;)();</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> 柯里化</span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@param func</span></span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@returns &#123;Function&#125;</span></span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@private</span></span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">function currying(func) &#123;</span><br><span class="line">  var _arguments = arguments;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    return func.call(this, ...arguments, ..._arguments);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/<span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line"> <span class="keyword">*</span> 异步执行函数,目的:页面同步刷新(柯里化)</span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@param func</span></span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@param time</span></span><br><span class="line"> <span class="keyword">*</span> <span class="comment">@returns &#123;Function&#125;</span></span><br><span class="line"> <span class="keyword">*</span>/</span><br><span class="line">function asyn(func, time = 1000) &#123;</span><br><span class="line">  return function () &#123;</span><br><span class="line">    var _arguments = arguments;</span><br><span class="line">    setTimeout(function () &#123;</span><br><span class="line">      return func.call(this, ..._arguments);</span><br><span class="line">    &#125;, time)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="睡眠,停顿_[等待页面元素加载完成]">睡眠,停顿 [等待页面元素加载完成]</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[angular ng-click程序触发]]></title>
    <link href="http://yoursite.com/2016/09/13/angular%20ng-click%E7%A8%8B%E5%BA%8F%E8%A7%A6%E5%8F%91/"/>
    <id>http://yoursite.com/2016/09/13/angular ng-click程序触发/</id>
    <published>2016-09-12T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.439Z</updated>
    <content type="html"><![CDATA[<h1 id="angular_ng-click程序触发,方法">angular ng-click程序触发,方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.nav-bar-title.ng-binding'</span>).click();<span class="comment">// no</span></span><br><span class="line">$(<span class="string">'.nav-bar-title.ng-binding'</span>).click();<span class="comment">// no</span></span><br><span class="line">$(<span class="string">'.nav-bar-title.ng-binding'</span>).trigger(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);<span class="comment">// no</span></span><br><span class="line">$(<span class="string">'.nav-bar-title.ng-binding'</span>).triggerHandler(<span class="string">'click'</span>); <span class="comment">// no</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">angular.element( <span class="built_in">document</span>.querySelector(<span class="string">'.nav-bar-title.ng-binding'</span>) ).triggerHandler(<span class="string">'click'</span>);<span class="comment">// ok</span></span><br><span class="line">angular.element($(<span class="string">'.nav-bar-title.ng-binding'</span>)).triggerHandler(<span class="string">'click'</span>);<span class="comment">// ok</span></span><br></pre></td></tr></table></figure>
<h1 id="差异">差异</h1><p>triggerHandler() 方法与 trigger() 方法类似。不同的是它不会触发事件（比如表单提交）的默认行为，而且只影响第一个匹配元素。事件不会在 DOM 树中冒泡</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">bind</span><span class="params">()</span></span>    向元素添加事件处理程序</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">unbind</span><span class="params">()</span></span>    从被选元素上移除添加的事件处理程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">on</span><span class="params">()</span></span>    向元素添加事件处理程序</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">off</span><span class="params">()</span></span>    移除通过 <span class="function"><span class="title">on</span><span class="params">()</span></span> 方法添加的事件处理程序</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">click</span><span class="params">()</span></span>    添加/触发 click 事件</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">trigger</span><span class="params">()</span></span>    触发绑定到被选元素的所有事件</span><br><span class="line"><span class="function"><span class="title">triggerHandler</span><span class="params">()</span></span>    触发绑定到被选元素的指定事件上的所有函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">event.<span class="function"><span class="title">stopPropagation</span><span class="params">()</span></span>    阻止事件向上冒泡到 DOM 树，阻止任何父处理程序被事件通知</span><br></pre></td></tr></table></figure>
<p><a href="http://www.runoob.com/jquery/jquery-ref-events.html" target="_blank" rel="external">http://www.runoob.com/jquery/jquery-ref-events.html</a></p>
<hr>
<h1 id="选择器比较">选择器比较</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">(document.querySelector(<span class="string">'.sections'</span>)</span></span>)</span><br><span class="line">VM8305:<span class="number">1</span> <span class="tag">div</span><span class="class">.sections</span></span><br><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">(document.querySelector(<span class="string">'.sections:nth-child(1)'</span>)</span></span>)</span><br><span class="line">VM8432:<span class="number">1</span> <span class="tag">div</span><span class="class">.sections</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">(document.querySelectorAll(<span class="string">'.sections'</span>)</span></span>)</span><br><span class="line">VM8433:<span class="number">1</span> NodeList[<span class="number">38</span>]</span><br><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">(document.querySelectorAll(<span class="string">'.sections'</span>)</span></span>[<span class="number">1</span>])</span><br><span class="line">VM8434:<span class="number">1</span> <span class="tag">div</span><span class="class">.sections</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">($(<span class="string">'.sections'</span>)</span></span>)</span><br><span class="line">VM8306:<span class="number">1</span> init[<span class="number">38</span>]</span><br><span class="line">console.<span class="function"><span class="title">dir</span><span class="params">($(<span class="string">'.sections)'</span>)</span></span>[<span class="number">0</span>])</span><br><span class="line">VM8428:<span class="number">1</span> <span class="tag">div</span>.sections</span><br></pre></td></tr></table></figure>
<hr>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/86121546.jpg" alt=""><br><!--
--></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="angular_ng-click程序触发,方法">angular ng-click程序触发,方法</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span c]]>
    </summary>
    
      <category term="angular" scheme="http://yoursite.com/tags/angular/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自动化测试Appium]]></title>
    <link href="http://yoursite.com/2016/09/12/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95Appium/"/>
    <id>http://yoursite.com/2016/09/12/自动化测试Appium/</id>
    <published>2016-09-11T16:00:01.000Z</published>
    <updated>2016-09-24T07:20:58.530Z</updated>
    <content type="html"><![CDATA[<h1 id="平台信息">平台信息</h1><p>官网  <a href="http://appium.io/index.html?lang=zh" target="_blank" rel="external">http://appium.io/index.html?lang=zh</a><br>github <a href="https://github.com/appium/appium" target="_blank" rel="external">https://github.com/appium/appium</a></p>
<h1 id="使用">使用</h1><blockquote>
<p>brew install node      # get node.js<br>npm install -g appium  # get appium<br>npm install wd         # get appium client<br>appium &amp;               # start appium<br>node your-appium-test.js</p>
</blockquote>
<h1 id="下载客户端">下载客户端</h1><p><a href="http://appium.io/downloads.html" target="_blank" rel="external">http://appium.io/downloads.html</a><br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/43180156.jpg" alt=""><br><!--
--></p>
<hr>
<h1 id="Appium测试程序范例">Appium测试程序范例</h1><blockquote>
<p>dotnet,java,node,perl,php,python,ruby</p>
</blockquote>
<p><a href="https://github.com/appium/sample-code/tree/master/sample-code/examples" target="_blank" rel="external">https://github.com/appium/sample-code/tree/master/sample-code/examples</a></p>
<h1 id="examples/node/android-webview-js">examples/node/android-webview.js</h1><p><a href="https://github.com/appium/sample-code/blob/master/sample-code/examples/node/android-webview.js" target="_blank" rel="external">https://github.com/appium/sample-code/blob/master/sample-code/examples/node/android-webview.js</a></p>
<hr>
<h1 id="脚本语言API">脚本语言API</h1><p><code>java</code> <code>Java io.appium</code><br><a href="https://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.appium%20a%3Ajava-client" target="_blank" rel="external">https://search.maven.org/#search%7Cga%7C1%7Cg%3Aio.appium%20a%3Ajava-client</a></p>
<p><code>python</code> <code>Appium-Python-Client</code><br><a href="https://pypi.python.org/pypi/Appium-Python-Client" target="_blank" rel="external">https://pypi.python.org/pypi/Appium-Python-Client</a></p>
<p><code>javaScript(node)</code> <code>WebDriver/Selenium 2 node.js client (js脚本API)</code><br><a href="https://www.npmjs.com/package/wd" target="_blank" rel="external">https://www.npmjs.com/package/wd</a></p>
<p>–</p>
<h1 id="示例代码">示例代码</h1><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">#c</span>oding=utf-<span class="number">8</span></span><br><span class="line">from appium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">desired<span class="number">_</span>caps = &#123;&#125;</span><br><span class="line">desired<span class="number">_</span>caps[<span class="string">'platformName'</span>] = <span class="string">'Android'</span></span><br><span class="line">desired<span class="number">_</span>caps[<span class="string">'platformVersion'</span>] = <span class="string">'4.4.2'</span></span><br><span class="line">desired<span class="number">_</span>caps[<span class="string">'deviceName'</span>] = <span class="string">'Android Emulator'</span></span><br><span class="line">desired<span class="number">_</span>caps[<span class="string">'appPackage'</span>] = <span class="string">'com.android.calculator2'</span></span><br><span class="line">desired<span class="number">_</span>caps[<span class="string">'appActivity'</span>] = <span class="string">'.Calculator'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver = webdriver.Remote(<span class="string">'http://localhost:4723/wd/hub'</span>, desired<span class="number">_</span>caps)</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"1"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"5"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"9"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"delete"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"9"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"5"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"+"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"6"</span>).click()</span><br><span class="line">driver.find<span class="number">_</span>element<span class="number">_</span><span class="annotation">by</span><span class="number">_n</span>ame(<span class="string">"="</span>).click()</span><br><span class="line">driver.quit()</span><br></pre></td></tr></table></figure>
<p><code>Appium移动自动化测试（四）--one demo - 推酷</code><br><a href="http://www.tuicool.com/articles/jYBRfiu" target="_blank" rel="external">http://www.tuicool.com/articles/jYBRfiu</a></p>
<hr>
<p><code>android 自动化测试 appium - 推酷</code><br><a href="http://www.tuicool.com/articles/6bAnAb" target="_blank" rel="external">http://www.tuicool.com/articles/6bAnAb</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="平台信息">平台信息</h1><p>官网  <a href="http://appium.io/index.html?lang=zh" target="_blank" rel="external">http://appium.io/index.html?lang=]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自动化测试selenium]]></title>
    <link href="http://yoursite.com/2016/09/12/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95selenium/"/>
    <id>http://yoursite.com/2016/09/12/自动化测试selenium/</id>
    <published>2016-09-11T16:00:00.000Z</published>
    <updated>2016-09-24T07:20:58.519Z</updated>
    <content type="html"><![CDATA[<h1 id="官方">官方</h1><p><code>官网</code><br><a href="http://www.seleniumhq.org/" target="_blank" rel="external">http://www.seleniumhq.org/</a><br><a href="http://www.seleniumhq.org/download/" target="_blank" rel="external">http://www.seleniumhq.org/download/</a></p>
<p><code>github</code><br><a href="https://github.com/SeleniumHQ/selenium" target="_blank" rel="external">https://github.com/SeleniumHQ/selenium</a></p>
<p><code>独立服务器(Selenium Standalone Server)</code><br><a href="http://selenium-release.storage.googleapis.com/3.0-beta3/selenium-server-standalone-3.0.0-beta3.jar" target="_blank" rel="external">http://selenium-release.storage.googleapis.com/3.0-beta3/selenium-server-standalone-3.0.0-beta3.jar</a></p>
<blockquote>
<p>java -jar selenium-server-standalone-2.45.0.jar</p>
</blockquote>
<p><code>Selenium grid for selenium1 and webdriver</code><br><a href="https://github.com/SeleniumHQ/selenium/wiki/Grid2" target="_blank" rel="external">https://github.com/SeleniumHQ/selenium/wiki/Grid2</a></p>
<hr>
<h1 id="开发指导">开发指导</h1><p><code>github示例</code><br><a href="https://github.com/SeleniumHQ/selenium/tree/c10e8a955883f004452cdde18096d70738397788/javascript/node/selenium-webdriver" target="_blank" rel="external">https://github.com/SeleniumHQ/selenium/tree/c10e8a955883f004452cdde18096d70738397788/javascript/node/selenium-webdriver</a></p>
<p><code>javaScript(node) API docs</code><br><a href="http://seleniumhq.github.io/selenium/docs/api/javascript/index.html" target="_blank" rel="external">http://seleniumhq.github.io/selenium/docs/api/javascript/index.html</a></p>
<p><code>javaScript开发指导</code><br><a href="https://www.npmjs.com/package/selenium-webdriver" target="_blank" rel="external">https://www.npmjs.com/package/selenium-webdriver</a></p>
<p><code>基于chromedriver 开发指导</code><br><a href="https://sites.google.com/a/chromium.org/chromedriver/getting-started/getting-started---android" target="_blank" rel="external">https://sites.google.com/a/chromium.org/chromedriver/getting-started/getting-started---android</a></p>
<hr>
<h1 id="准备">准备</h1><ul>
<li><p>安装selenium</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm <span class="keyword">install</span> selenium-webdriver</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载driver<br><a href="http://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="external">http://chromedriver.storage.googleapis.com/index.html</a><br>(已下载,见:<code>bin/chromedriver.exe</code>)</p>
</li>
</ul>
<ul>
<li><p>添加环境变量Path</p>
<figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path=<span class="variable">%path</span><span class="variable">%;</span><span class="variable">%cd</span><span class="variable">%\</span>bin\chromedriver.exe</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装node</p>
</li>
</ul>
<h1 id="使用">使用</h1><ul>
<li><p>行为指定(脚本-js语言) <code>baidu.js</code></p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webdriver = <span class="keyword">require</span>(<span class="string">'selenium-webdriver'</span>),</span><br><span class="line">    <span class="keyword">By</span> = webdriver.<span class="keyword">By</span>,</span><br><span class="line">    <span class="keyword">until</span> = webdriver.<span class="keyword">until</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> driver = <span class="keyword">new</span> webdriver.Builder()</span><br><span class="line">    .forBrowser(<span class="string">'chrome'</span>)</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">driver.get(<span class="string">'https://www.baidu.com'</span>);</span><br><span class="line">driver.findElement(<span class="keyword">By</span>.id(<span class="string">'kw'</span>)).sendKeys(<span class="string">'webdriver'</span>);</span><br><span class="line">driver.findElement(<span class="keyword">By</span>.id(<span class="string">'su'</span>)).click();</span><br><span class="line">driver.wait(<span class="keyword">until</span>.titleIs(<span class="string">'webdriver_百度搜索'</span>), <span class="number">1000</span>);</span><br><span class="line">driver.quit();</span><br></pre></td></tr></table></figure>
</li>
<li><p>执行</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">node</span> <span class="tag">baidu</span><span class="class">.js</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="webdriver通过class获取元素">webdriver通过class获取元素</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">通过webdriver 取得页面元素的时候，有时候由于某些元素只有样式类，没有ID和NAME。这个时候我们就需要通过特别的方式获取该元素了。</span><br><span class="line"><span class="number">1</span>：当元素只有一个样式，比如 class=<span class="string">"style1"</span> ，这个时候可以通过：</span><br><span class="line"><span class="function"><span class="title">find_element_by_class_name</span><span class="params">(<span class="string">"style1"</span>)</span></span>   获取</span><br><span class="line"><span class="number">2</span>：当元素多个样式的时候，比如 class=<span class="string">"style1 style2 style3"</span> ，这个时候可以通过：</span><br><span class="line"> driver.<span class="function"><span class="title">find_element_by_css_selector</span><span class="params">(<span class="string">".style1.style2.style3"</span>)</span></span>   获取</span><br></pre></td></tr></table></figure>
<ul>
<li><p>cssSelector</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">driver<span class="built_in">.</span>findElement(<span class="keyword">By</span><span class="built_in">.</span>className(<span class="string">"current  time"</span>))<span class="built_in">.</span>click();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WebElement element = driver<span class="built_in">.</span>findElement(<span class="keyword">By</span><span class="built_in">.</span>cssSelect<span class="subst">or</span>(<span class="string">"input[class='current time']"</span>));</span><br><span class="line">element<span class="built_in">.</span>click();</span><br></pre></td></tr></table></figure>
</li>
<li><p>xpath</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">WebElement <span class="literal">element</span> = driver.findElement(By.xpath(<span class="string">"//a[@class='current time']"</span>));</span><br><span class="line"><span class="literal">element</span>.click();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WebElement <span class="literal">element</span> = driver.findElement(By.xpath(<span class="string">"//a[text() = 'url']"</span>));</span><br><span class="line"><span class="literal">element</span>.click();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="error_Info">error Info</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">WebDriverError:</span> unknown <span class="string">error:</span> cannot parse <span class="string">capability:</span> chromeOptions</span><br></pre></td></tr></table></figure>
<blockquote>
<p>webdriver版本问题</p>
</blockquote>
<hr>
<p><code>JavaScript（Node.js）+ Selenium自动化测试 - 推酷</code><br><a href="http://www.tuicool.com/articles/ieqiiq3" target="_blank" rel="external">http://www.tuicool.com/articles/ieqiiq3</a></p>
<p><code>Selenium + Python 自动化测试环境搭建 - 推酷</code><br><a href="http://www.tuicool.com/articles/QRrQJzV" target="_blank" rel="external">http://www.tuicool.com/articles/QRrQJzV</a></p>
<p><code>Selenium Webdriver 基于浏览器的自动化测试 - 推酷</code>-java<br><a href="http://www.tuicool.com/articles/amuuEve" target="_blank" rel="external">http://www.tuicool.com/articles/amuuEve</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="官方">官方</h1><p><code>官网</code><br><a href="http://www.seleniumhq.org/" target="_blank" rel="external">http://www.seleniumhq.org/</a><]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自动化测试]]></title>
    <link href="http://yoursite.com/2016/09/07/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2016/09/07/自动化测试/</id>
    <published>2016-09-06T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.419Z</updated>
    <content type="html"><![CDATA[<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Android基于UI层面的自动化测试工具，都可以理解为是基于Android控件层面的，涉及Widgets和WebView两大类。其主流的测试方法主要有以下几种。一种是通过Android提供的各种服务，来获取当前窗口的视图信息。然后，在当前视图内查找目标控件，并根据该控件属性信息计算出该控件中心点的坐标，进而构造出一个Android </span>Input事件来实现对应用的自动化测试。其主要特点是：测试代码和被测应用各自运行在各自的进程内，相互独立。其代表有Uiautomator。另一种则是基于Instrumentation，通过把测试代码和应用代码，确切地说是测试APK和被测APK，运行在同一个进程中，通过Java反射机制，来获取当前窗口所有视图，并根据该视图查找到目标控件的属性信息，并计算出目标控件中心点坐标。然后，利用Instrument内部接口，实现点击操作。其代表有Robotium</span><br></pre></td></tr></table></figure>
<p><code>几种常见的Android自动化测试框架及其应用_星空物语_新浪博客</code><br><a href="http://blog.sina.com.cn/s/blog_44d19b500102v75z.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_44d19b500102v75z.html</a></p>
<p><code>移动APP自动化测试框架对比 - 推酷</code><br><a href="http://www.tuicool.com/articles/Mziemyu" target="_blank" rel="external">http://www.tuicool.com/articles/Mziemyu</a></p>
<p><code>如何进行前端自动化测试？ - 知乎</code><br><a href="https://www.zhihu.com/question/29922082" target="_blank" rel="external">https://www.zhihu.com/question/29922082</a></p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/1580136.jpg" alt=""><br><!--
--></p>
<hr>
<h1 id="android">android</h1><ul>
<li>稳定性测试利器——Monkey★</li>
<li>Monkey之子——MonkeyRunner</li>
</ul>
<p><code>手把手教你Android标准App的四大自动化测试法宝 - 推酷</code><br><a href="http://www.tuicool.com/articles/RBZNzaj" target="_blank" rel="external">http://www.tuicool.com/articles/RBZNzaj</a></p>
<p><code>Android 手机自动化测试工具有哪几种？ - 知乎</code><br><a href="https://www.zhihu.com/question/19716849" target="_blank" rel="external">https://www.zhihu.com/question/19716849</a></p>
<h1 id="Web_UI">Web UI</h1><ul>
<li>★ selenium<ul>
<li>selenium IDE :  selenium IDE 是嵌入到Firefox浏览器中的一个插件( 录制并导出脚本 )</li>
<li>selenium Grid :  Selenium Grid是一种自动化的测试辅助工具</li>
<li>selenium RC :  selenium RC 支持多种不同的语言编写自动化测试脚本</li>
</ul>
</li>
<li>selenium 2.0 = selenium 1.0 + WebDriver </li>
</ul>
<p><code>在做自动化测试之前你需要知道的 - 虫师 - 博客园</code><br><a href="http://www.cnblogs.com/fnng/p/3653793.html" target="_blank" rel="external">http://www.cnblogs.com/fnng/p/3653793.html</a></p>
<p><code>「UI 测试自动化selenium」汇总 - 虫师 - 博客园</code></p>
<p>www.cnblogs.com/fnng/p/3157639.html</p>
<p><code>一个Web自动化测试的简单方法</code>-展示如何通过Selenium IDE测试Web应用程序</p>
<p><a href="http://www.tuicool.com/articles/M7vq2a" target="_blank" rel="external">http://www.tuicool.com/articles/M7vq2a</a></p>
<p><code>海豚-Web UI自动化测试工具</code></p>
<p><a href="http://www.tuicool.com/articles/jA7nauq" target="_blank" rel="external">http://www.tuicool.com/articles/jA7nauq</a></p>
<h1 id="Hybird_App_/_webview">Hybird App / webview</h1><ul>
<li>★appium</li>
</ul>
<p><a href="https://github.com/appium/appium/tree/master/docs/cn" target="_blank" rel="external">https://github.com/appium/appium/tree/master/docs/cn</a></p>
<ul>
<li>Macaca logo自动化测试解决方案 Macaca<blockquote>
<p>支持移动端和PC端<br>支持Native, Hybrid, H5 等多种应用类型<br>提供客户端工具和持续集成服务<br><a href="http://www.oschina.net/p/macaca?fromerr=3mYZucrK" target="_blank" rel="external">http://www.oschina.net/p/macaca?fromerr=3mYZucrK</a></p>
</blockquote>
</li>
</ul>
<ul>
<li>Selendroid<br>基于Instrumentation的测试框架，可以测试Native App、Hybird App、Web App，但是网上资料较少，社区活跃度也不大</li>
</ul>
<ul>
<li>Robotium</li>
</ul>
<hr>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">自动化测试面试题</span><br><span class="line"> </span><br><span class="line"><span class="bullet">1. </span>你比较熟悉那种自动化测试工具？</span><br><span class="line"><span class="bullet">2. </span>你在你以前工作中是如何使用自动化测试工具的？</span><br><span class="line"><span class="bullet">3. </span>介绍一下你在利用自动化测试工具的过程中遇到的一些问题</span><br><span class="line"><span class="bullet">4. </span>你是如何计划自动化测试的？</span><br><span class="line"><span class="bullet">5. </span>自动化测试能提高测试效率吗？</span><br><span class="line"><span class="bullet">6. </span>什么是data-driven automoation(数据启动自动化)？</span><br><span class="line"><span class="bullet">7. </span>测试自动化的主要特征有哪些？</span><br><span class="line"><span class="bullet">8. </span>自动化测试可以代替手工测试吗？</span><br><span class="line">9.自动化测试的好处是什么？</span><br><span class="line"><span class="bullet">10. </span>自动化测试容易出现的误区有哪些？</span><br><span class="line"><span class="bullet">11. </span>介绍一下测试自动化的常见问题？</span><br><span class="line"><span class="bullet">12. </span>你知道哪些测试自动化的脚本技术？</span><br><span class="line"><span class="bullet">13. </span>测试用例的设计可以自动化吗？</span><br><span class="line"> </span><br><span class="line">　自动化测试框架都有哪些?</span><br><span class="line">　　答：自动化测试框架主要分为以下几种，可以根据项目需要进行选择</span><br><span class="line">　　1.模块化框架(test script modularity)。</span><br><span class="line">　　2.函数库结构框架(test library architecture)。</span><br><span class="line">　　3.关键字驱动测试框架(keyword-driven/table-driven testing)。</span><br><span class="line">　　4.数据驱动测试框架(data-driven testing)。</span><br><span class="line">　　5.混合型框架(hybrid test automation)。</span><br><span class="line">　　请列举你曾经做过的自动化功能测试项目的相关经验</span><br><span class="line">　　你认为什么情况下适合进行自动化功能测试?请解释原因</span><br><span class="line">　　请问自动化测试在实现过程中会遇到的难点有哪些?</span><br><span class="line">　　请问：怎么在自动测试中实现数据驱动?</span><br><span class="line">　　你会计算自动测试工程的投入回报比吗?怎么计算?</span><br><span class="line">　　请比较 Rational Robot 与 MI QTP 的优缺点</span><br><span class="line">　　你认为 Robot 在数据参数化的时候有什么不便之处吗?</span><br><span class="line">　　请问 QTP 中如何不用录制的方法启动 IE ，并对 IE 窗口进行操作</span><br><span class="line">　　在用自动测试工具制作测试脚本的时候，当需要对某个界面上的对象进行操作时，如何保证操作成功?</span><br><span class="line">　　请选择一个自动功能测试工具并用该测试工具的脚本语言写一个脚本：每天早上 9 点弹出对话框，提示“现在 9 点了”。说明在测试工具中使用你的脚本的方式</span><br></pre></td></tr></table></figure>
<p><code>自动化测试面试题 - 雅如 - 博客园</code><br><a href="http://www.cnblogs.com/yaru/p/5311122.html" target="_blank" rel="external">http://www.cnblogs.com/yaru/p/5311122.html</a></p>
<p><code>自动化测试框架/工具选择 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/meyoung01/article/details/47279107" target="_blank" rel="external">http://blog.csdn.net/meyoung01/article/details/47279107</a></p>
<p><code>百度脑图－便捷的思维工具</code><br><a href="http://naotu.baidu.com/file/cb87a4a39a01140d2d795404fe8649f7?token=6020d97dc88fe8d9" target="_blank" rel="external">http://naotu.baidu.com/file/cb87a4a39a01140d2d795404fe8649f7?token=6020d97dc88fe8d9</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span cl]]>
    </summary>
    
      <category term="自动化测试" scheme="http://yoursite.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript console控制开关]]></title>
    <link href="http://yoursite.com/2016/09/06/JavaScript%20console%E6%8E%A7%E5%88%B6%E5%BC%80%E5%85%B3/"/>
    <id>http://yoursite.com/2016/09/06/JavaScript console控制开关/</id>
    <published>2016-09-05T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.411Z</updated>
    <content type="html"><![CDATA[<ul>
<li><p>console.js <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Avoid `console` errors in browsers that lack a console.</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">window</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> method;</span><br><span class="line">  <span class="keyword">var</span> noop = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">var</span> methods = [</span><br><span class="line">    <span class="string">'assert'</span>, <span class="string">'clear'</span>, <span class="string">'count'</span>, <span class="string">'debug'</span>, <span class="string">'dir'</span>, <span class="string">'dirxml'</span>, <span class="string">'error'</span>,</span><br><span class="line">    <span class="string">'exception'</span>, <span class="string">'group'</span>, <span class="string">'groupCollapsed'</span>, <span class="string">'groupEnd'</span>, <span class="string">'info'</span>, <span class="string">'log'</span>,</span><br><span class="line">    <span class="string">'markTimeline'</span>, <span class="string">'profile'</span>, <span class="string">'profileEnd'</span>, <span class="string">'table'</span>, <span class="string">'time'</span>, <span class="string">'timeEnd'</span>,</span><br><span class="line">    <span class="string">'timeline'</span>, <span class="string">'timelineEnd'</span>, <span class="string">'timeStamp'</span>, <span class="string">'trace'</span>, <span class="string">'warn'</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">var</span> length = methods.length;</span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">console</span> = (<span class="built_in">window</span>.console = <span class="built_in">window</span>.console || &#123;&#125;);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">while</span> (length--) &#123;</span><br><span class="line">    method = methods[length];</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Only stub undefined methods.</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">console</span>[method]) &#123;</span><br><span class="line">      <span class="built_in">console</span>[method] = noop;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* 关闭日志输出(关闭所有副作用很大,会导致部分项目无法启动) */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">consoleClose</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'debug'</span>] = noop;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'error'</span>] = noop;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'info'</span>] = noop;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'log'</span>] = noop;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'warn'</span>] = noop;</span><br><span class="line">    <span class="built_in">console</span>[<span class="string">'trace'</span>] = noop;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">window</span>.consoleClose = consoleClose;</span><br><span class="line">&#125;(<span class="built_in">window</span>));</span><br><span class="line"><span class="comment">// Place any jQuery/helper plugins in here.</span></span><br></pre></td></tr></table></figure></p>
</li>
<li><p>config.js</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">window</span><span class="class">.consoleClose</span>();<span class="comment">/* 关闭console日志 */</span></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><p>console.js <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="l]]>
    </summary>
    
      <category term="console控制" scheme="http://yoursite.com/tags/console%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[动态获取图片位置颜色值]]></title>
    <link href="http://yoursite.com/2016/08/31/%E5%8A%A8%E6%80%81%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%BD%8D%E7%BD%AE%E9%A2%9C%E8%89%B2%E5%80%BC/"/>
    <id>http://yoursite.com/2016/08/31/动态获取图片位置颜色值/</id>
    <published>2016-08-30T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.405Z</updated>
    <content type="html"><![CDATA[<h1 id="动态获取图片位置颜色值">动态获取图片位置颜色值</h1><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">var</span> ctxt = canvas.getContext('<span class="number">2</span>d');</span><br><span class="line"><span class="title">var</span> img = $<span class="number">0</span>;</span><br><span class="line"><span class="title">ctxt</span>.drawImage(img, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title">var</span> <span class="typedef"><span class="keyword">data</span> = ctxt.getImageData<span class="container">(<span class="title">canvas</span>.<span class="title">width</span>/2, 10, 10, 10)</span>.<span class="keyword">data</span>;</span></span><br><span class="line"><span class="title">console</span>.log(<span class="typedef"><span class="keyword">data</span>[0],<span class="keyword">data</span>[1],<span class="keyword">data</span>[2],<span class="keyword">data</span>[3]); // <span class="type">VM8554</span>:5 111 185 6 255</span></span><br><span class="line"> </span><br><span class="line"><span class="title">ctxt</span>.fillStyle=<span class="string">"red"</span>;</span><br><span class="line"><span class="title">ctxt</span>.fillRect(canvas.width/<span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>);</span><br></pre></td></tr></table></figure>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/70487007.jpg" alt=""><br><!--
--></p>
<h1 id="完整示例">完整示例</h1><ul>
<li><p>index.html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">canvas</span> <span class="attribute">id</span>=<span class="value">"canvas"</span> <span class="attribute">hidden</span>&gt;</span>对不起 ，你的浏览器不支持Canvas<span class="tag">&lt;/<span class="title">canvas</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>getImgColor.js （含 rgbToHex ）</p>
<figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="list">(<span class="keyword">function</span> <span class="list">(<span class="keyword">window</span>)</span> <span class="collection">&#123;</span><br><span class="line">  'use strict';</span><br><span class="line"> </span><br><span class="line">  function getImgColor<span class="list">(<span class="keyword">img</span>)</span> <span class="collection">&#123;</span><br><span class="line"> </span><br><span class="line">    if <span class="list">(<span class="keyword">!canvas</span>)</span> <span class="collection">&#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span></span><br><span class="line"> </span><br><span class="line">    var ctxt = canvas.getContext<span class="list">(<span class="keyword">'2d'</span>)</span><span class="comment">;</span></span><br><span class="line">    // var img = $<span class="number">0</span><span class="comment">;</span></span><br><span class="line">    ctxt.drawImage<span class="list">(<span class="keyword">img</span>, <span class="number">0</span>, <span class="number">0</span>)</span><span class="comment">;</span></span><br><span class="line">    var data = ctxt.getImageData<span class="list">(<span class="keyword">canvas.width</span> / <span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>)</span>.data;</span><br><span class="line">    console.log<span class="list">(<span class="keyword">data</span><span class="collection">[<span class="number">0</span>]</span>, data<span class="collection">[<span class="number">1</span>]</span>, data<span class="collection">[<span class="number">2</span>]</span>, data<span class="collection">[<span class="number">3</span>]</span>)</span><span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">    // 测试描点位置</span><br><span class="line">    ctxt.fillStyle = <span class="string">"red"</span><span class="comment">;</span></span><br><span class="line">    ctxt.fillRect<span class="list">(<span class="keyword">canvas.width</span> / <span class="number">2</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>)</span><span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">    return rgbToHex<span class="list">(<span class="keyword">data</span><span class="collection">[<span class="number">0</span>]</span>, data<span class="collection">[<span class="number">1</span>]</span>, data<span class="collection">[<span class="number">2</span>]</span>)</span><span class="comment">;</span></span><br><span class="line"> </span><br><span class="line">    function rgbToHex<span class="list">(<span class="keyword">r</span>, g, b)</span> <span class="collection">&#123;</span><br><span class="line">      console.log<span class="list">(<span class="string">"#"</span> + <span class="list">(<span class="list">(<span class="number">1</span> &lt;&lt; <span class="number">24</span>)</span> + <span class="list">(<span class="keyword">r</span> &lt;&lt; <span class="number">16</span>)</span> + <span class="list">(<span class="keyword">g</span> &lt;&lt; <span class="number">8</span>)</span> + b)</span>.toString<span class="list">(<span class="number">16</span>)</span>.slice<span class="list">(<span class="number">1</span>)</span>)</span><span class="comment">;</span></span><br><span class="line">      return <span class="string">"#"</span> + <span class="list">(<span class="list">(<span class="number">1</span> &lt;&lt; <span class="number">24</span>)</span> + <span class="list">(<span class="keyword">r</span> &lt;&lt; <span class="number">16</span>)</span> + <span class="list">(<span class="keyword">g</span> &lt;&lt; <span class="number">8</span>)</span> + b)</span>.toString<span class="list">(<span class="number">16</span>)</span>.slice<span class="list">(<span class="number">1</span>)</span><span class="comment">;</span></span><br><span class="line">    &#125;</span></span><br><span class="line">  &#125;</span></span><br><span class="line"> </span><br><span class="line">  window._getImgColor = getImgColor;</span><br><span class="line"> </span><br><span class="line">&#125;</span>)</span><span class="list">(<span class="keyword">window</span>)</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">rgbToHex</span><span class="params">(r, g, b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"#"</span> + ((<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + (r &lt;&lt; <span class="number">16</span>) + (g &lt;&lt; <span class="number">8</span>) + b).toString(<span class="number">16</span>).slice(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>javascript - RGB to Hex and Hex to RGB - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb" target="_blank" rel="external">http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb</a></p>
<hr>
<h1 id="异常：The_canvas_has_been_tainted_by_cross-origin_data">异常：The canvas has been tainted by cross-origin data</h1><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VM1375:1 Uncaught DOMException: Failed to<span class="instruction"> execute </span>'getImageData' on 'CanvasRenderingContext2D': The canvas has been tainted by cross-origin<span class="function"> data.(</span>…<span class="function">)</span></span><br></pre></td></tr></table></figure>
<ul>
<li>问题原因： 图片跨域</li>
<li>解决办法：图片于应用一并部署</li>
</ul>
<hr>
<p><code>HTML5 canvas getImageData() 方法</code><br><a href="http://www.w3school.com.cn/tags/canvas_getimagedata.asp" target="_blank" rel="external">http://www.w3school.com.cn/tags/canvas_getimagedata.asp</a></p>
<p><code>javascript加载图片查看具体某一点RGB值_百度知道</code><br><a href="http://zhidao.baidu.com/link?url=P2-V1hm2S-DVfWEJpYYrqAiMUkv9vRI" target="_blank" rel="external">http://zhidao.baidu.com/link?url=P2-V1hm2S-DVfWEJpYYrqAiMUkv9vRI</a> mZnnWbxQc99EgFqddpvW-4NcQ3Sr1e9HTtAghpoNPSfwFFGZwI4FT-Xd1tRG9PZEL154wx5V8ALG</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="动态获取图片位置颜色值">动态获取图片位置颜色值</h1><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><sp]]>
    </summary>
    
      <category term="图片取色" scheme="http://yoursite.com/tags/%E5%9B%BE%E7%89%87%E5%8F%96%E8%89%B2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[基于angular的自定义弹窗层]]></title>
    <link href="http://yoursite.com/2016/08/30/%E5%9F%BA%E4%BA%8Eangular%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%B9%E7%AA%97%E5%B1%82/"/>
    <id>http://yoursite.com/2016/08/30/基于angular的自定义弹窗层/</id>
    <published>2016-08-29T16:00:01.000Z</published>
    <updated>2016-09-24T06:34:12.398Z</updated>
    <content type="html"><![CDATA[<h1 id="angular_自定义弹窗层">angular 自定义弹窗层</h1><ul>
<li>*controller.js</li>
</ul>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 弹出公共的金币奖励提示</span><br><span class="line"> */</span><br><span class="line"><span class="variable">$http</span>.get(<span class="string">'app_module/gold/gold.html'</span>, (&#123;cache: <span class="variable">$templateCache</span>&#125; || &#123;&#125;)).<span class="keyword">then</span>(<span class="keyword">function</span> (response) &#123;</span><br><span class="line">  // <span class="number">1</span>.获取 template 标签(也是新建)</span><br><span class="line">  var goldEL = angular.element(response.data);</span><br><span class="line"> </span><br><span class="line">  // <span class="number">1.2</span> 更新金币数量</span><br><span class="line">  <span class="variable">$scope</span>.number = Math.floor(Math.random() * <span class="number">5</span>) + <span class="number">1</span>;</span><br><span class="line">  <span class="variable">$compile</span>(goldEL)(<span class="variable">$scope</span>);// <span class="variable">$scope</span>双向绑定</span><br><span class="line"> </span><br><span class="line">  // <span class="number">2</span>.动态添加template 标签</span><br><span class="line">  angular.element(document).find(<span class="string">'body'</span>).append(goldEL);</span><br><span class="line"> </span><br><span class="line">  // <span class="number">3.3</span>s后自动删除此标签</span><br><span class="line">  <span class="variable">$timeout</span>(function () &#123;</span><br><span class="line">    goldEL.remove();</span><br><span class="line">  &#125;, <span class="number">1500</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>app_module/gold/gold.html</p>
<figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line">  <span class="class">.gold_panel</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> fixed</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>)</span></span>;</span><br><span class="line">    <span class="comment">/*background-color: red;*/</span></span><br><span class="line">    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">999</span></span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line"> </span><br><span class="line">  <span class="class">.gold_panel</span> &gt; <span class="tag">img</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">50vw</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">50vw</span></span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"gold_panel"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">img</span> <span class="attribute">class</span>=<span class="value">"_slideDown"</span> <span class="attribute">src</span>=<span class="value">"img/transcript/level-</span></span></span><span class="expression">&#123;&#123;<span class="variable">number</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="value">.png"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>angular模块化封装<br>AutoDiv.md</p>
</li>
</ul>
<hr>
<h1 id="ionic弹窗层可基于$ionicPopup重写">ionic弹窗层可基于$ionicPopup重写</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.showPopup = <span class="keyword">function</span>() &#123;</span><br><span class="line">    var myPopup = <span class="variable">$ionicPopup</span>.show(&#123;</span><br><span class="line">        cssClass:<span class="string">'er-popup'</span>,</span><br><span class="line">        templateUrl: <span class="string">'templates/er_modal.html'</span>,</span><br><span class="line">        scope: <span class="variable">$scope</span></span><br><span class="line">    &#125;);</span><br><span class="line">    myPopup.then(function(res) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><code>ionic使用记录----popup - mainpro126的专栏 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/mainpro126/article/details/46342157" target="_blank" rel="external">http://blog.csdn.net/mainpro126/article/details/46342157</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="angular_自定义弹窗层">angular 自定义弹窗层</h1><ul>
<li>*controller.js</li>
</ul>
<figure class="highlight xquery"><table><tr><td class="gutter"]]>
    </summary>
    
      <category term="angular的自定义弹窗层" scheme="http://yoursite.com/tags/angular%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%B9%E7%AA%97%E5%B1%82/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[现代浏览器中内置的几个可以等效替代jQuery的功能]]></title>
    <link href="http://yoursite.com/2016/08/30/%E7%8E%B0%E4%BB%A3%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E5%86%85%E7%BD%AE%E7%9A%84%E5%87%A0%E4%B8%AA%E5%8F%AF%E4%BB%A5%E7%AD%89%E6%95%88%E6%9B%BF%E4%BB%A3jQuery%E7%9A%84%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2016/08/30/现代浏览器中内置的几个可以等效替代jQuery的功能/</id>
    <published>2016-08-29T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.391Z</updated>
    <content type="html"><![CDATA[<h1 id="获取元素选择器是一样的[selector选择器]_<!-￼0->">获取元素选择器是一样的[selector选择器] <figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$('.contant&gt;h1');</span><br><span class="line"><span class="annotation">[&lt;h1&gt;现代浏览器中内置的几个可以等效替代jQuery的功能&lt;/h1&gt;]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">document.querySelector('.contant&gt;h1');</span><br><span class="line">&lt;h1&gt;现代浏览器中内置的几个可以等效替代jQuery的功能&lt;/h1&gt;</span><br></pre></td></tr></table></figure></h1><h1 id="API依然存在差异">API依然存在差异</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jQuery</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">'.contant&gt;h1'</span>).html();</span><br><span class="line"><span class="string">"现代浏览器中内置的几个可以等效替代jQuery的功能"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// querySelector</span></span><br><span class="line"><span class="built_in">document</span>.querySelector(<span class="string">'.contant&gt;h1'</span>).html();</span><br><span class="line">VM1257:<span class="number">1</span> Uncaught <span class="built_in">TypeError</span>: <span class="built_in">document</span>.querySelector(...).html is not a <span class="function"><span class="keyword">function</span>(<span class="params">…</span>)</span></span><br></pre></td></tr></table></figure>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jQuery</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">".contant&gt;h1"</span>).css(<span class="string">'background-color'</span>,<span class="string">"salmon"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// querySelector</span></span><br><span class="line"><span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">'.contant&gt;h1'</span>).style.backgroundColor=<span class="string">"salmon"</span>;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jQuery方式</span></span><br><span class="line">$(<span class="string">"#picture"</span>).attr(<span class="string">"src"</span>, <span class="string">"http://placekitten.com/200/200"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//使用将querySelector映射为$的原生js方式</span></span><br><span class="line">$(<span class="string">"#picture"</span>).src = <span class="string">"http://placekitten.com/200/200"</span>;</span><br></pre></td></tr></table></figure>
<h1 id="表达式_$_统一">表达式 <code>$</code> 统一</h1><blockquote>
<p>并不建议,因为除选择器以外的API都不一样.而使用统样的表达式<code>$</code>程序员容易混淆,犯错<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">  <span class="comment">// 创建全局的 '$' 变量</span></span><br><span class="line">  <span class="built_in">window</span>.$ = <span class="function"><span class="keyword">function</span>(<span class="params">selector</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(selector);</span><br><span class="line">  &#125;;</span><br><span class="line"> </span><br><span class="line">  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 通过id查找item1，将它的背景颜色修改为浅红</span></span><br><span class="line">    <span class="keyword">var</span> item = $(<span class="string">"#salmon"</span>).style.backgroundColor=<span class="string">"salmon"</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(item);</span><br><span class="line">  &#125;()); </span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
</blockquote>
<h1 id="document-queryselectorall_返回的是一个节点列表">document.queryselectorall 返回的是一个节点列表</h1><p>一个很巧妙的做法是将querySelector映射为\$，而将querySelectorAll函数映射为$$。但它返回的是一个节点列表，不如jQuery里返回的Array格式好用，我们可以使用Array.prototype.slice.call(nodeList)方法加工一下，让它更方便。</p>
<p><code>现代浏览器中内置的几个可以等效替代jQuery的功能 - 推酷</code><br><a href="http://www.tuicool.com/articles/2y2Qvy2" target="_blank" rel="external">http://www.tuicool.com/articles/2y2Qvy2</a></p>
<hr>
<h1 id="angular环境使用angular-element()">angular环境使用<code>angular.element()</code></h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">angular</span><span class="class">.element</span>()</span><br><span class="line"><span class="tag">JQLite</span> <span class="rules">&#123;&#125;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line"></span><br><span class="line">var test = angular.<span class="literal">element</span>(document.querySelector(<span class="string">'#testId'</span>));</span><br><span class="line">test.addClass(‘testClass’);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line"></span><br><span class="line">var test = angular.<span class="literal">element</span>(document.getElementById(<span class="string">'test'</span>);</span><br><span class="line">test.addClass(‘testClass’);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法三：</span><br><span class="line"></span><br><span class="line">angular.forEach(angular.<span class="literal">element</span>(document).find(<span class="string">'div'</span>),<span class="keyword">function</span>(node)&#123;</span><br><span class="line">            if(node.id == <span class="string">'testId'</span>)&#123;</span><br><span class="line">                     node.addClass(<span class="string">'testClass'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">if(node.className == ‘testClass’)&#123;</span><br><span class="line">node.removeClass(‘testClass’)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法四：使用<span class="variable">$documen</span>.</span><br><span class="line"></span><br><span class="line"><span class="variable">$document</span>就和angular.<span class="literal">element</span>(document)是一样的</span><br><span class="line"></span><br><span class="line">angular.forEach(<span class="variable">$document</span>.find(<span class="string">'div'</span>),<span class="keyword">function</span>(node)&#123;</span><br><span class="line">            if(node.id == <span class="string">'testId'</span>)&#123;</span><br><span class="line">                     node.addClass(<span class="string">'testClass'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">if(node.className == <span class="string">'testClass'</span>)&#123;</span><br><span class="line">node.removeClass(‘testClass’)</span><br><span class="line">&#125;</span><br><span class="line">           &#125;)</span><br></pre></td></tr></table></figure>
<hr>
<p><code>Angular.element和$document的使用方法分析，代替jquery - Simon_ITer的个人空间 - 开源中国社区</code><br><a href="http://my.oschina.net/keysITer/blog/626746" target="_blank" rel="external">http://my.oschina.net/keysITer/blog/626746</a></p>
<p><code>Angular&#39;s jqLite</code><br><a href="http://devdocs.io/angularjs~1.5/api/ng/function/angular.element" target="_blank" rel="external">http://devdocs.io/angularjs~1.5/api/ng/function/angular.element</a></p>
<p><a href="http://www.cnblogs.com/ys-ys/p/4918985.html" target="_blank" rel="external">http://www.cnblogs.com/ys-ys/p/4918985.html</a></p>
<p><code>angular源码分析：angular的整个加载流程 - 王大鹏 - 博客园</code><br><a href="http://www.cnblogs.com/web2-developer/p/angular-7.html" target="_blank" rel="external">http://www.cnblogs.com/web2-developer/p/angular-7.html</a></p>
<p><code>angular源码分析：angular中jqLite的实现——你可以丢掉jQuery了 - 王大鹏 - 博客园</code><br><a href="http://www.cnblogs.com/web2-developer/archive/2015/11/09/angular-5.html" target="_blank" rel="external">http://www.cnblogs.com/web2-developer/archive/2015/11/09/angular-5.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="获取元素选择器是一样的[selector选择器]_<!-￼0->">获取元素选择器是一样的[selector选择器] <figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span]]>
    </summary>
    
      <category term="替代jQuery" scheme="http://yoursite.com/tags/%E6%9B%BF%E4%BB%A3jQuery/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ionic 路由view综合控制]]></title>
    <link href="http://yoursite.com/2016/08/27/ionic%20%E8%B7%AF%E7%94%B1view%E7%BB%BC%E5%90%88%E6%8E%A7%E5%88%B6/"/>
    <id>http://yoursite.com/2016/08/27/ionic 路由view综合控制/</id>
    <published>2016-08-26T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.382Z</updated>
    <content type="html"><![CDATA[<p>官网  <a href="http://angular-ui.github.io/ui-router/" target="_blank" rel="external">http://angular-ui.github.io/ui-router/</a><br>API <a href="http://angular-ui.github.io/ui-router/site/" target="_blank" rel="external">http://angular-ui.github.io/ui-router/site/</a><br>Quick Reference( wiki ) <a href="https://github.com/angular-ui/ui-router/wiki/Quick-Reference" target="_blank" rel="external">https://github.com/angular-ui/ui-router/wiki/Quick-Reference</a></p>
<hr>
<h1 id="ionic中路由返回控制_<!-￼0->">ionic中路由返回控制 <figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="variable">$ionicHistory</span>.goBack();              //  ionic控制历史</span><br><span class="line"> <span class="variable">$ionicHistory</span>.goBack(-<span class="number">2</span>); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicHistory</span>.viewHistory().backView.url  // 预测当前页,ionic返回的目标页面</span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicHistory</span>.viewHistory().views // 已记录的路由</span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicHistory</span>.currentHistoryId(); // 历史堆栈的 ID，是当前视图的父类容器</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">window</span>.history.back();                    // html控制历史</span><br></pre></td></tr></table></figure></h1><p><code>API</code>  <a href="http://ionicframework.com/docs/api/service/$ionicHistory/" target="_blank" rel="external">http://ionicframework.com/docs/api/service/$ionicHistory/</a></p>
<h1 id="路由切换的几种方法">路由切换的几种方法</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$location</span>.path(<span class="string">"/path/origin"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$state</span>.go(<span class="string">'app.section'</span>);</span><br><span class="line"><span class="symbol">https:</span>/<span class="regexp">/github.com/angular</span>-ui/ui-router/wiki/<span class="constant">Quick</span>-<span class="constant">Reference</span><span class="comment">#stategoto--toparams--options</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ui-sref=<span class="string">"tab.exp(&#123;bagId:books[$index].id&#125;) // 通过路由参数传递数据</span><br><span class="line">ui-sref="</span>tab.exp(&#123;<span class="symbol">bagId:</span><span class="expansion">&#123;&#123;books[<span class="variable">$index</span>].id&#125;&#125;</span>&#125;) /<span class="regexp">/ 通过路由参数传递json数据</span><br><span class="line">注: 不建议:数据会显示在地址栏</span><br><span class="line">https:/</span><span class="regexp">/github.com/angular</span>-ui/ui-router/wiki/<span class="constant">Quick</span>-<span class="constant">Reference</span><span class="comment">#ui-sref</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/<span class="regexp">/ identical to previous example</span><br><span class="line">url: "/contacts</span><span class="regexp">/&#123;contactId&#125;" </span><br><span class="line">https:/</span><span class="regexp">/github.com/angular</span>-ui/ui-router/wiki/<span class="constant">URL</span>-<span class="constant">Routing</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">标签 href = <span class="string">'#app/home'</span></span><br><span class="line">js     window.location.href=<span class="string">'#app/home'</span> </span><br><span class="line">注<span class="symbol">:</span>不建议<span class="symbol">:</span>会重新加载应用</span><br></pre></td></tr></table></figure>
<h1 id="路由间数据传递方法">路由间数据传递方法</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">* 路由数据(单例)</span><br><span class="line">*/</span></span><br><span class="line">angular.module(<span class="string">'starter'</span>)</span><br><span class="line">  .factory(<span class="string">'RouteData'</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RouteData.transcript = &#123;questionRoot: questionRoot&#125;;</span><br><span class="line">localStorageService.set(<span class="string">'transcript'</span>, &#123;questionRoot: questionRoot&#125;);// TODO 临时,本地存储</span><br><span class="line"><span class="variable">$state</span>.go(<span class="string">'app.transcript'</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (RouteData.transcript == <span class="literal">null</span>) &#123;</span><br><span class="line">     RouteData.transcript = localStorageService.<span class="keyword">get</span>(<span class="string">"transcript"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable"><span class="keyword">var</span> questionRoot</span> = RouteData.transcript.questionRoot;<span class="comment">// 接收成绩单</span></span><br></pre></td></tr></table></figure>
<h1 id="禁止缓存">禁止缓存</h1><ul>
<li><p>时间戳，让缓存资源不重复</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.config(<span class="keyword">function</span>(<span class="variable">$routeProvider</span>, <span class="variable">$locationProvider</span>) &#123; </span><br><span class="line">  <span class="variable">$routeProvider</span> </span><br><span class="line">   .when(<span class="string">'/Book/:bookId/ch/'</span>, &#123; </span><br><span class="line">    templateUrl: <span class="string">'chapter.html'</span> + <span class="string">'?datestamp='</span> + (new Date()).getTime(), </span><br><span class="line">    controller: <span class="string">'ChapterController'</span> </span><br><span class="line">  &#125;); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>同步删除 模板缓存 </p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.run(<span class="keyword">function</span>(<span class="variable">$rootScope</span>, <span class="variable">$templateCache</span>) &#123; </span><br><span class="line">    <span class="variable">$rootScope</span>.<span class="variable">$on</span>(<span class="string">'$routeChangeStart'</span>, function(event, next, current) &#123; </span><br><span class="line">        if (typeof(current) !== <span class="string">'undefined'</span>)&#123; </span><br><span class="line">            <span class="variable">$templateCache</span>.remove(current.templateUrl); </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>AngularJs 禁止模板缓存 - 君醉酒的博客 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/rain097790/article/details/50570041" target="_blank" rel="external">http://blog.csdn.net/rain097790/article/details/50570041</a></p>
<ul>
<li><p>ionic 禁用缓存</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicConfigProvider</span>.views.maxCache(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>单路由，取消缓存</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$stateProvider</span>.state(<span class="string">'myState'</span>, &#123;</span><br><span class="line">   cache: false,</span><br><span class="line">   url : <span class="string">'/myUrl'</span>,</span><br><span class="line">   templateUrl : <span class="string">'my-template.html'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;ion-<span class="built_in">view</span> cache-<span class="built_in">view</span>=<span class="string">"false"</span> <span class="built_in">view</span>-title=<span class="string">"My Title!"</span>&gt;</span><br><span class="line">  ...</span><br><span class="line">&lt;/ion-<span class="built_in">view</span>&gt;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="ionic路由相关,综合文章">ionic路由相关,综合文章</h1><p><code>ionic js 导航ion-nav-viewionic ionic能够检测到浏览历史,通过检测浏览历史，实现向左或向右滑动时可以正确转换视图。 - yongbin668的博客 - 博客频道 - CSDN.NET</code><br><a href="http://blog.csdn.net/yongbin668/article/details/51601326" target="_blank" rel="external">http://blog.csdn.net/yongbin668/article/details/51601326</a></p>
<hr>
<h1 id="提前为需要返回的目标路由_view设置参数">提前为需要返回的目标路由 view设置参数</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicHistory</span>.backView().stateParams = &#123;card:true&#125;;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicViewSwitcher</span>.nextDirection(<span class="string">'back'</span>); // 控制着动画( animation )方向</span><br></pre></td></tr></table></figure>
<p><a href="https://forum.ionicframework.com/t/change-variable-of-previous-view-before-going-back-with-ionichistory-goback/16309/4" target="_blank" rel="external">https://forum.ionicframework.com/t/change-variable-of-previous-view-before-going-back-with-ionichistory-goback/16309/4</a></p>
<h1 id="★_展示_ionic_路由历史列表">★ 展示 ionic 路由历史列表</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.<span class="variable">$on</span>(<span class="string">'$ionicView.enter'</span>, <span class="keyword">function</span>(e) &#123;</span><br><span class="line">        var history = <span class="variable">$ionicHistory</span>.viewHistory();</span><br><span class="line">        angular.forEach(history.views, function(view, index)&#123;</span><br><span class="line">            console.log(<span class="string">'views: '</span> + view.stateName);</span><br><span class="line">        &#125;);</span><br><span class="line">        angular.forEach(history.histories[<span class="variable">$ionicHistory</span>.currentHistoryId()].stack, function(view, index)&#123;</span><br><span class="line">            console.log(<span class="string">'history stack:'</span> + view.stateName);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<p><code>javascript - $ionicHistory.backView has incorrect state when go to previous state manually - Stack Overflow</code></p>
<p><a href="http://stackoverflow.com/questions/31364578/ionichistory-backview-has-incorrect-state-when-go-to-previous-state-manually" target="_blank" rel="external">http://stackoverflow.com/questions/31364578/ionichistory-backview-has-incorrect-state-when-go-to-previous-state-manually</a></p>
<h1 id="★_提前设置ionic_路由_返回目标">★ 提前设置ionic 路由 返回目标</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.<span class="variable">$on</span>(<span class="string">'$ionicView.enter'</span>, <span class="keyword">function</span> (e) &#123;</span><br><span class="line">    var i,</span><br><span class="line">        currentHistoryId = <span class="variable">$ionicHistory</span>.currentHistoryId(),</span><br><span class="line">        history = <span class="variable">$ionicHistory</span>.viewHistory(),</span><br><span class="line">        stack = history.histories[currentHistoryId].stack;</span><br><span class="line"> </span><br><span class="line">    for (i = <span class="number">0</span>; i &lt; stack.length; i += <span class="number">1</span>) &#123;</span><br><span class="line">        if (stack[i].stateId.indexOf(<span class="string">"app.audit_idAudit="</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$ionicHistory</span>.backView(stack[i]);</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><code>javascript - $ionicHistory set backView(view) but back button title is not being updated - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/34789813/ionichistory-set-backviewview-but-back-button-title-is-not-being-updated" target="_blank" rel="external">http://stackoverflow.com/questions/34789813/ionichistory-set-backviewview-but-back-button-title-is-not-being-updated</a></p>
<hr>
<h1 id="在路由存在缓存的情况下,实现路由改变后的数据更新">在路由存在缓存的情况下,实现路由改变后的数据更新</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$scope</span>.<span class="variable">$on</span>(<span class="string">'$stateChangeSuccess'</span>, <span class="variable">$scope</span>.rapidResponse.<span class="keyword">update</span>); // 如果有变化即重新调用获取数据函数，实现数据更新刷新</span><br></pre></td></tr></table></figure>
<p><code>使用angularjs、ionic框架如何实现返回上一页并刷新 - 推酷</code><br><a href="http://www.tuicool.com/articles/InQz2iB" target="_blank" rel="external">http://www.tuicool.com/articles/InQz2iB</a></p>
<h1 id="自定义点击动作(返回)，用_$ionicNavBarDelegate">自定义点击动作(返回)，用 $ionicNavBarDelegate</h1><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicNavBarDelegate</span>.back();</span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicNavBarDelegate</span>.getPreviousTitle(); // 获取上一步路由标题</span><br><span class="line"></span><br><span class="line"><span class="variable">$ionicNavBarDelegate</span>.title(title);// 设置路由标题</span><br></pre></td></tr></table></figure>
<p><code>ionic js 导航ion-nav-viewionic ionic能够检测到浏览历史,通过检测浏览历史...</code><br><a href="http://blog.csdn.net/yongbin668/article/details/51601326" target="_blank" rel="external">http://blog.csdn.net/yongbin668/article/details/51601326</a></p>
<h1 id="控制view切换动画_(_animation_)">控制view切换动画 ( animation )</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">ion-nav-view</span> <span class="attribute">name</span>=<span class="value">"menuContent"</span> <span class="attribute">animation</span>=<span class="value">"slide-left-right"</span>&gt;</span><span class="tag">&lt;/<span class="title">ion-nav-view</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicModal</span>.fromTemplateUrl(<span class="string">'login.html'</span>, &#123;</span><br><span class="line">        scope: <span class="variable">$scope</span>,</span><br><span class="line">        animation: <span class="string">'slide-in-up'</span></span><br><span class="line">    &#125;).<span class="keyword">then</span>(<span class="keyword">function</span> (modal) &#123;</span><br><span class="line">            <span class="variable">$scope</span>.modal = modal;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$state</span>.go( <span class="string">'.'</span>, &#123; page: nextPage &#125;, &#123; animation: <span class="string">'no-animation'</span> &#125;)</span><br></pre></td></tr></table></figure>
<p><code>Control the animation in $state.go - ionic - Ionic</code><br><a href="https://forum.ionicframework.com/t/control-the-animation-in-state-go/14492" target="_blank" rel="external">https://forum.ionicframework.com/t/control-the-animation-in-state-go/14492</a><br><a href="http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state" target="_blank" rel="external">http://angular-ui.github.io/ui-router/site/#/api/ui.router.state.$state</a></p>
<p><code>javascript - ionic animation失效 - SegmentFault</code><br><a href="https://segmentfault.com/q/1010000005668784" target="_blank" rel="external">https://segmentfault.com/q/1010000005668784</a></p>
<h2 id="Ionic_取消自带（默认）动画效果">Ionic 取消自带（默认）动画效果</h2><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicConfigProvider</span>.views.transition(<span class="string">'none'</span>);</span><br><span class="line">或：</span><br><span class="line">&lt;ion-view view-title=<span class="string">"个人中心"</span> animation=<span class="string">"no-animation"</span>&gt;</span><br></pre></td></tr></table></figure>
<p><code>Ionic 取消自带动画效果 - jack088的个人页面 - 开源中国社区</code><br><a href="https://my.oschina.net/jack088/blog/543006" target="_blank" rel="external">https://my.oschina.net/jack088/blog/543006</a></p>
<ul>
<li>angular动画使用<br><code>AngularJS 应用中实现 JavaScript 动画效果 - 技术翻译 - 开源中国社区</code><br><a href="http://www.oschina.net/translate/javascript-animations-angularjs-applications" target="_blank" rel="external">http://www.oschina.net/translate/javascript-animations-angularjs-applications</a></li>
</ul>
<p><code>AngularJS应用页面切换优化方案 - 葡萄城控件技术团队 - 博客园</code><br><a href="http://www.cnblogs.com/powertoolsteam/p/Wijmo_XProject_1.html" target="_blank" rel="external">http://www.cnblogs.com/powertoolsteam/p/Wijmo_XProject_1.html</a></p>
<hr>
<h1 id="下一个路由页面控制">下一个路由页面控制</h1><h2 id="$ionicHistory-nextViewOptions()">$ionicHistory.nextViewOptions()</h2><p>Sets options for the next view. This method can be useful to override certain view/transition defaults right before a view transition happens. For example, the menuClose directive uses this method internally to ensure an animated view transition does not happen when a side menu is open, and also sets the next view as the root of its history stack. After the transition these options are set back to null.</p>
<p>Available options:</p>
<ul>
<li>disableAnimate: Do not animate the next transition.</li>
<li>disableBack: The next view should forget its back view, and set it to null.</li>
<li>historyRoot: The next view should become the root view in its history stack.  (设置下一个页面为根页面)<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicHistory</span>.nextViewOptions(&#123;</span><br><span class="line">  disableAnimate: true,</span><br><span class="line">  disableBack: true</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h1 id="忠告">忠告</h1><h2 id="尽量不要使用$state-go_来实现返回动作,因为会与$ionicHistory的路由历史控制脱轨-">尽量不要使用<code>$state.go</code> 来实现返回动作,因为会与$ionicHistory的路由历史控制脱轨.</h2><ul>
<li>影响:<br>1.下一步的再返回,可能会放回到上一个<code>$state.go</code> 的页面,而不能按照原\$ionicHistory轨迹 返回<br>2.android用户如果使用手机的返回键,会触发\ $ionicHistory路由历史轨迹,不能执行到 <code>$state.go</code>的代码<br>2.1 为弥补问题,就需要重写返回键来控制.(时间久了产生不同步,会出现此容易忽视的返回问题)</li>
</ul>
<ul>
<li><p>建议的处理方法, 参考上文中各场景处理示例</p>
<ul>
<li><p>路由间数据传递方法</p>
</li>
<li><p>提前为需要返回的目标路由view设置参数</p>
</li>
<li><p>★展示ionic路由历史列表</p>
</li>
<li>★提前设置ionic路由返回目标 </li>
<li>在路由存在缓存的情况下,实现路由改变后的数据更新</li>
</ul>
</li>
</ul>
<hr>
<h1 id="问题">问题</h1><h2 id="在次页面主动跳转到主页面,ionicHistory会存在历史,导致首页无法显示菜单图标">在次页面主动跳转到主页面,ionicHistory会存在历史,导致首页无法显示菜单图标</h2><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/58277758.jpg" alt=""><br><!--   --><br><code>ionic导航之后返回功能的说明 - 阿锋佬 - 博客园</code><br><a href="http://www.cnblogs.com/feng18/p/5217680.html" target="_blank" rel="external">http://www.cnblogs.com/feng18/p/5217680.html</a></p>
<ul>
<li>原因<br><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/87393479.jpg" alt=""><!--
-->
</li>
</ul>
<p><code>viewData.enableBack</code> 存在了历史</p>
<hr>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">return</span> &#123;</span><br><span class="line">        <span class="attribute">viewId</span>: viewId,</span><br><span class="line">        <span class="attribute">action</span>: action,</span><br><span class="line">        <span class="attribute">direction</span>: direction,</span><br><span class="line">        <span class="attribute">historyId</span>: historyId,</span><br><span class="line">        <span class="attribute">enableBack</span>: this.<span class="function">enabledBack</span>(viewHistory.currentView),</span><br><span class="line">        <span class="attribute">isHistoryRoot</span>: (viewHistory.currentView.index === <span class="number">0</span>),</span><br><span class="line">        <span class="attribute">ele</span>: ele</span><br><span class="line">      &#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">enabledBack: <span class="function"><span class="keyword">function</span><span class="params">(view)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> backView = getBackView(view);</span><br><span class="line">      <span class="keyword">return</span> !!(backView &amp;&amp; backView.historyId === view.historyId); <span class="preprocessor"># 同一主路由,backView不为空,则存在,返回true</span></span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getBackView</span><span class="params">(view)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (view ? getViewById(view.backViewId) : <span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var viewHistory = &#123;</span><br><span class="line"><span class="label">  histories:</span> &#123; <span class="string">root:</span> &#123; <span class="string">historyId:</span> <span class="string">'root'</span>, <span class="string">parentHistoryId:</span> <span class="literal">null</span>, <span class="string">stack:</span> [], <span class="string">cursor:</span> -<span class="number">1</span> &#125; &#125;,</span><br><span class="line"><span class="label">  views:</span> &#123;&#125;,</span><br><span class="line"><span class="label">  backView:</span> <span class="literal">null</span>,</span><br><span class="line"><span class="label">  forwardView:</span> <span class="literal">null</span>,</span><br><span class="line"><span class="label">  currentView:</span> <span class="literal">null</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<ul>
<li>最后属性赋值<figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">transition: function(direction, enableBack, allowAnimate) &#123;</span><br><span class="line">  var deferred<span class="comment">;</span></span><br><span class="line">  var enteringData = getTransitionData(viewLocals, enteringEle, direction, enteringView)<span class="comment">;</span></span><br><span class="line">  var leavingData = extend(extend(&#123;&#125;, enteringData), getViewData(leavingView))<span class="comment">;</span></span><br><span class="line">  enteringData.transitionId = leavingData.transitionId = transitionId<span class="comment">;</span></span><br><span class="line">  enteringData.fromCache = !!alreadyInDom<span class="comment">;</span></span><br><span class="line">  enteringData.enableBack = !!enableBack<span class="comment">;</span></span><br><span class="line">  enteringData.renderStart = renderStart<span class="comment">;</span></span><br><span class="line">  enteringData.renderEnd = renderEnd<span class="comment">;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ul>
<li><p>B页面检查</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicHistory</span>.<span class="function"><span class="title">viewHistory</span><span class="params">()</span></span><span class="class">.currentView</span><span class="class">.historyId</span></span><br><span class="line"><span class="variable">$ionicHistory</span>.<span class="function"><span class="title">getViewById</span><span class="params">(<span class="variable">$ionicHistory</span>.viewHistory()</span></span><span class="class">.currentView</span><span class="class">.backViewId</span>).historyId</span><br></pre></td></tr></table></figure>
</li>
<li><p>我的解决办法<br>通过路由回到根目录,避免首页出现返回图标</p>
</li>
</ul>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicHistory</span>.goToHistoryRoot(<span class="variable">$ionicHistory</span>.currentHistoryId());// 通过路由回到根目录避免首页出现返回图标</span><br></pre></td></tr></table></figure>
<ul>
<li>方法二<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ionicHistory</span>.nextViewOptions(&#123;historyRoot: true&#125;);// 设置下一个页面为根页面</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>官网  <a href="http://angular-ui.github.io/ui-router/" target="_blank" rel="external">http://angular-ui.github.io/ui-router/</a><br>API <a ]]>
    </summary>
    
      <category term="ionic路由控制" scheme="http://yoursite.com/tags/ionic%E8%B7%AF%E7%94%B1%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS3 animation-fill-mode 属性]]></title>
    <link href="http://yoursite.com/2016/08/26/CSS3%20animation-fill-mode%20%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2016/08/26/CSS3 animation-fill-mode 属性/</id>
    <published>2016-08-25T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.371Z</updated>
    <content type="html"><![CDATA[<p><code>CSS3 animation-fill-mode 属性</code><br><a href="http://www.w3school.com.cn/cssref/pr_animation-fill-mode.asp" target="_blank" rel="external">http://www.w3school.com.cn/cssref/pr_animation-fill-mode.asp</a></p>
<h1 id="定义和用法">定义和用法</h1><p>animation-fill-mode 属性规定动画在播放之前或之后，其动画效果是否可见。</p>
<ul>
<li><p>注释：其属性值是由逗号分隔的一个或多个填充模式关键词。</p>
</li>
<li><p>默认值：    none</p>
</li>
<li>继承性：    no</li>
<li>版本：    CSS3</li>
<li>JavaScript 语法：    object.style.animationFillMode=none</li>
</ul>
<h1 id="语法">语法</h1><p>animation-fill-mode : none | forwards | backwards | both;<br>值    描述<br>none    不改变默认行为。<br>forwards    当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）。<br>backwards    在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）。<br>both    向前和向后填充模式都被应用。</p>
<p>none 表示不设置结束之后的状态，默认情况下回到跟初始状态一样。<br>forwards 表示将动画元素设置为整个动画结束时的状态。<br>backwards 明确设置动画结束之后回到初始状态。<br>both 表示设置为结束或者开始时候的状态。一般都是回到默认状态。</p>
<h2 id="快捷语法:">快捷语法:</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">animation</span>:<span class="value"> assetAnim <span class="number">2s</span> <span class="number">1</span> forwards</span></span>;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="animation_delay延时与_visibility的结合应用">animation   delay延时与 visibility的结合应用</h1><p>常见问题: delay延时还没开始前<code>visibility</code>就已经显示出来,而将<code>visibility</code>放置动画过程中<code>@keyframes</code> ,播放后样式又消失<br>处理办法:结合<code>animation-fill-mode: forwards</code>可以保留最后一帧的属性(即<code>visibility: visible</code> )</p>
<h1 id="实例一:">实例一:</h1><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/69071103.jpg" alt=""></p>
<!--
-->
<ul>
<li><p>html</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"ele"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>css</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line"><span class="class">.ele</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">60px</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">60px</span></span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ff6699</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">animation</span>:<span class="value"> <span class="number">1s</span> fadeIn</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">animation-fill-mode</span>:<span class="value"> forwards</span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="rule"><span class="attribute">.ele</span>:<span class="value">hover &#123;</span><br><span class="line">  background-color: <span class="hexcolor">#123</span></span></span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="at_rule">@<span class="keyword">keyframes</span> fadeIn </span>&#123;</span><br><span class="line">  99% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  100% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">visibility</span>:<span class="value"> visible</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>Pure CSS animation visibility with delay   - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/30855985/pure-css-animation-visibility-with-delay" target="_blank" rel="external">http://stackoverflow.com/questions/30855985/pure-css-animation-visibility-with-delay</a></p>
<h1 id="示例二_：_全css实现动画延时前隐藏，后显示">示例二 ： 全css实现动画延时前隐藏，后显示</h1><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/2471608.jpg" alt=""><br><!--
--></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!doctype html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"stars"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"star _slideDown _d-1"</span>&gt;</span>X<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"star _slideDown _d-2"</span>&gt;</span>X<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"star _slideDown _d-3"</span>&gt;</span>X<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"star _slideDown _d-4"</span>&gt;</span>X<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"star _slideDown _d-5"</span>&gt;</span>X<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>css<br>注意: visibility: visible !important; 在<code>@keyframes</code>动画中不能被识别<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line"><span class="class">.stars</span> <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">display</span>:<span class="value"> flex</span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">      <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5vw</span> <span class="number">0</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.star</span> <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">flex</span>:<span class="value"> <span class="number">1</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">3.5em</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> white</span></span>;</span><br><span class="line">    //<span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;// 动画前隐藏</span><br><span class="line">    //<span class="rule"><span class="attribute">opacity</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#9E9E9E</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">50%</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"> </span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line"><span class="class">._slideDown</span> <span class="rules">&#123;</span><br><span class="line">  <span class="rule"><span class="attribute">animation-name</span>:<span class="value"> _slideDown</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-animation-name</span>:<span class="value"> _slideDown</span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="rule"><span class="attribute">animation-duration</span>:<span class="value"> <span class="number">1s</span></span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-animation-duration</span>:<span class="value"> <span class="number">1s</span></span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="rule"><span class="attribute">animation-timing-function</span>:<span class="value"> ease</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">-webkit-animation-timing-function</span>:<span class="value"> ease</span></span>;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/*animation-delay: 2s;*/</span></span><br><span class="line">  <span class="rule"><span class="attribute">animation-fill-mode</span>:<span class="value"> forwards</span></span>;</span><br><span class="line">  <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="class">._slideDown</span><span class="class">._d-1</span><span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">animation-delay</span>:<span class="value"> <span class="number">1s</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">._slideDown</span><span class="class">._d-2</span><span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">animation-delay</span>:<span class="value"> <span class="number">2s</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">._slideDown</span><span class="class">._d-3</span><span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">animation-delay</span>:<span class="value"> <span class="number">3s</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">._slideDown</span><span class="class">._d-4</span><span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">animation-delay</span>:<span class="value"> <span class="number">4s</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">._slideDown</span><span class="class">._d-5</span><span class="rules">&#123;</span><br><span class="line"><span class="rule"><span class="attribute">animation-delay</span>:<span class="value"> <span class="number">5s</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"> </span><br><span class="line"><span class="at_rule">@<span class="keyword">keyframes</span> _slideDown </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">visibility</span>:<span class="value"> visible</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(-<span class="number">100%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  50% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">8%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  65% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">4%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  80% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">3%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  95% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">2%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  100% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">visibility</span>:<span class="value"> visible</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">0%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="at_rule">@<span class="keyword">-webkit-keyframes</span> _slideDown </span>&#123;</span><br><span class="line">  0% <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">visibility</span>:<span class="value"> visible</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(-<span class="number">100%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  50% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">8%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  65% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">4%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  80% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">3%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  95% <span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">2%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">  100% <span class="rules">&#123;</span><br><span class="line">      <span class="rule"><span class="attribute">visibility</span>:<span class="value"> visible</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">-webkit-transform</span>:<span class="value"> <span class="function">translateY</span>(<span class="number">0%</span>)</span></span>;</span><br><span class="line">  &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>css3 - image disappears after CSS animation completes - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/31406768/image-disappears-after-css-animation-completes" target="_blank" rel="external">http://stackoverflow.com/questions/31406768/image-disappears-after-css-animation-completes</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><code>CSS3 animation-fill-mode 属性</code><br><a href="http://www.w3school.com.cn/cssref/pr_animation-fill-mode.asp" target="_blank" rel="e]]>
    </summary>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[flex、table、fixed布局差异]]></title>
    <link href="http://yoursite.com/2016/08/24/flex%E3%80%81table%E3%80%81fixed%E5%B8%83%E5%B1%80%E5%B7%AE%E5%BC%82/"/>
    <id>http://yoursite.com/2016/08/24/flex、table、fixed布局差异/</id>
    <published>2016-08-23T16:00:00.000Z</published>
    <updated>2016-09-24T06:51:14.021Z</updated>
    <content type="html"><![CDATA[<h1 id="差异">差异</h1><p><code>display: flex;</code> 弹性布局,可直接操作宽度控制等分<br><code>display: table;</code> 表格布局,不可直接操作宽度,盒子宽度会被内容撑开. (可使用min-width,max-width辅助)</p>
<p><code>table-layout:fixed;</code> 弹性表格,需要设置自身宽度,才能再对子集设置宽度</p>
<h1 id="解决问题">解决问题</h1><p>在保留边框的情况下，仅内容垂直居中。</p>
<ul>
<li>使用 <code>display: table;</code></li>
</ul>
<p><code>display: table;</code>中内容不冲破（撑开）父容器，内容支持换行。 </p>
<ul>
<li>（使用min-width,max-width辅助） 或 （使用 <code>table-layout:fixed;</code>）</li>
</ul>
<h1 id="示例效果_&amp;_代码">示例效果 &amp; 代码</h1><p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/92840580.jpg" alt=""><br><!--
--></p>
<ul>
<li><p>html</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_panel"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span>bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span>ddd<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test"</span>&gt;</span>eee<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_panel_table"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_table"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_table"</span>&gt;</span>bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_table"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_table"</span>&gt;</span>ddd<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"test_table"</span>&gt;</span>eee<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="title">table</span> <span class="attribute">class</span>=<span class="value">"test_panel_table2"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span> <span class="attribute">class</span>=<span class="value">"test_table2"</span>&gt;</span>aaa<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span> <span class="attribute">class</span>=<span class="value">"test_table2"</span>&gt;</span>bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span> <span class="attribute">class</span>=<span class="value">"test_table2"</span>&gt;</span>ccc<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span> <span class="attribute">class</span>=<span class="value">"test_table2"</span>&gt;</span>ddd<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span> <span class="attribute">class</span>=<span class="value">"test_table2"</span>&gt;</span>eee<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;<span class="title">table</span> <span class="attribute">class</span>=<span class="value">"fixed"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">tr</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span>&gt;</span>text<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span>&gt;</span>text<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">td</span>&gt;</span>text<span class="tag">&lt;/<span class="title">td</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">tr</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>css(需要虽小屏幕才能看到效果-因为没设置基础宽度)</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.test_panel</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center; <span class="comment">/* 与子 级 margin: auto;效果一样.取其一 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="class">.test</span>&#123;</span><br><span class="line">    <span class="attribute">flex</span>:<span class="number">1</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="comment">//width:20vw;</span></span><br><span class="line">    <span class="comment">//width:20%;</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid blue;</span><br><span class="line">     <span class="attribute">margin</span>: auto; <span class="comment">/* 与父级   align-items: center ;效果一样.取其一 */</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class">.test_panel_table</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: table;</span><br><span class="line"> </span><br><span class="line">  <span class="class">.test_table</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">1%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid blue;</span><br><span class="line">    <span class="attribute">vertical-align</span>:middle;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">/* 代替width:20vw */</span></span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">20vw</span>;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">20vw</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class">.test_panel_table2</span>&#123;</span><br><span class="line">  <span class="attribute">table-layout</span>: fixed;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="class">.test_table2</span>&#123;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">20%</span>;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid blue;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">vertical-align</span>:middle;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="tag">table</span><span class="class">.fixed</span> &#123;<span class="attribute">table-layout</span>:fixed; <span class="attribute">width</span>:<span class="number">90px</span>;&#125;<span class="comment">/*Setting the table width is important!*/</span></span><br><span class="line"><span class="tag">table</span><span class="class">.fixed</span> <span class="tag">td</span> &#123;<span class="attribute">overflow</span>:hidden;<span class="attribute">border</span>:<span class="number">1px</span> solid blue;&#125;<span class="comment">/*Hide text outside the cell.*/</span></span><br><span class="line"><span class="tag">table</span><span class="class">.fixed</span> <span class="tag">td</span><span class="pseudo">:nth-of-type</span>(<span class="number">1</span>) &#123;<span class="attribute">width</span>:<span class="number">20px</span>;&#125;<span class="comment">/*Setting the width of column 1.*/</span></span><br><span class="line"><span class="tag">table</span><span class="class">.fixed</span> <span class="tag">td</span><span class="pseudo">:nth-of-type</span>(<span class="number">2</span>) &#123;<span class="attribute">width</span>:<span class="number">30px</span>;&#125;<span class="comment">/*Setting the width of column 2.*/</span></span><br><span class="line"><span class="tag">table</span><span class="class">.fixed</span> <span class="tag">td</span><span class="pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;<span class="attribute">width</span>:<span class="number">40px</span>;&#125;<span class="comment">/*Setting the width of column 3.*/</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<p><code>Why is width: 100% not working on div {display: table-cell}? - table的属性~蛮特别 - 十五言</code><br><a href="http://www.15yan.com/story/5dwn4VmtPQM/" target="_blank" rel="external">http://www.15yan.com/story/5dwn4VmtPQM/</a></p>
<p><code>html - Fixed Table Cell Width - Stack Overflow</code><br><a href="http://stackoverflow.com/questions/4185814/fixed-table-cell-width" target="_blank" rel="external">http://stackoverflow.com/questions/4185814/fixed-table-cell-width</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="差异">差异</h1><p><code>display: flex;</code> 弹性布局,可直接操作宽度控制等分<br><code>display: table;</code> 表格布局,不可直接操作宽度,盒子宽度会被内容撑开. (可使用min-width,m]]>
    </summary>
    
      <category term="flex/table/fixed布局差异" scheme="http://yoursite.com/tags/flex-table-fixed%E5%B8%83%E5%B1%80%E5%B7%AE%E5%BC%82/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[css实现 ripple 涟漪效果(水纹效果)]]></title>
    <link href="http://yoursite.com/2016/08/23/css%E5%AE%9E%E7%8E%B0%20ripple%20%E6%B6%9F%E6%BC%AA%E6%95%88%E6%9E%9C(%E6%B0%B4%E7%BA%B9%E6%95%88%E6%9E%9C)/"/>
    <id>http://yoursite.com/2016/08/23/css实现 ripple 涟漪效果(水纹效果)/</id>
    <published>2016-08-22T16:00:00.000Z</published>
    <updated>2016-09-24T06:34:12.356Z</updated>
    <content type="html"><![CDATA[<h1 id="代码">代码</h1><ul>
<li><p>home.html</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"paper"</span>&gt;</span><br><span class="line">  &lt;img <span class="type">class</span>=<span class="string">"section_img"</span>  ng-src=<span class="string">"&#123;&#123;section.pic&#125;&#125;"</span>&gt;</span><br><span class="line">  &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"ripple"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
<li><p>*.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 涟漪效果 ripple</span><br><span class="line"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">animate_ripple</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">// 影响性能,暂时关闭</span></span><br><span class="line">  $(<span class="string">".paper"</span>)</span><br><span class="line">    .click(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> ripple = $(<span class="keyword">this</span>).find(<span class="string">".ripple"</span>);</span><br><span class="line">      ripple.removeClass(<span class="string">"animate-ripple"</span>);</span><br><span class="line">      <span class="keyword">var</span> x = <span class="built_in">parseInt</span>(e.pageX - $(<span class="keyword">this</span>).offset().left) - (ripple.width() / <span class="number">2</span>);</span><br><span class="line">      <span class="keyword">var</span> y = <span class="built_in">parseInt</span>(e.pageY - $(<span class="keyword">this</span>).offset().top) - (ripple.height() / <span class="number">2</span>);</span><br><span class="line">      ripple.css(&#123;</span><br><span class="line">        top: y,</span><br><span class="line">        left: x</span><br><span class="line">      &#125;).addClass(<span class="string">"animate-ripple"</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>ripple.scss</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="at_rule">@<span class="keyword">charset</span> <span class="string">"utf-8"</span>;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/** ripple 涟漪效果 begin ***************************/</span></span><br><span class="line"><span class="class">.animate-ripple</span> &#123;</span><br><span class="line">  -webkit-<span class="attribute">animation</span><span class="value">: ripple <span class="number">0.3s</span> linear;</span></span><br><span class="line">  <span class="attribute">animation</span><span class="value">: ripple <span class="number">0.3s</span> linear;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@-webkit-keyframes<span class="preprocessor"> ripple</span> &#123;</span></span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">12</span>);</span></span><br><span class="line">    <span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">12</span>);</span></span><br><span class="line">    <span class="attribute">background-color</span><span class="value">: transparent;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="at_rule">@keyframes<span class="preprocessor"> ripple</span> &#123;</span></span><br><span class="line">  100% &#123;</span><br><span class="line">    -webkit-<span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">12</span>);</span></span><br><span class="line">    <span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">12</span>);</span></span><br><span class="line">    <span class="attribute">background-color</span><span class="value">: transparent;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class">.paper</span>&#123;</span><br><span class="line">  <span class="attribute">position</span><span class="value">: relative;</span></span><br><span class="line">  <span class="attribute">width</span><span class="value">: <span class="number">30vw</span>;</span></span><br><span class="line">  <span class="attribute">height</span><span class="value">: <span class="number">30vw</span>;</span></span><br><span class="line">  <span class="attribute">margin</span><span class="value">: auto;</span></span><br><span class="line">  <span class="attribute">overflow</span><span class="value">: hidden;</span></span><br><span class="line">  -webkit-<span class="attribute">border-radius</span><span class="value">:<span class="number">50%</span>;</span></span><br><span class="line">  -moz-<span class="attribute">border-radius</span><span class="value">:<span class="number">50%</span>;</span></span><br><span class="line">  <span class="attribute">border-radius</span><span class="value">:<span class="number">50%</span>;</span></span><br><span class="line">  -webkit-<span class="attribute">mask</span>-image<span class="value">: <span class="function">url</span>(data:image/png;</span>base64,iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAIAAACQd1PeAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAA5JREFUeNpiYGBgAAgwAAAEAAGbA+oJAAAAAElFTkSuQmCC);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class">.ripple</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span><span class="value">: <span class="function">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.45</span>);</span></span><br><span class="line">  -webkit-<span class="attribute">border-radius</span><span class="value">:<span class="number">100%</span>;</span></span><br><span class="line">  -moz-<span class="attribute">border-radius</span><span class="value">:<span class="number">100%</span>;</span></span><br><span class="line">  <span class="attribute">border-radius</span><span class="value">: <span class="number">100%</span>;</span></span><br><span class="line">  <span class="attribute">height</span><span class="value">: <span class="number">5vw</span>;</span></span><br><span class="line">  <span class="attribute">width</span><span class="value">: <span class="number">5vw</span>;</span></span><br><span class="line">  <span class="comment">//margin-top: -30vw;</span></span><br><span class="line">  <span class="attribute">position</span><span class="value">: absolute;</span></span><br><span class="line">  -webkit-<span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">0</span>);</span></span><br><span class="line">  <span class="attribute">transform</span><span class="value">: <span class="function">scale</span>(<span class="number">0</span>);</span></span><br><span class="line">  <span class="comment">//left: 50px;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/** ripple 涟漪效果 end ***************************/</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><code>css3点击涟漪效果 - 白小虫 - 博客园</code></p>
<p><a href="http://www.cnblogs.com/baixc/p/5046922.html" target="_blank" rel="external">http://www.cnblogs.com/baixc/p/5046922.html</a></p>
<hr>
<h1 id="Button的涟漪效果(水纹效果)">Button的涟漪效果(水纹效果)</h1><p><code>Android L Ripple Click Effect Demos</code></p>
<p><a href="http://www.cssscript.com/android-l-ripple-click-effect-with-javascript-and-css3/" target="_blank" rel="external">http://www.cssscript.com/android-l-ripple-click-effect-with-javascript-and-css3/</a></p>
<p><img src="http://7xnbs3.com1.z0.glb.clouddn.com/16-9-24/3481297.jpg" alt=""><br><!--
--><br><code>涟漪效果按钮的实现 - 笔记 - 前端网（W3Cfuns）</code><br><a href="http://www.w3cfuns.com/notes/12348/0522857f167c46a937e6962c0007259e.html" target="_blank" rel="external">http://www.w3cfuns.com/notes/12348/0522857f167c46a937e6962c0007259e.html</a></p>
<hr>
<h1 id="解决_border-radius_元素在应用了_transform_的子元素_时overflow:hidden_失效的问题">解决 border-radius 元素在应用了 transform 的子元素 时overflow:hidden 失效的问题</h1><p>解决方案：<br>使用webkit-mask-image 覆盖圆角溢出部分。(文章后面会提供关于webkit-mask-image的相关介绍)<br>-webkit-mask-image 可以使用图片、Gradient 渐变或者 SVG mask 作为元素的 mask 遮罩。在 WebKit 的兼容性还算可以。</p>
<p><code>解决 border-radius 元素在应用了 transform 的子元素 时overflow:hidden 失效的问题 - Lying二小 - 博客园</code><br><a href="http://www.cnblogs.com/lyingSmall/p/5337374.html" target="_blank" rel="external">http://www.cnblogs.com/lyingSmall/p/5337374.html</a></p>
<p><code>父元素设置了overflow:hidden和border-radius，子元素超出部分不隐藏？ - 前端开发 - 知乎</code><br><a href="http://www.zhihu.com/question/31347571" target="_blank" rel="external">http://www.zhihu.com/question/31347571</a></p>
<p><code>mask-image - CSS | MDN</code><br><a href="https://developer.mozilla.org/en-US/docs/Web/CSS/mask-image" target="_blank" rel="external">https://developer.mozilla.org/en-US/docs/Web/CSS/mask-image</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="代码">代码</h1><ul>
<li><p>home.html</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</]]>
    </summary>
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="涟漪效果" scheme="http://yoursite.com/tags/%E6%B6%9F%E6%BC%AA%E6%95%88%E6%9E%9C/"/>
    
  </entry>
  
</feed>
